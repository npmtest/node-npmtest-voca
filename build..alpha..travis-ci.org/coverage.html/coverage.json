{"/home/travis/build/npmtest/node-npmtest-voca/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_voca */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-voca/lib.npmtest_voca.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/lib.npmtest_voca.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_voca */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_voca = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_voca = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-voca/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-voca && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_voca */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_voca","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_voca.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_voca.rollup.js'] =","            local.assetsDict['/assets.npmtest_voca.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_voca.__dirname + '/lib.npmtest_voca.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":1,"141":1,"142":1,"143":1,"144":1,"145":0,"146":1,"147":0,"148":1,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":1,"213":0,"214":1,"215":0,"216":1,"217":0,"218":1,"219":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":1,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":1,"245":0,"246":1,"247":0,"248":1,"249":0,"250":0,"251":1,"252":0,"253":1,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":0,"293":1,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":1,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":1,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":1,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":1,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":1,"398":0,"399":0,"400":0,"401":0,"402":0,"403":1,"404":0,"405":1,"406":1,"407":0,"408":1,"409":0,"410":1,"411":0,"412":1,"413":1,"414":1,"415":0,"416":1,"417":0,"418":0,"419":1,"420":0,"421":0,"422":1,"423":0,"424":0,"425":1,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":1,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":1,"440":1,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":1,"452":0,"453":0,"454":1,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":1,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":1,"472":0,"473":0,"474":1,"475":0,"476":1,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":1,"486":0,"487":0,"488":0,"489":0,"490":1,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":1,"499":0,"500":0,"501":1,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":1,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":1,"531":1,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":0,"551":0,"552":0,"553":0,"554":0,"555":1,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":1,"584":0,"585":0,"586":0,"587":0,"588":1,"589":0,"590":0,"591":0,"592":1,"593":1,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":1,"607":1,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":1,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":1,"629":1,"630":1,"631":1,"632":1,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":1,"663":0,"664":1,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":1,"676":0,"677":0,"678":1,"679":0,"680":0,"681":1,"682":0,"683":0,"684":1,"685":0,"686":0,"687":1,"688":0,"689":0,"690":1,"691":0,"692":0,"693":1,"694":0,"695":0,"696":1,"697":0,"698":0,"699":1,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":1,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":1,"719":0,"720":0,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":1,"733":0,"734":0,"735":1,"736":0,"737":0,"738":1,"739":1,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":1,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":1,"754":0,"755":0,"756":0,"757":0,"758":0,"759":1,"760":1,"761":1,"762":1,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":1,"782":1,"783":1,"784":1,"785":1,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":1,"875":1,"876":1,"877":0,"878":1,"879":1,"880":0,"881":0,"882":0,"883":1,"884":1,"885":1,"886":1,"887":0,"888":0,"889":0,"890":1,"891":1,"892":1,"893":0,"894":0,"895":1,"896":0,"897":1,"898":0,"899":1,"900":0,"901":1,"902":0,"903":1,"904":0,"905":1,"906":0,"907":0,"908":0,"909":1,"910":1,"911":71,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":1,"919":71,"920":1,"921":0,"922":1,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":1,"930":0,"931":1,"932":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0,0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0,0,0,0,0,0,0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,1],"207":[1,0],"208":[1,1],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[1,0],"216":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":71,"139":0,"140":71,"141":0,"142":0,"143":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":28}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":21}}},"3":{"name":"isNil","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}}},"4":{"name":"coerceToBoolean","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":32}}},"5":{"name":"isString","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":27}}},"6":{"name":"coerceToString","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":31}}},"7":{"name":"capitalize","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":42}}},"8":{"name":"lowerCase","line":135,"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":28}}},"9":{"name":"nilDefault","line":402,"loc":{"start":{"line":402,"column":0},"end":{"line":402,"column":41}}},"10":{"name":"toString","line":415,"loc":{"start":{"line":415,"column":0},"end":{"line":415,"column":25}}},"11":{"name":"words","line":449,"loc":{"start":{"line":449,"column":0},"end":{"line":449,"column":40}}},"12":{"name":"wordToCamel","line":471,"loc":{"start":{"line":471,"column":0},"end":{"line":471,"column":34}}},"13":{"name":"camelCase","line":494,"loc":{"start":{"line":494,"column":0},"end":{"line":494,"column":28}}},"14":{"name":"decapitalize","line":518,"loc":{"start":{"line":518,"column":0},"end":{"line":518,"column":31}}},"15":{"name":"kebabCase","line":546,"loc":{"start":{"line":546,"column":0},"end":{"line":546,"column":28}}},"16":{"name":"snakeCase","line":573,"loc":{"start":{"line":573,"column":0},"end":{"line":573,"column":28}}},"17":{"name":"upperCase","line":594,"loc":{"start":{"line":594,"column":0},"end":{"line":594,"column":28}}},"18":{"name":"swapCase","line":616,"loc":{"start":{"line":616,"column":0},"end":{"line":616,"column":27}}},"19":{"name":"swapAndConcat","line":621,"loc":{"start":{"line":621,"column":0},"end":{"line":621,"column":43}}},"20":{"name":"titleCase","line":644,"loc":{"start":{"line":644,"column":0},"end":{"line":644,"column":41}}},"21":{"name":"(anonymous_21)","line":648,"loc":{"start":{"line":648,"column":44},"end":{"line":648,"column":60}}},"22":{"name":"clipNumber","line":664,"loc":{"start":{"line":664,"column":0},"end":{"line":664,"column":47}}},"23":{"name":"toInteger","line":690,"loc":{"start":{"line":690,"column":0},"end":{"line":690,"column":26}}},"24":{"name":"truncate","line":721,"loc":{"start":{"line":721,"column":0},"end":{"line":721,"column":40}}},"25":{"name":"charAt","line":748,"loc":{"start":{"line":748,"column":0},"end":{"line":748,"column":35}}},"26":{"name":"isHighSurrogate","line":765,"loc":{"start":{"line":765,"column":0},"end":{"line":765,"column":36}}},"27":{"name":"isLowSurrogate","line":776,"loc":{"start":{"line":776,"column":0},"end":{"line":776,"column":35}}},"28":{"name":"getAstralNumberFromSurrogatePair","line":788,"loc":{"start":{"line":788,"column":0},"end":{"line":788,"column":71}}},"29":{"name":"coerceToNumber","line":804,"loc":{"start":{"line":804,"column":0},"end":{"line":804,"column":31}}},"30":{"name":"nanDefault","line":825,"loc":{"start":{"line":825,"column":0},"end":{"line":825,"column":41}}},"31":{"name":"codePointAt","line":850,"loc":{"start":{"line":850,"column":0},"end":{"line":850,"column":40}}},"32":{"name":"first","line":889,"loc":{"start":{"line":889,"column":0},"end":{"line":889,"column":32}}},"33":{"name":"graphemeAt","line":917,"loc":{"start":{"line":917,"column":0},"end":{"line":917,"column":39}}},"34":{"name":"last","line":953,"loc":{"start":{"line":953,"column":0},"end":{"line":953,"column":31}}},"35":{"name":"prune","line":984,"loc":{"start":{"line":984,"column":0},"end":{"line":984,"column":37}}},"36":{"name":"(anonymous_36)","line":993,"loc":{"start":{"line":993,"column":33},"end":{"line":993,"column":57}}},"37":{"name":"slice","line":1025,"loc":{"start":{"line":1025,"column":0},"end":{"line":1025,"column":36}}},"38":{"name":"substr","line":1048,"loc":{"start":{"line":1048,"column":0},"end":{"line":1048,"column":40}}},"39":{"name":"substring","line":1072,"loc":{"start":{"line":1072,"column":0},"end":{"line":1072,"column":40}}},"40":{"name":"count","line":1089,"loc":{"start":{"line":1089,"column":0},"end":{"line":1089,"column":24}}},"41":{"name":"countGrapheme","line":1114,"loc":{"start":{"line":1114,"column":0},"end":{"line":1114,"column":32}}},"42":{"name":"countSubstrings","line":1135,"loc":{"start":{"line":1135,"column":0},"end":{"line":1135,"column":45}}},"43":{"name":"countWhere","line":1176,"loc":{"start":{"line":1176,"column":0},"end":{"line":1176,"column":49}}},"44":{"name":"(anonymous_44)","line":1182,"loc":{"start":{"line":1182,"column":36},"end":{"line":1182,"column":77}}},"45":{"name":"countWords","line":1211,"loc":{"start":{"line":1211,"column":0},"end":{"line":1211,"column":45}}},"46":{"name":"ReplacementIndex","line":1223,"loc":{"start":{"line":1223,"column":0},"end":{"line":1223,"column":28}}},"47":{"name":"(anonymous_47)","line":1233,"loc":{"start":{"line":1233,"column":39},"end":{"line":1233,"column":51}}},"48":{"name":"(anonymous_48)","line":1244,"loc":{"start":{"line":1244,"column":54},"end":{"line":1244,"column":74}}},"49":{"name":"(anonymous_49)","line":1257,"loc":{"start":{"line":1257,"column":48},"end":{"line":1257,"column":68}}},"50":{"name":"repeat","line":1309,"loc":{"start":{"line":1309,"column":0},"end":{"line":1309,"column":32}}},"51":{"name":"buildPadding","line":1333,"loc":{"start":{"line":1333,"column":0},"end":{"line":1333,"column":45}}},"52":{"name":"padLeft","line":1360,"loc":{"start":{"line":1360,"column":0},"end":{"line":1360,"column":39}}},"53":{"name":"padRight","line":1391,"loc":{"start":{"line":1391,"column":0},"end":{"line":1391,"column":40}}},"54":{"name":"alignAndPad","line":1409,"loc":{"start":{"line":1409,"column":0},"end":{"line":1409,"column":42}}},"55":{"name":"addSignToFormattedNumber","line":1428,"loc":{"start":{"line":1428,"column":0},"end":{"line":1428,"column":87}}},"56":{"name":"float","line":1444,"loc":{"start":{"line":1444,"column":0},"end":{"line":1444,"column":40}}},"57":{"name":"formatFloatAsShort","line":1479,"loc":{"start":{"line":1479,"column":0},"end":{"line":1479,"column":70}}},"58":{"name":"integerBase","line":1500,"loc":{"start":{"line":1500,"column":0},"end":{"line":1500,"column":46}}},"59":{"name":"integerDecimal","line":1535,"loc":{"start":{"line":1535,"column":0},"end":{"line":1535,"column":49}}},"60":{"name":"stringFormat","line":1551,"loc":{"start":{"line":1551,"column":0},"end":{"line":1551,"column":47}}},"61":{"name":"compute","line":1569,"loc":{"start":{"line":1569,"column":0},"end":{"line":1569,"column":42}}},"62":{"name":"ConversionSpecification","line":1606,"loc":{"start":{"line":1606,"column":0},"end":{"line":1606,"column":45}}},"63":{"name":"(anonymous_63)","line":1678,"loc":{"start":{"line":1678,"column":53},"end":{"line":1678,"column":65}}},"64":{"name":"(anonymous_64)","line":1688,"loc":{"start":{"line":1688,"column":56},"end":{"line":1688,"column":68}}},"65":{"name":"validate","line":1706,"loc":{"start":{"line":1706,"column":0},"end":{"line":1706,"column":57}}},"66":{"name":"match","line":1736,"loc":{"start":{"line":1736,"column":0},"end":{"line":1736,"column":195}}},"67":{"name":"sprintf","line":1929,"loc":{"start":{"line":1929,"column":0},"end":{"line":1929,"column":25}}},"68":{"name":"_toConsumableArray","line":1943,"loc":{"start":{"line":1943,"column":0},"end":{"line":1943,"column":33}}},"69":{"name":"vprintf","line":1964,"loc":{"start":{"line":1964,"column":0},"end":{"line":1964,"column":39}}},"70":{"name":"replaceSpecialCharacter","line":1984,"loc":{"start":{"line":1984,"column":0},"end":{"line":1984,"column":44}}},"71":{"name":"escapeHtml","line":2001,"loc":{"start":{"line":2001,"column":0},"end":{"line":2001,"column":29}}},"72":{"name":"escapeRegExp","line":2018,"loc":{"start":{"line":2018,"column":0},"end":{"line":2018,"column":31}}},"73":{"name":"reduceUnescapedString","line":2040,"loc":{"start":{"line":2040,"column":0},"end":{"line":2040,"column":44}}},"74":{"name":"unescapeHtml","line":2058,"loc":{"start":{"line":2058,"column":0},"end":{"line":2058,"column":31}}},"75":{"name":"indexOf","line":2081,"loc":{"start":{"line":2081,"column":0},"end":{"line":2081,"column":45}}},"76":{"name":"lastIndexOf","line":2104,"loc":{"start":{"line":2104,"column":0},"end":{"line":2104,"column":49}}},"77":{"name":"search","line":2127,"loc":{"start":{"line":2127,"column":0},"end":{"line":2127,"column":45}}},"78":{"name":"insert","line":2155,"loc":{"start":{"line":2155,"column":0},"end":{"line":2155,"column":45}}},"79":{"name":"getDiacriticsMap","line":2292,"loc":{"start":{"line":2292,"column":0},"end":{"line":2292,"column":28}}},"80":{"name":"(anonymous_80)","line":2297,"loc":{"start":{"line":2297,"column":34},"end":{"line":2297,"column":49}}},"81":{"name":"getLatinCharacter","line":2314,"loc":{"start":{"line":2314,"column":0},"end":{"line":2314,"column":38}}},"82":{"name":"removeCombiningMarks","line":2327,"loc":{"start":{"line":2327,"column":0},"end":{"line":2327,"column":57}}},"83":{"name":"latinise","line":2350,"loc":{"start":{"line":2350,"column":0},"end":{"line":2350,"column":27}}},"84":{"name":"pad","line":2379,"loc":{"start":{"line":2379,"column":0},"end":{"line":2379,"column":35}}},"85":{"name":"replace","line":2416,"loc":{"start":{"line":2416,"column":0},"end":{"line":2416,"column":48}}},"86":{"name":"getRegExpFlags","line":2428,"loc":{"start":{"line":2428,"column":0},"end":{"line":2428,"column":32}}},"87":{"name":"includes","line":2450,"loc":{"start":{"line":2450,"column":0},"end":{"line":2450,"column":45}}},"88":{"name":"appendFlagToRegExp","line":2471,"loc":{"start":{"line":2471,"column":0},"end":{"line":2471,"column":49}}},"89":{"name":"replaceAll","line":2498,"loc":{"start":{"line":2498,"column":0},"end":{"line":2498,"column":51}}},"90":{"name":"reverse","line":2522,"loc":{"start":{"line":2522,"column":0},"end":{"line":2522,"column":26}}},"91":{"name":"reverseGrapheme","line":2545,"loc":{"start":{"line":2545,"column":0},"end":{"line":2545,"column":34}}},"92":{"name":"(anonymous_92)","line":2550,"loc":{"start":{"line":2550,"column":64},"end":{"line":2550,"column":86}}},"93":{"name":"slugify","line":2580,"loc":{"start":{"line":2580,"column":0},"end":{"line":2580,"column":26}}},"94":{"name":"splice","line":2613,"loc":{"start":{"line":2613,"column":0},"end":{"line":2613,"column":52}}},"95":{"name":"(anonymous_95)","line":2632,"loc":{"start":{"line":2632,"column":21},"end":{"line":2632,"column":33}}},"96":{"name":"sliceIterator","line":2632,"loc":{"start":{"line":2632,"column":35},"end":{"line":2632,"column":66}}},"97":{"name":"(anonymous_97)","line":2632,"loc":{"start":{"line":2632,"column":436},"end":{"line":2632,"column":454}}},"98":{"name":"tr","line":2665,"loc":{"start":{"line":2665,"column":0},"end":{"line":2665,"column":31}}},"99":{"name":"extractKeysAndValues","line":2703,"loc":{"start":{"line":2703,"column":0},"end":{"line":2703,"column":38}}},"100":{"name":"(anonymous_100)","line":2705,"loc":{"start":{"line":2705,"column":49},"end":{"line":2705,"column":64}}},"101":{"name":"sortStringByLength","line":2711,"loc":{"start":{"line":2711,"column":0},"end":{"line":2711,"column":40}}},"102":{"name":"trimLeft","line":2737,"loc":{"start":{"line":2737,"column":0},"end":{"line":2737,"column":42}}},"103":{"name":"(anonymous_103)","line":2747,"loc":{"start":{"line":2747,"column":38},"end":{"line":2747,"column":68}}},"104":{"name":"trimRight","line":2775,"loc":{"start":{"line":2775,"column":0},"end":{"line":2775,"column":43}}},"105":{"name":"(anonymous_105)","line":2785,"loc":{"start":{"line":2785,"column":41},"end":{"line":2785,"column":71}}},"106":{"name":"trim","line":2811,"loc":{"start":{"line":2811,"column":0},"end":{"line":2811,"column":35}}},"107":{"name":"wordWrap","line":2864,"loc":{"start":{"line":2864,"column":0},"end":{"line":2864,"column":27}}},"108":{"name":"determineOptions","line":2920,"loc":{"start":{"line":2920,"column":0},"end":{"line":2920,"column":35}}},"109":{"name":"endsWith","line":2950,"loc":{"start":{"line":2950,"column":0},"end":{"line":2950,"column":42}}},"110":{"name":"isAlpha","line":2984,"loc":{"start":{"line":2984,"column":0},"end":{"line":2984,"column":26}}},"111":{"name":"isAlphaDigit","line":3008,"loc":{"start":{"line":3008,"column":0},"end":{"line":3008,"column":31}}},"112":{"name":"isBlank","line":3032,"loc":{"start":{"line":3032,"column":0},"end":{"line":3032,"column":26}}},"113":{"name":"isDigit","line":3056,"loc":{"start":{"line":3056,"column":0},"end":{"line":3056,"column":26}}},"114":{"name":"isEmpty","line":3080,"loc":{"start":{"line":3080,"column":0},"end":{"line":3080,"column":26}}},"115":{"name":"isLowerCase","line":3104,"loc":{"start":{"line":3104,"column":0},"end":{"line":3104,"column":30}}},"116":{"name":"isNumeric","line":3131,"loc":{"start":{"line":3131,"column":0},"end":{"line":3131,"column":28}}},"117":{"name":"isUpperCase","line":3152,"loc":{"start":{"line":3152,"column":0},"end":{"line":3152,"column":30}}},"118":{"name":"matches","line":3178,"loc":{"start":{"line":3178,"column":0},"end":{"line":3178,"column":42}}},"119":{"name":"startsWith","line":3213,"loc":{"start":{"line":3213,"column":0},"end":{"line":3213,"column":46}}},"120":{"name":"chars","line":3239,"loc":{"start":{"line":3239,"column":0},"end":{"line":3239,"column":24}}},"121":{"name":"codePoints","line":3262,"loc":{"start":{"line":3262,"column":0},"end":{"line":3262,"column":29}}},"122":{"name":"graphemes","line":3296,"loc":{"start":{"line":3296,"column":0},"end":{"line":3296,"column":28}}},"123":{"name":"split","line":3319,"loc":{"start":{"line":3319,"column":0},"end":{"line":3319,"column":42}}},"124":{"name":"trim$1","line":3344,"loc":{"start":{"line":3344,"column":0},"end":{"line":3344,"column":25}}},"125":{"name":"hasSubstringAtIndex","line":3365,"loc":{"start":{"line":3365,"column":0},"end":{"line":3365,"column":56}}},"126":{"name":"parseTagList","line":3383,"loc":{"start":{"line":3383,"column":0},"end":{"line":3383,"column":28}}},"127":{"name":"parseTagName","line":3403,"loc":{"start":{"line":3403,"column":0},"end":{"line":3403,"column":34}}},"128":{"name":"trim$2","line":3461,"loc":{"start":{"line":3461,"column":0},"end":{"line":3461,"column":53}}},"129":{"name":"getGlobalObject","line":3589,"loc":{"start":{"line":3589,"column":0},"end":{"line":3589,"column":27}}},"130":{"name":"noConflict","line":3624,"loc":{"start":{"line":3624,"column":0},"end":{"line":3624,"column":22}}},"131":{"name":"ChainWrapper","line":3788,"loc":{"start":{"line":3788,"column":0},"end":{"line":3788,"column":46}}},"132":{"name":"(anonymous_132)","line":3815,"loc":{"start":{"line":3815,"column":31},"end":{"line":3815,"column":43}}},"133":{"name":"(anonymous_133)","line":3825,"loc":{"start":{"line":3825,"column":33},"end":{"line":3825,"column":45}}},"134":{"name":"(anonymous_134)","line":3835,"loc":{"start":{"line":3835,"column":32},"end":{"line":3835,"column":44}}},"135":{"name":"(anonymous_135)","line":3845,"loc":{"start":{"line":3845,"column":34},"end":{"line":3845,"column":46}}},"136":{"name":"(anonymous_136)","line":3873,"loc":{"start":{"line":3873,"column":31},"end":{"line":3873,"column":43}}},"137":{"name":"(anonymous_137)","line":3897,"loc":{"start":{"line":3897,"column":30},"end":{"line":3897,"column":49}}},"138":{"name":"makeFunctionChainable","line":3919,"loc":{"start":{"line":3919,"column":0},"end":{"line":3919,"column":49}}},"139":{"name":"(anonymous_139)","line":3920,"loc":{"start":{"line":3920,"column":9},"end":{"line":3920,"column":21}}},"140":{"name":"(anonymous_140)","line":3934,"loc":{"start":{"line":3934,"column":31},"end":{"line":3934,"column":47}}},"141":{"name":"chain","line":3955,"loc":{"start":{"line":3955,"column":0},"end":{"line":3955,"column":24}}},"142":{"name":"(anonymous_142)","line":3959,"loc":{"start":{"line":3959,"column":32},"end":{"line":3959,"column":50}}},"143":{"name":"Voca","line":3983,"loc":{"start":{"line":3983,"column":0},"end":{"line":3983,"column":23}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":3993,"column":5}},"2":{"start":{"line":10,"column":1},"end":{"line":12,"column":24}},"3":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":47}},"5":{"start":{"line":36,"column":0},"end":{"line":43,"column":1}},"6":{"start":{"line":37,"column":2},"end":{"line":37,"column":95}},"7":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"8":{"start":{"line":40,"column":4},"end":{"line":40,"column":24}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"10":{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},"11":{"start":{"line":62,"column":2},"end":{"line":62,"column":37}},"12":{"start":{"line":77,"column":0},"end":{"line":87,"column":1}},"13":{"start":{"line":78,"column":2},"end":{"line":78,"column":92}},"14":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"15":{"start":{"line":81,"column":4},"end":{"line":81,"column":24}},"16":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"17":{"start":{"line":84,"column":4},"end":{"line":84,"column":17}},"18":{"start":{"line":86,"column":2},"end":{"line":86,"column":23}},"19":{"start":{"line":107,"column":0},"end":{"line":117,"column":1}},"20":{"start":{"line":108,"column":2},"end":{"line":108,"column":46}},"21":{"start":{"line":109,"column":2},"end":{"line":109,"column":60}},"22":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"23":{"start":{"line":111,"column":4},"end":{"line":111,"column":14}},"24":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"25":{"start":{"line":114,"column":4},"end":{"line":114,"column":48}},"26":{"start":{"line":116,"column":2},"end":{"line":116,"column":76}},"27":{"start":{"line":135,"column":0},"end":{"line":138,"column":1}},"28":{"start":{"line":136,"column":2},"end":{"line":136,"column":50}},"29":{"start":{"line":137,"column":2},"end":{"line":137,"column":37}},"30":{"start":{"line":146,"column":0},"end":{"line":146,"column":18}},"31":{"start":{"line":154,"column":0},"end":{"line":154,"column":35}},"32":{"start":{"line":162,"column":0},"end":{"line":162,"column":38}},"33":{"start":{"line":170,"column":0},"end":{"line":170,"column":37}},"34":{"start":{"line":178,"column":0},"end":{"line":178,"column":100}},"35":{"start":{"line":186,"column":0},"end":{"line":186,"column":115}},"36":{"start":{"line":195,"column":0},"end":{"line":195,"column":242}},"37":{"start":{"line":204,"column":0},"end":{"line":204,"column":98}},"38":{"start":{"line":212,"column":0},"end":{"line":215,"column":11}},"39":{"start":{"line":223,"column":0},"end":{"line":223,"column":59}},"40":{"start":{"line":231,"column":0},"end":{"line":231,"column":60}},"41":{"start":{"line":239,"column":0},"end":{"line":239,"column":61}},"42":{"start":{"line":247,"column":0},"end":{"line":247,"column":50}},"43":{"start":{"line":255,"column":0},"end":{"line":255,"column":63}},"44":{"start":{"line":263,"column":0},"end":{"line":263,"column":39}},"45":{"start":{"line":271,"column":0},"end":{"line":271,"column":49}},"46":{"start":{"line":279,"column":0},"end":{"line":279,"column":121}},"47":{"start":{"line":287,"column":0},"end":{"line":287,"column":38}},"48":{"start":{"line":295,"column":0},"end":{"line":295,"column":31}},"49":{"start":{"line":305,"column":0},"end":{"line":305,"column":42}},"50":{"start":{"line":313,"column":0},"end":{"line":313,"column":48}},"51":{"start":{"line":321,"column":0},"end":{"line":321,"column":76}},"52":{"start":{"line":329,"column":0},"end":{"line":329,"column":37}},"53":{"start":{"line":337,"column":0},"end":{"line":337,"column":1130}},"54":{"start":{"line":345,"column":0},"end":{"line":345,"column":1198}},"55":{"start":{"line":353,"column":0},"end":{"line":357,"column":71}},"56":{"start":{"line":365,"column":0},"end":{"line":365,"column":132}},"57":{"start":{"line":374,"column":0},"end":{"line":374,"column":110}},"58":{"start":{"line":383,"column":0},"end":{"line":383,"column":134}},"59":{"start":{"line":391,"column":0},"end":{"line":391,"column":45}},"60":{"start":{"line":402,"column":0},"end":{"line":404,"column":1}},"61":{"start":{"line":403,"column":2},"end":{"line":403,"column":46}},"62":{"start":{"line":415,"column":0},"end":{"line":423,"column":1}},"63":{"start":{"line":416,"column":2},"end":{"line":418,"column":3}},"64":{"start":{"line":417,"column":4},"end":{"line":417,"column":16}},"65":{"start":{"line":419,"column":2},"end":{"line":421,"column":3}},"66":{"start":{"line":420,"column":4},"end":{"line":420,"column":17}},"67":{"start":{"line":422,"column":2},"end":{"line":422,"column":23}},"68":{"start":{"line":449,"column":0},"end":{"line":461,"column":1}},"69":{"start":{"line":450,"column":2},"end":{"line":450,"column":46}},"70":{"start":{"line":451,"column":2},"end":{"line":451,"column":29}},"71":{"start":{"line":452,"column":2},"end":{"line":459,"column":3}},"72":{"start":{"line":453,"column":4},"end":{"line":453,"column":96}},"73":{"start":{"line":454,"column":9},"end":{"line":459,"column":3}},"74":{"start":{"line":455,"column":4},"end":{"line":455,"column":28}},"75":{"start":{"line":457,"column":4},"end":{"line":457,"column":54}},"76":{"start":{"line":458,"column":4},"end":{"line":458,"column":63}},"77":{"start":{"line":460,"column":2},"end":{"line":460,"column":60}},"78":{"start":{"line":471,"column":0},"end":{"line":473,"column":1}},"79":{"start":{"line":472,"column":2},"end":{"line":472,"column":64}},"80":{"start":{"line":494,"column":0},"end":{"line":500,"column":1}},"81":{"start":{"line":495,"column":2},"end":{"line":495,"column":46}},"82":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"83":{"start":{"line":497,"column":4},"end":{"line":497,"column":14}},"84":{"start":{"line":499,"column":2},"end":{"line":499,"column":56}},"85":{"start":{"line":518,"column":0},"end":{"line":524,"column":1}},"86":{"start":{"line":519,"column":2},"end":{"line":519,"column":46}},"87":{"start":{"line":520,"column":2},"end":{"line":522,"column":3}},"88":{"start":{"line":521,"column":4},"end":{"line":521,"column":14}},"89":{"start":{"line":523,"column":2},"end":{"line":523,"column":76}},"90":{"start":{"line":546,"column":0},"end":{"line":552,"column":1}},"91":{"start":{"line":547,"column":2},"end":{"line":547,"column":46}},"92":{"start":{"line":548,"column":2},"end":{"line":550,"column":3}},"93":{"start":{"line":549,"column":4},"end":{"line":549,"column":14}},"94":{"start":{"line":551,"column":2},"end":{"line":551,"column":55}},"95":{"start":{"line":573,"column":0},"end":{"line":579,"column":1}},"96":{"start":{"line":574,"column":2},"end":{"line":574,"column":46}},"97":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"98":{"start":{"line":576,"column":4},"end":{"line":576,"column":14}},"99":{"start":{"line":578,"column":2},"end":{"line":578,"column":55}},"100":{"start":{"line":594,"column":0},"end":{"line":597,"column":1}},"101":{"start":{"line":595,"column":2},"end":{"line":595,"column":46}},"102":{"start":{"line":596,"column":2},"end":{"line":596,"column":37}},"103":{"start":{"line":616,"column":0},"end":{"line":619,"column":1}},"104":{"start":{"line":617,"column":2},"end":{"line":617,"column":46}},"105":{"start":{"line":618,"column":2},"end":{"line":618,"column":59}},"106":{"start":{"line":621,"column":0},"end":{"line":625,"column":1}},"107":{"start":{"line":622,"column":2},"end":{"line":622,"column":42}},"108":{"start":{"line":623,"column":2},"end":{"line":623,"column":42}},"109":{"start":{"line":624,"column":2},"end":{"line":624,"column":69}},"110":{"start":{"line":644,"column":0},"end":{"line":652,"column":1}},"111":{"start":{"line":645,"column":2},"end":{"line":645,"column":46}},"112":{"start":{"line":646,"column":2},"end":{"line":646,"column":71}},"113":{"start":{"line":647,"column":2},"end":{"line":647,"column":96}},"114":{"start":{"line":648,"column":2},"end":{"line":651,"column":5}},"115":{"start":{"line":649,"column":4},"end":{"line":649,"column":43}},"116":{"start":{"line":650,"column":4},"end":{"line":650,"column":108}},"117":{"start":{"line":664,"column":0},"end":{"line":672,"column":1}},"118":{"start":{"line":665,"column":2},"end":{"line":667,"column":3}},"119":{"start":{"line":666,"column":4},"end":{"line":666,"column":21}},"120":{"start":{"line":668,"column":2},"end":{"line":670,"column":3}},"121":{"start":{"line":669,"column":4},"end":{"line":669,"column":19}},"122":{"start":{"line":671,"column":2},"end":{"line":671,"column":15}},"123":{"start":{"line":680,"column":0},"end":{"line":680,"column":40}},"124":{"start":{"line":690,"column":0},"end":{"line":698,"column":1}},"125":{"start":{"line":691,"column":2},"end":{"line":693,"column":3}},"126":{"start":{"line":692,"column":4},"end":{"line":692,"column":28}},"127":{"start":{"line":694,"column":2},"end":{"line":696,"column":3}},"128":{"start":{"line":695,"column":4},"end":{"line":695,"column":29}},"129":{"start":{"line":697,"column":2},"end":{"line":697,"column":17}},"130":{"start":{"line":721,"column":0},"end":{"line":729,"column":1}},"131":{"start":{"line":722,"column":2},"end":{"line":722,"column":46}},"132":{"start":{"line":723,"column":2},"end":{"line":723,"column":108}},"133":{"start":{"line":724,"column":2},"end":{"line":724,"column":45}},"134":{"start":{"line":725,"column":2},"end":{"line":727,"column":3}},"135":{"start":{"line":726,"column":4},"end":{"line":726,"column":25}},"136":{"start":{"line":728,"column":2},"end":{"line":728,"column":72}},"137":{"start":{"line":748,"column":0},"end":{"line":751,"column":1}},"138":{"start":{"line":749,"column":2},"end":{"line":749,"column":46}},"139":{"start":{"line":750,"column":2},"end":{"line":750,"column":40}},"140":{"start":{"line":753,"column":0},"end":{"line":753,"column":34}},"141":{"start":{"line":754,"column":0},"end":{"line":754,"column":32}},"142":{"start":{"line":755,"column":0},"end":{"line":755,"column":33}},"143":{"start":{"line":756,"column":0},"end":{"line":756,"column":31}},"144":{"start":{"line":765,"column":0},"end":{"line":767,"column":1}},"145":{"start":{"line":766,"column":2},"end":{"line":766,"column":78}},"146":{"start":{"line":776,"column":0},"end":{"line":778,"column":1}},"147":{"start":{"line":777,"column":2},"end":{"line":777,"column":76}},"148":{"start":{"line":788,"column":0},"end":{"line":790,"column":1}},"149":{"start":{"line":789,"column":2},"end":{"line":789,"column":103}},"150":{"start":{"line":804,"column":0},"end":{"line":814,"column":1}},"151":{"start":{"line":805,"column":2},"end":{"line":805,"column":91}},"152":{"start":{"line":807,"column":2},"end":{"line":809,"column":3}},"153":{"start":{"line":808,"column":4},"end":{"line":808,"column":24}},"154":{"start":{"line":810,"column":2},"end":{"line":812,"column":3}},"155":{"start":{"line":811,"column":4},"end":{"line":811,"column":17}},"156":{"start":{"line":813,"column":2},"end":{"line":813,"column":23}},"157":{"start":{"line":825,"column":0},"end":{"line":827,"column":1}},"158":{"start":{"line":826,"column":2},"end":{"line":826,"column":48}},"159":{"start":{"line":850,"column":0},"end":{"line":867,"column":1}},"160":{"start":{"line":851,"column":2},"end":{"line":851,"column":46}},"161":{"start":{"line":852,"column":2},"end":{"line":852,"column":49}},"162":{"start":{"line":853,"column":2},"end":{"line":853,"column":48}},"163":{"start":{"line":854,"column":2},"end":{"line":854,"column":49}},"164":{"start":{"line":855,"column":2},"end":{"line":857,"column":3}},"165":{"start":{"line":856,"column":4},"end":{"line":856,"column":21}},"166":{"start":{"line":858,"column":2},"end":{"line":858,"column":64}},"167":{"start":{"line":859,"column":2},"end":{"line":859,"column":31}},"168":{"start":{"line":860,"column":2},"end":{"line":865,"column":3}},"169":{"start":{"line":861,"column":4},"end":{"line":861,"column":67}},"170":{"start":{"line":862,"column":4},"end":{"line":864,"column":5}},"171":{"start":{"line":863,"column":6},"end":{"line":863,"column":79}},"172":{"start":{"line":866,"column":2},"end":{"line":866,"column":24}},"173":{"start":{"line":889,"column":0},"end":{"line":896,"column":1}},"174":{"start":{"line":890,"column":2},"end":{"line":890,"column":46}},"175":{"start":{"line":891,"column":2},"end":{"line":891,"column":89}},"176":{"start":{"line":892,"column":2},"end":{"line":894,"column":3}},"177":{"start":{"line":893,"column":4},"end":{"line":893,"column":25}},"178":{"start":{"line":895,"column":2},"end":{"line":895,"column":44}},"179":{"start":{"line":917,"column":0},"end":{"line":931,"column":1}},"180":{"start":{"line":918,"column":2},"end":{"line":918,"column":46}},"181":{"start":{"line":919,"column":2},"end":{"line":919,"column":48}},"182":{"start":{"line":920,"column":2},"end":{"line":920,"column":29}},"183":{"start":{"line":921,"column":2},"end":{"line":921,"column":29}},"184":{"start":{"line":922,"column":2},"end":{"line":922,"column":49}},"185":{"start":{"line":923,"column":2},"end":{"line":929,"column":3}},"186":{"start":{"line":924,"column":4},"end":{"line":927,"column":5}},"187":{"start":{"line":925,"column":6},"end":{"line":925,"column":45}},"188":{"start":{"line":926,"column":6},"end":{"line":926,"column":30}},"189":{"start":{"line":928,"column":4},"end":{"line":928,"column":25}},"190":{"start":{"line":930,"column":2},"end":{"line":930,"column":12}},"191":{"start":{"line":953,"column":0},"end":{"line":960,"column":1}},"192":{"start":{"line":954,"column":2},"end":{"line":954,"column":46}},"193":{"start":{"line":955,"column":2},"end":{"line":955,"column":89}},"194":{"start":{"line":956,"column":2},"end":{"line":958,"column":3}},"195":{"start":{"line":957,"column":4},"end":{"line":957,"column":25}},"196":{"start":{"line":959,"column":2},"end":{"line":959,"column":75}},"197":{"start":{"line":984,"column":0},"end":{"line":1000,"column":1}},"198":{"start":{"line":985,"column":2},"end":{"line":985,"column":46}},"199":{"start":{"line":986,"column":2},"end":{"line":986,"column":108}},"200":{"start":{"line":987,"column":2},"end":{"line":987,"column":45}},"201":{"start":{"line":988,"column":2},"end":{"line":990,"column":3}},"202":{"start":{"line":989,"column":4},"end":{"line":989,"column":25}},"203":{"start":{"line":991,"column":2},"end":{"line":991,"column":92}},"204":{"start":{"line":992,"column":2},"end":{"line":992,"column":26}},"205":{"start":{"line":993,"column":2},"end":{"line":998,"column":5}},"206":{"start":{"line":994,"column":4},"end":{"line":994,"column":48}},"207":{"start":{"line":995,"column":4},"end":{"line":997,"column":5}},"208":{"start":{"line":996,"column":6},"end":{"line":996,"column":41}},"209":{"start":{"line":999,"column":2},"end":{"line":999,"column":62}},"210":{"start":{"line":1025,"column":0},"end":{"line":1027,"column":1}},"211":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":51}},"212":{"start":{"line":1048,"column":0},"end":{"line":1050,"column":1}},"213":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":55}},"214":{"start":{"line":1072,"column":0},"end":{"line":1074,"column":1}},"215":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":55}},"216":{"start":{"line":1089,"column":0},"end":{"line":1091,"column":1}},"217":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":40}},"218":{"start":{"line":1114,"column":0},"end":{"line":1116,"column":1}},"219":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":114}},"220":{"start":{"line":1135,"column":0},"end":{"line":1152,"column":1}},"221":{"start":{"line":1136,"column":2},"end":{"line":1136,"column":46}},"222":{"start":{"line":1137,"column":2},"end":{"line":1137,"column":50}},"223":{"start":{"line":1138,"column":2},"end":{"line":1138,"column":47}},"224":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":16}},"225":{"start":{"line":1140,"column":2},"end":{"line":1140,"column":21}},"226":{"start":{"line":1141,"column":2},"end":{"line":1143,"column":3}},"227":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":17}},"228":{"start":{"line":1144,"column":2},"end":{"line":1150,"column":30}},"229":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":68}},"230":{"start":{"line":1146,"column":4},"end":{"line":1149,"column":5}},"231":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":14}},"232":{"start":{"line":1148,"column":6},"end":{"line":1148,"column":36}},"233":{"start":{"line":1151,"column":2},"end":{"line":1151,"column":15}},"234":{"start":{"line":1154,"column":0},"end":{"line":1154,"column":36}},"235":{"start":{"line":1176,"column":0},"end":{"line":1185,"column":1}},"236":{"start":{"line":1177,"column":2},"end":{"line":1177,"column":46}},"237":{"start":{"line":1178,"column":2},"end":{"line":1180,"column":3}},"238":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":13}},"239":{"start":{"line":1181,"column":2},"end":{"line":1181,"column":53}},"240":{"start":{"line":1182,"column":2},"end":{"line":1184,"column":8}},"241":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":97}},"242":{"start":{"line":1211,"column":0},"end":{"line":1213,"column":1}},"243":{"start":{"line":1212,"column":2},"end":{"line":1212,"column":47}},"244":{"start":{"line":1223,"column":0},"end":{"line":1225,"column":1}},"245":{"start":{"line":1224,"column":2},"end":{"line":1224,"column":17}},"246":{"start":{"line":1233,"column":0},"end":{"line":1235,"column":2}},"247":{"start":{"line":1234,"column":2},"end":{"line":1234,"column":15}},"248":{"start":{"line":1244,"column":0},"end":{"line":1248,"column":2}},"249":{"start":{"line":1245,"column":2},"end":{"line":1247,"column":3}},"250":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":21}},"251":{"start":{"line":1257,"column":0},"end":{"line":1259,"column":2}},"252":{"start":{"line":1258,"column":2},"end":{"line":1258,"column":53}},"253":{"start":{"line":1261,"column":0},"end":{"line":1290,"column":3}},"254":{"start":{"line":1309,"column":0},"end":{"line":1323,"column":1}},"255":{"start":{"line":1310,"column":2},"end":{"line":1310,"column":46}},"256":{"start":{"line":1311,"column":2},"end":{"line":1311,"column":86}},"257":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":24}},"258":{"start":{"line":1313,"column":2},"end":{"line":1321,"column":3}},"259":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},"260":{"start":{"line":1315,"column":6},"end":{"line":1315,"column":36}},"261":{"start":{"line":1317,"column":4},"end":{"line":1319,"column":5}},"262":{"start":{"line":1318,"column":6},"end":{"line":1318,"column":37}},"263":{"start":{"line":1320,"column":4},"end":{"line":1320,"column":19}},"264":{"start":{"line":1322,"column":2},"end":{"line":1322,"column":22}},"265":{"start":{"line":1333,"column":0},"end":{"line":1337,"column":1}},"266":{"start":{"line":1334,"column":2},"end":{"line":1334,"column":65}},"267":{"start":{"line":1335,"column":2},"end":{"line":1335,"column":52}},"268":{"start":{"line":1336,"column":2},"end":{"line":1336,"column":82}},"269":{"start":{"line":1360,"column":0},"end":{"line":1368,"column":1}},"270":{"start":{"line":1361,"column":2},"end":{"line":1361,"column":46}},"271":{"start":{"line":1362,"column":2},"end":{"line":1362,"column":89}},"272":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":43}},"273":{"start":{"line":1364,"column":2},"end":{"line":1366,"column":3}},"274":{"start":{"line":1365,"column":4},"end":{"line":1365,"column":25}},"275":{"start":{"line":1367,"column":2},"end":{"line":1367,"column":83}},"276":{"start":{"line":1391,"column":0},"end":{"line":1399,"column":1}},"277":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":46}},"278":{"start":{"line":1393,"column":2},"end":{"line":1393,"column":89}},"279":{"start":{"line":1394,"column":2},"end":{"line":1394,"column":43}},"280":{"start":{"line":1395,"column":2},"end":{"line":1397,"column":3}},"281":{"start":{"line":1396,"column":4},"end":{"line":1396,"column":25}},"282":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":83}},"283":{"start":{"line":1409,"column":0},"end":{"line":1416,"column":1}},"284":{"start":{"line":1410,"column":2},"end":{"line":1410,"column":31}},"285":{"start":{"line":1411,"column":2},"end":{"line":1413,"column":3}},"286":{"start":{"line":1412,"column":4},"end":{"line":1412,"column":19}},"287":{"start":{"line":1414,"column":2},"end":{"line":1414,"column":91}},"288":{"start":{"line":1415,"column":2},"end":{"line":1415,"column":67}},"289":{"start":{"line":1428,"column":0},"end":{"line":1433,"column":1}},"290":{"start":{"line":1429,"column":2},"end":{"line":1431,"column":3}},"291":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":69}},"292":{"start":{"line":1432,"column":2},"end":{"line":1432,"column":30}},"293":{"start":{"line":1444,"column":0},"end":{"line":1468,"column":1}},"294":{"start":{"line":1445,"column":2},"end":{"line":1445,"column":50}},"295":{"start":{"line":1446,"column":2},"end":{"line":1446,"column":36}},"296":{"start":{"line":1447,"column":2},"end":{"line":1449,"column":3}},"297":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":26}},"298":{"start":{"line":1450,"column":2},"end":{"line":1450,"column":58}},"299":{"start":{"line":1451,"column":2},"end":{"line":1465,"column":3}},"300":{"start":{"line":1453,"column":6},"end":{"line":1453,"column":66}},"301":{"start":{"line":1454,"column":6},"end":{"line":1454,"column":12}},"302":{"start":{"line":1456,"column":6},"end":{"line":1456,"column":72}},"303":{"start":{"line":1457,"column":6},"end":{"line":1457,"column":12}},"304":{"start":{"line":1459,"column":6},"end":{"line":1459,"column":86}},"305":{"start":{"line":1460,"column":6},"end":{"line":1460,"column":12}},"306":{"start":{"line":1463,"column":6},"end":{"line":1463,"column":90}},"307":{"start":{"line":1464,"column":6},"end":{"line":1464,"column":12}},"308":{"start":{"line":1466,"column":2},"end":{"line":1466,"column":103}},"309":{"start":{"line":1467,"column":2},"end":{"line":1467,"column":46}},"310":{"start":{"line":1479,"column":0},"end":{"line":1489,"column":1}},"311":{"start":{"line":1480,"column":2},"end":{"line":1482,"column":3}},"312":{"start":{"line":1481,"column":4},"end":{"line":1481,"column":15}},"313":{"start":{"line":1483,"column":2},"end":{"line":1483,"column":57}},"314":{"start":{"line":1484,"column":2},"end":{"line":1484,"column":112}},"315":{"start":{"line":1485,"column":2},"end":{"line":1487,"column":3}},"316":{"start":{"line":1486,"column":4},"end":{"line":1486,"column":62}},"317":{"start":{"line":1488,"column":2},"end":{"line":1488,"column":30}},"318":{"start":{"line":1500,"column":0},"end":{"line":1524,"column":1}},"319":{"start":{"line":1501,"column":2},"end":{"line":1501,"column":38}},"320":{"start":{"line":1502,"column":2},"end":{"line":1504,"column":3}},"321":{"start":{"line":1503,"column":4},"end":{"line":1503,"column":16}},"322":{"start":{"line":1505,"column":2},"end":{"line":1505,"column":26}},"323":{"start":{"line":1506,"column":2},"end":{"line":1522,"column":3}},"324":{"start":{"line":1508,"column":6},"end":{"line":1508,"column":45}},"325":{"start":{"line":1509,"column":6},"end":{"line":1509,"column":12}},"326":{"start":{"line":1511,"column":6},"end":{"line":1511,"column":53}},"327":{"start":{"line":1512,"column":6},"end":{"line":1512,"column":12}},"328":{"start":{"line":1514,"column":6},"end":{"line":1514,"column":52}},"329":{"start":{"line":1515,"column":6},"end":{"line":1515,"column":12}},"330":{"start":{"line":1517,"column":6},"end":{"line":1517,"column":58}},"331":{"start":{"line":1518,"column":6},"end":{"line":1518,"column":12}},"332":{"start":{"line":1520,"column":6},"end":{"line":1520,"column":72}},"333":{"start":{"line":1521,"column":6},"end":{"line":1521,"column":12}},"334":{"start":{"line":1523,"column":2},"end":{"line":1523,"column":33}},"335":{"start":{"line":1535,"column":0},"end":{"line":1541,"column":1}},"336":{"start":{"line":1536,"column":2},"end":{"line":1536,"column":38}},"337":{"start":{"line":1537,"column":2},"end":{"line":1539,"column":3}},"338":{"start":{"line":1538,"column":4},"end":{"line":1538,"column":16}},"339":{"start":{"line":1540,"column":2},"end":{"line":1540,"column":74}},"340":{"start":{"line":1551,"column":0},"end":{"line":1558,"column":1}},"341":{"start":{"line":1552,"column":2},"end":{"line":1552,"column":41}},"342":{"start":{"line":1553,"column":2},"end":{"line":1553,"column":39}},"343":{"start":{"line":1554,"column":2},"end":{"line":1556,"column":3}},"344":{"start":{"line":1555,"column":4},"end":{"line":1555,"column":73}},"345":{"start":{"line":1557,"column":2},"end":{"line":1557,"column":30}},"346":{"start":{"line":1569,"column":0},"end":{"line":1597,"column":1}},"347":{"start":{"line":1570,"column":2},"end":{"line":1570,"column":30}},"348":{"start":{"line":1571,"column":2},"end":{"line":1594,"column":3}},"349":{"start":{"line":1573,"column":6},"end":{"line":1573,"column":36}},"350":{"start":{"line":1574,"column":6},"end":{"line":1574,"column":12}},"351":{"start":{"line":1577,"column":6},"end":{"line":1577,"column":38}},"352":{"start":{"line":1578,"column":6},"end":{"line":1578,"column":12}},"353":{"start":{"line":1585,"column":6},"end":{"line":1585,"column":35}},"354":{"start":{"line":1586,"column":6},"end":{"line":1586,"column":12}},"355":{"start":{"line":1592,"column":6},"end":{"line":1592,"column":29}},"356":{"start":{"line":1593,"column":6},"end":{"line":1593,"column":12}},"357":{"start":{"line":1595,"column":2},"end":{"line":1595,"column":64}},"358":{"start":{"line":1596,"column":2},"end":{"line":1596,"column":50}},"359":{"start":{"line":1606,"column":0},"end":{"line":1670,"column":1}},"360":{"start":{"line":1615,"column":2},"end":{"line":1615,"column":36}},"361":{"start":{"line":1624,"column":2},"end":{"line":1624,"column":48}},"362":{"start":{"line":1633,"column":2},"end":{"line":1633,"column":54}},"363":{"start":{"line":1642,"column":2},"end":{"line":1642,"column":58}},"364":{"start":{"line":1651,"column":2},"end":{"line":1651,"column":32}},"365":{"start":{"line":1660,"column":2},"end":{"line":1660,"column":40}},"366":{"start":{"line":1669,"column":2},"end":{"line":1669,"column":48}},"367":{"start":{"line":1678,"column":0},"end":{"line":1680,"column":2}},"368":{"start":{"line":1679,"column":2},"end":{"line":1679,"column":58}},"369":{"start":{"line":1688,"column":0},"end":{"line":1694,"column":2}},"370":{"start":{"line":1689,"column":2},"end":{"line":1689,"column":64}},"371":{"start":{"line":1690,"column":2},"end":{"line":1692,"column":3}},"372":{"start":{"line":1691,"column":4},"end":{"line":1691,"column":43}},"373":{"start":{"line":1693,"column":2},"end":{"line":1693,"column":26}},"374":{"start":{"line":1706,"column":0},"end":{"line":1716,"column":1}},"375":{"start":{"line":1707,"column":2},"end":{"line":1709,"column":3}},"376":{"start":{"line":1708,"column":4},"end":{"line":1708,"column":57}},"377":{"start":{"line":1710,"column":2},"end":{"line":1712,"column":3}},"378":{"start":{"line":1711,"column":4},"end":{"line":1711,"column":52}},"379":{"start":{"line":1713,"column":2},"end":{"line":1715,"column":3}},"380":{"start":{"line":1714,"column":4},"end":{"line":1714,"column":76}},"381":{"start":{"line":1736,"column":0},"end":{"line":1753,"column":1}},"382":{"start":{"line":1737,"column":2},"end":{"line":1745,"column":5}},"383":{"start":{"line":1746,"column":2},"end":{"line":1748,"column":3}},"384":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":44}},"385":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":77}},"386":{"start":{"line":1750,"column":2},"end":{"line":1750,"column":54}},"387":{"start":{"line":1751,"column":2},"end":{"line":1751,"column":68}},"388":{"start":{"line":1752,"column":2},"end":{"line":1752,"column":67}},"389":{"start":{"line":1929,"column":0},"end":{"line":1941,"column":1}},"390":{"start":{"line":1930,"column":2},"end":{"line":1930,"column":44}},"391":{"start":{"line":1931,"column":2},"end":{"line":1933,"column":3}},"392":{"start":{"line":1932,"column":4},"end":{"line":1932,"column":24}},"393":{"start":{"line":1935,"column":2},"end":{"line":1937,"column":3}},"394":{"start":{"line":1936,"column":4},"end":{"line":1936,"column":45}},"395":{"start":{"line":1939,"column":2},"end":{"line":1939,"column":90}},"396":{"start":{"line":1940,"column":2},"end":{"line":1940,"column":86}},"397":{"start":{"line":1943,"column":0},"end":{"line":1943,"column":195}},"398":{"start":{"line":1943,"column":35},"end":{"line":1943,"column":193}},"399":{"start":{"line":1943,"column":61},"end":{"line":1943,"column":145}},"400":{"start":{"line":1943,"column":126},"end":{"line":1943,"column":143}},"401":{"start":{"line":1943,"column":146},"end":{"line":1943,"column":158}},"402":{"start":{"line":1943,"column":168},"end":{"line":1943,"column":191}},"403":{"start":{"line":1964,"column":0},"end":{"line":1966,"column":1}},"404":{"start":{"line":1965,"column":2},"end":{"line":1965,"column":101}},"405":{"start":{"line":1968,"column":0},"end":{"line":1975,"column":2}},"406":{"start":{"line":1984,"column":0},"end":{"line":1986,"column":1}},"407":{"start":{"line":1985,"column":2},"end":{"line":1985,"column":40}},"408":{"start":{"line":2001,"column":0},"end":{"line":2003,"column":1}},"409":{"start":{"line":2002,"column":2},"end":{"line":2002,"column":98}},"410":{"start":{"line":2018,"column":0},"end":{"line":2020,"column":1}},"411":{"start":{"line":2019,"column":2},"end":{"line":2019,"column":76}},"412":{"start":{"line":2022,"column":0},"end":{"line":2029,"column":2}},"413":{"start":{"line":2030,"column":0},"end":{"line":2030,"column":52}},"414":{"start":{"line":2040,"column":0},"end":{"line":2042,"column":1}},"415":{"start":{"line":2041,"column":2},"end":{"line":2041,"column":57}},"416":{"start":{"line":2058,"column":0},"end":{"line":2061,"column":1}},"417":{"start":{"line":2059,"column":2},"end":{"line":2059,"column":46}},"418":{"start":{"line":2060,"column":2},"end":{"line":2060,"column":65}},"419":{"start":{"line":2081,"column":0},"end":{"line":2084,"column":1}},"420":{"start":{"line":2082,"column":2},"end":{"line":2082,"column":46}},"421":{"start":{"line":2083,"column":2},"end":{"line":2083,"column":50}},"422":{"start":{"line":2104,"column":0},"end":{"line":2107,"column":1}},"423":{"start":{"line":2105,"column":2},"end":{"line":2105,"column":46}},"424":{"start":{"line":2106,"column":2},"end":{"line":2106,"column":54}},"425":{"start":{"line":2127,"column":0},"end":{"line":2135,"column":1}},"426":{"start":{"line":2128,"column":2},"end":{"line":2128,"column":46}},"427":{"start":{"line":2129,"column":2},"end":{"line":2129,"column":105}},"428":{"start":{"line":2130,"column":2},"end":{"line":2130,"column":73}},"429":{"start":{"line":2131,"column":2},"end":{"line":2133,"column":3}},"430":{"start":{"line":2132,"column":4},"end":{"line":2132,"column":34}},"431":{"start":{"line":2134,"column":2},"end":{"line":2134,"column":20}},"432":{"start":{"line":2155,"column":0},"end":{"line":2163,"column":1}},"433":{"start":{"line":2156,"column":2},"end":{"line":2156,"column":46}},"434":{"start":{"line":2157,"column":2},"end":{"line":2157,"column":48}},"435":{"start":{"line":2158,"column":2},"end":{"line":2158,"column":48}},"436":{"start":{"line":2159,"column":2},"end":{"line":2161,"column":3}},"437":{"start":{"line":2160,"column":4},"end":{"line":2160,"column":25}},"438":{"start":{"line":2162,"column":2},"end":{"line":2162,"column":103}},"439":{"start":{"line":2172,"column":0},"end":{"line":2282,"column":2}},"440":{"start":{"line":2284,"column":0},"end":{"line":2284,"column":25}},"441":{"start":{"line":2292,"column":0},"end":{"line":2305,"column":1}},"442":{"start":{"line":2293,"column":2},"end":{"line":2295,"column":3}},"443":{"start":{"line":2294,"column":4},"end":{"line":2294,"column":25}},"444":{"start":{"line":2296,"column":2},"end":{"line":2296,"column":21}},"445":{"start":{"line":2297,"column":2},"end":{"line":2303,"column":5}},"446":{"start":{"line":2298,"column":4},"end":{"line":2298,"column":37}},"447":{"start":{"line":2299,"column":4},"end":{"line":2302,"column":5}},"448":{"start":{"line":2300,"column":6},"end":{"line":2300,"column":40}},"449":{"start":{"line":2301,"column":6},"end":{"line":2301,"column":37}},"450":{"start":{"line":2304,"column":2},"end":{"line":2304,"column":23}},"451":{"start":{"line":2314,"column":0},"end":{"line":2317,"column":1}},"452":{"start":{"line":2315,"column":2},"end":{"line":2315,"column":64}},"453":{"start":{"line":2316,"column":2},"end":{"line":2316,"column":75}},"454":{"start":{"line":2327,"column":0},"end":{"line":2329,"column":1}},"455":{"start":{"line":2328,"column":2},"end":{"line":2328,"column":24}},"456":{"start":{"line":2350,"column":0},"end":{"line":2356,"column":1}},"457":{"start":{"line":2351,"column":2},"end":{"line":2351,"column":46}},"458":{"start":{"line":2352,"column":2},"end":{"line":2354,"column":3}},"459":{"start":{"line":2353,"column":4},"end":{"line":2353,"column":14}},"460":{"start":{"line":2355,"column":2},"end":{"line":2355,"column":122}},"461":{"start":{"line":2379,"column":0},"end":{"line":2390,"column":1}},"462":{"start":{"line":2380,"column":2},"end":{"line":2380,"column":46}},"463":{"start":{"line":2381,"column":2},"end":{"line":2381,"column":89}},"464":{"start":{"line":2382,"column":2},"end":{"line":2382,"column":43}},"465":{"start":{"line":2383,"column":2},"end":{"line":2385,"column":3}},"466":{"start":{"line":2384,"column":4},"end":{"line":2384,"column":25}},"467":{"start":{"line":2386,"column":2},"end":{"line":2386,"column":55}},"468":{"start":{"line":2387,"column":2},"end":{"line":2387,"column":55}},"469":{"start":{"line":2388,"column":2},"end":{"line":2388,"column":53}},"470":{"start":{"line":2389,"column":2},"end":{"line":2389,"column":142}},"471":{"start":{"line":2416,"column":0},"end":{"line":2419,"column":1}},"472":{"start":{"line":2417,"column":2},"end":{"line":2417,"column":46}},"473":{"start":{"line":2418,"column":2},"end":{"line":2418,"column":53}},"474":{"start":{"line":2428,"column":0},"end":{"line":2430,"column":1}},"475":{"start":{"line":2429,"column":2},"end":{"line":2429,"column":50}},"476":{"start":{"line":2450,"column":0},"end":{"line":2461,"column":1}},"477":{"start":{"line":2451,"column":2},"end":{"line":2451,"column":46}},"478":{"start":{"line":2452,"column":2},"end":{"line":2452,"column":38}},"479":{"start":{"line":2453,"column":2},"end":{"line":2455,"column":3}},"480":{"start":{"line":2454,"column":4},"end":{"line":2454,"column":17}},"481":{"start":{"line":2456,"column":2},"end":{"line":2458,"column":3}},"482":{"start":{"line":2457,"column":4},"end":{"line":2457,"column":16}},"483":{"start":{"line":2459,"column":2},"end":{"line":2459,"column":92}},"484":{"start":{"line":2460,"column":2},"end":{"line":2460,"column":62}},"485":{"start":{"line":2471,"column":0},"end":{"line":2477,"column":1}},"486":{"start":{"line":2472,"column":2},"end":{"line":2472,"column":55}},"487":{"start":{"line":2473,"column":2},"end":{"line":2475,"column":3}},"488":{"start":{"line":2474,"column":4},"end":{"line":2474,"column":75}},"489":{"start":{"line":2476,"column":2},"end":{"line":2476,"column":17}},"490":{"start":{"line":2498,"column":0},"end":{"line":2507,"column":1}},"491":{"start":{"line":2499,"column":2},"end":{"line":2499,"column":46}},"492":{"start":{"line":2500,"column":2},"end":{"line":2500,"column":23}},"493":{"start":{"line":2501,"column":2},"end":{"line":2505,"column":3}},"494":{"start":{"line":2502,"column":4},"end":{"line":2502,"column":52}},"495":{"start":{"line":2503,"column":9},"end":{"line":2505,"column":3}},"496":{"start":{"line":2504,"column":4},"end":{"line":2504,"column":46}},"497":{"start":{"line":2506,"column":2},"end":{"line":2506,"column":52}},"498":{"start":{"line":2522,"column":0},"end":{"line":2525,"column":1}},"499":{"start":{"line":2523,"column":2},"end":{"line":2523,"column":46}},"500":{"start":{"line":2524,"column":2},"end":{"line":2524,"column":52}},"501":{"start":{"line":2545,"column":0},"end":{"line":2559,"column":1}},"502":{"start":{"line":2546,"column":2},"end":{"line":2546,"column":46}},"503":{"start":{"line":2550,"column":2},"end":{"line":2552,"column":45}},"504":{"start":{"line":2551,"column":4},"end":{"line":2551,"column":36}},"505":{"start":{"line":2553,"column":2},"end":{"line":2553,"column":26}},"506":{"start":{"line":2554,"column":2},"end":{"line":2554,"column":35}},"507":{"start":{"line":2555,"column":2},"end":{"line":2557,"column":3}},"508":{"start":{"line":2556,"column":4},"end":{"line":2556,"column":50}},"509":{"start":{"line":2558,"column":2},"end":{"line":2558,"column":24}},"510":{"start":{"line":2580,"column":0},"end":{"line":2587,"column":1}},"511":{"start":{"line":2581,"column":2},"end":{"line":2581,"column":46}},"512":{"start":{"line":2582,"column":2},"end":{"line":2584,"column":3}},"513":{"start":{"line":2583,"column":4},"end":{"line":2583,"column":14}},"514":{"start":{"line":2585,"column":2},"end":{"line":2585,"column":82}},"515":{"start":{"line":2586,"column":2},"end":{"line":2586,"column":39}},"516":{"start":{"line":2613,"column":0},"end":{"line":2630,"column":1}},"517":{"start":{"line":2614,"column":2},"end":{"line":2614,"column":46}},"518":{"start":{"line":2615,"column":2},"end":{"line":2615,"column":42}},"519":{"start":{"line":2616,"column":2},"end":{"line":2616,"column":44}},"520":{"start":{"line":2617,"column":2},"end":{"line":2624,"column":3}},"521":{"start":{"line":2618,"column":4},"end":{"line":2618,"column":57}},"522":{"start":{"line":2619,"column":4},"end":{"line":2621,"column":5}},"523":{"start":{"line":2620,"column":6},"end":{"line":2620,"column":24}},"524":{"start":{"line":2622,"column":9},"end":{"line":2624,"column":3}},"525":{"start":{"line":2623,"column":4},"end":{"line":2623,"column":41}},"526":{"start":{"line":2625,"column":2},"end":{"line":2625,"column":92}},"527":{"start":{"line":2626,"column":2},"end":{"line":2628,"column":3}},"528":{"start":{"line":2627,"column":4},"end":{"line":2627,"column":26}},"529":{"start":{"line":2629,"column":2},"end":{"line":2629,"column":118}},"530":{"start":{"line":2632,"column":0},"end":{"line":2632,"column":664}},"531":{"start":{"line":2632,"column":35},"end":{"line":2632,"column":428}},"532":{"start":{"line":2632,"column":68},"end":{"line":2632,"column":82}},"533":{"start":{"line":2632,"column":83},"end":{"line":2632,"column":97}},"534":{"start":{"line":2632,"column":98},"end":{"line":2632,"column":113}},"535":{"start":{"line":2632,"column":114},"end":{"line":2632,"column":133}},"536":{"start":{"line":2632,"column":134},"end":{"line":2632,"column":413}},"537":{"start":{"line":2632,"column":140},"end":{"line":2632,"column":283}},"538":{"start":{"line":2632,"column":226},"end":{"line":2632,"column":246}},"539":{"start":{"line":2632,"column":247},"end":{"line":2632,"column":281}},"540":{"start":{"line":2632,"column":275},"end":{"line":2632,"column":281}},"541":{"start":{"line":2632,"column":300},"end":{"line":2632,"column":310}},"542":{"start":{"line":2632,"column":311},"end":{"line":2632,"column":320}},"543":{"start":{"line":2632,"column":333},"end":{"line":2632,"column":411}},"544":{"start":{"line":2632,"column":339},"end":{"line":2632,"column":379}},"545":{"start":{"line":2632,"column":364},"end":{"line":2632,"column":379}},"546":{"start":{"line":2632,"column":392},"end":{"line":2632,"column":409}},"547":{"start":{"line":2632,"column":400},"end":{"line":2632,"column":409}},"548":{"start":{"line":2632,"column":414},"end":{"line":2632,"column":426}},"549":{"start":{"line":2632,"column":429},"end":{"line":2632,"column":659}},"550":{"start":{"line":2632,"column":456},"end":{"line":2632,"column":656}},"551":{"start":{"line":2632,"column":482},"end":{"line":2632,"column":493}},"552":{"start":{"line":2632,"column":501},"end":{"line":2632,"column":656}},"553":{"start":{"line":2632,"column":539},"end":{"line":2632,"column":568}},"554":{"start":{"line":2632,"column":578},"end":{"line":2632,"column":654}},"555":{"start":{"line":2665,"column":0},"end":{"line":2701,"column":1}},"556":{"start":{"line":2666,"column":2},"end":{"line":2666,"column":46}},"557":{"start":{"line":2667,"column":2},"end":{"line":2667,"column":20}},"558":{"start":{"line":2668,"column":2},"end":{"line":2668,"column":22}},"559":{"start":{"line":2669,"column":2},"end":{"line":2679,"column":3}},"560":{"start":{"line":2670,"column":4},"end":{"line":2670,"column":26}},"561":{"start":{"line":2671,"column":4},"end":{"line":2671,"column":26}},"562":{"start":{"line":2673,"column":4},"end":{"line":2673,"column":75}},"563":{"start":{"line":2675,"column":4},"end":{"line":2675,"column":74}},"564":{"start":{"line":2677,"column":4},"end":{"line":2677,"column":37}},"565":{"start":{"line":2678,"column":4},"end":{"line":2678,"column":39}},"566":{"start":{"line":2680,"column":2},"end":{"line":2682,"column":3}},"567":{"start":{"line":2681,"column":4},"end":{"line":2681,"column":25}},"568":{"start":{"line":2683,"column":2},"end":{"line":2683,"column":18}},"569":{"start":{"line":2684,"column":2},"end":{"line":2684,"column":35}},"570":{"start":{"line":2685,"column":2},"end":{"line":2685,"column":31}},"571":{"start":{"line":2686,"column":2},"end":{"line":2699,"column":3}},"572":{"start":{"line":2687,"column":4},"end":{"line":2687,"column":24}},"573":{"start":{"line":2688,"column":4},"end":{"line":2688,"column":28}},"574":{"start":{"line":2689,"column":4},"end":{"line":2697,"column":5}},"575":{"start":{"line":2690,"column":6},"end":{"line":2690,"column":31}},"576":{"start":{"line":2691,"column":6},"end":{"line":2696,"column":7}},"577":{"start":{"line":2692,"column":8},"end":{"line":2692,"column":23}},"578":{"start":{"line":2693,"column":8},"end":{"line":2693,"column":38}},"579":{"start":{"line":2694,"column":8},"end":{"line":2694,"column":39}},"580":{"start":{"line":2695,"column":8},"end":{"line":2695,"column":14}},"581":{"start":{"line":2698,"column":4},"end":{"line":2698,"column":58}},"582":{"start":{"line":2700,"column":2},"end":{"line":2700,"column":16}},"583":{"start":{"line":2703,"column":0},"end":{"line":2709,"column":1}},"584":{"start":{"line":2704,"column":2},"end":{"line":2704,"column":33}},"585":{"start":{"line":2705,"column":2},"end":{"line":2707,"column":5}},"586":{"start":{"line":2706,"column":4},"end":{"line":2706,"column":23}},"587":{"start":{"line":2708,"column":2},"end":{"line":2708,"column":24}},"588":{"start":{"line":2711,"column":0},"end":{"line":2716,"column":1}},"589":{"start":{"line":2712,"column":2},"end":{"line":2714,"column":3}},"590":{"start":{"line":2713,"column":4},"end":{"line":2713,"column":13}},"591":{"start":{"line":2715,"column":2},"end":{"line":2715,"column":44}},"592":{"start":{"line":2718,"column":0},"end":{"line":2718,"column":38}},"593":{"start":{"line":2737,"column":0},"end":{"line":2754,"column":1}},"594":{"start":{"line":2738,"column":2},"end":{"line":2738,"column":46}},"595":{"start":{"line":2739,"column":2},"end":{"line":2741,"column":3}},"596":{"start":{"line":2740,"column":4},"end":{"line":2740,"column":25}},"597":{"start":{"line":2742,"column":2},"end":{"line":2742,"column":49}},"598":{"start":{"line":2743,"column":2},"end":{"line":2745,"column":3}},"599":{"start":{"line":2744,"column":4},"end":{"line":2744,"column":55}},"600":{"start":{"line":2746,"column":2},"end":{"line":2746,"column":29}},"601":{"start":{"line":2747,"column":2},"end":{"line":2753,"column":9}},"602":{"start":{"line":2748,"column":4},"end":{"line":2750,"column":5}},"603":{"start":{"line":2749,"column":6},"end":{"line":2749,"column":21}},"604":{"start":{"line":2751,"column":4},"end":{"line":2751,"column":28}},"605":{"start":{"line":2752,"column":4},"end":{"line":2752,"column":31}},"606":{"start":{"line":2756,"column":0},"end":{"line":2756,"column":46}},"607":{"start":{"line":2775,"column":0},"end":{"line":2792,"column":1}},"608":{"start":{"line":2776,"column":2},"end":{"line":2776,"column":46}},"609":{"start":{"line":2777,"column":2},"end":{"line":2779,"column":3}},"610":{"start":{"line":2778,"column":4},"end":{"line":2778,"column":25}},"611":{"start":{"line":2780,"column":2},"end":{"line":2780,"column":49}},"612":{"start":{"line":2781,"column":2},"end":{"line":2783,"column":3}},"613":{"start":{"line":2782,"column":4},"end":{"line":2782,"column":56}},"614":{"start":{"line":2784,"column":2},"end":{"line":2784,"column":29}},"615":{"start":{"line":2785,"column":2},"end":{"line":2791,"column":9}},"616":{"start":{"line":2786,"column":4},"end":{"line":2788,"column":5}},"617":{"start":{"line":2787,"column":6},"end":{"line":2787,"column":21}},"618":{"start":{"line":2789,"column":4},"end":{"line":2789,"column":28}},"619":{"start":{"line":2790,"column":4},"end":{"line":2790,"column":31}},"620":{"start":{"line":2811,"column":0},"end":{"line":2821,"column":1}},"621":{"start":{"line":2812,"column":2},"end":{"line":2812,"column":46}},"622":{"start":{"line":2813,"column":2},"end":{"line":2815,"column":3}},"623":{"start":{"line":2814,"column":4},"end":{"line":2814,"column":25}},"624":{"start":{"line":2816,"column":2},"end":{"line":2816,"column":46}},"625":{"start":{"line":2817,"column":2},"end":{"line":2819,"column":3}},"626":{"start":{"line":2818,"column":4},"end":{"line":2818,"column":32}},"627":{"start":{"line":2820,"column":2},"end":{"line":2820,"column":80}},"628":{"start":{"line":2823,"column":0},"end":{"line":2823,"column":27}},"629":{"start":{"line":2824,"column":0},"end":{"line":2824,"column":32}},"630":{"start":{"line":2825,"column":0},"end":{"line":2825,"column":29}},"631":{"start":{"line":2826,"column":0},"end":{"line":2826,"column":23}},"632":{"start":{"line":2864,"column":0},"end":{"line":2911,"column":1}},"633":{"start":{"line":2865,"column":2},"end":{"line":2865,"column":87}},"634":{"start":{"line":2867,"column":2},"end":{"line":2867,"column":46}},"635":{"start":{"line":2869,"column":2},"end":{"line":2873,"column":34}},"636":{"start":{"line":2875,"column":2},"end":{"line":2877,"column":3}},"637":{"start":{"line":2876,"column":4},"end":{"line":2876,"column":18}},"638":{"start":{"line":2878,"column":2},"end":{"line":2878,"column":43}},"639":{"start":{"line":2879,"column":2},"end":{"line":2879,"column":62}},"640":{"start":{"line":2880,"column":2},"end":{"line":2880,"column":17}},"641":{"start":{"line":2881,"column":2},"end":{"line":2881,"column":23}},"642":{"start":{"line":2882,"column":2},"end":{"line":2906,"column":3}},"643":{"start":{"line":2883,"column":4},"end":{"line":2886,"column":5}},"644":{"start":{"line":2884,"column":6},"end":{"line":2884,"column":15}},"645":{"start":{"line":2885,"column":6},"end":{"line":2885,"column":15}},"646":{"start":{"line":2887,"column":4},"end":{"line":2887,"column":71}},"647":{"start":{"line":2888,"column":4},"end":{"line":2905,"column":5}},"648":{"start":{"line":2889,"column":6},"end":{"line":2889,"column":73}},"649":{"start":{"line":2890,"column":6},"end":{"line":2890,"column":33}},"650":{"start":{"line":2892,"column":6},"end":{"line":2904,"column":7}},"651":{"start":{"line":2893,"column":8},"end":{"line":2893,"column":76}},"652":{"start":{"line":2894,"column":8},"end":{"line":2894,"column":24}},"653":{"start":{"line":2896,"column":8},"end":{"line":2896,"column":67}},"654":{"start":{"line":2897,"column":8},"end":{"line":2903,"column":9}},"655":{"start":{"line":2898,"column":10},"end":{"line":2898,"column":77}},"656":{"start":{"line":2899,"column":10},"end":{"line":2899,"column":37}},"657":{"start":{"line":2901,"column":10},"end":{"line":2901,"column":52}},"658":{"start":{"line":2902,"column":10},"end":{"line":2902,"column":33}},"659":{"start":{"line":2907,"column":2},"end":{"line":2909,"column":3}},"660":{"start":{"line":2908,"column":4},"end":{"line":2908,"column":46}},"661":{"start":{"line":2910,"column":2},"end":{"line":2910,"column":21}},"662":{"start":{"line":2920,"column":0},"end":{"line":2927,"column":1}},"663":{"start":{"line":2921,"column":2},"end":{"line":2926,"column":4}},"664":{"start":{"line":2950,"column":0},"end":{"line":2963,"column":1}},"665":{"start":{"line":2951,"column":2},"end":{"line":2953,"column":3}},"666":{"start":{"line":2952,"column":4},"end":{"line":2952,"column":17}},"667":{"start":{"line":2954,"column":2},"end":{"line":2954,"column":46}},"668":{"start":{"line":2955,"column":2},"end":{"line":2955,"column":38}},"669":{"start":{"line":2956,"column":2},"end":{"line":2958,"column":3}},"670":{"start":{"line":2957,"column":4},"end":{"line":2957,"column":16}},"671":{"start":{"line":2959,"column":2},"end":{"line":2959,"column":111}},"672":{"start":{"line":2960,"column":2},"end":{"line":2960,"column":31}},"673":{"start":{"line":2961,"column":2},"end":{"line":2961,"column":61}},"674":{"start":{"line":2962,"column":2},"end":{"line":2962,"column":52}},"675":{"start":{"line":2984,"column":0},"end":{"line":2987,"column":1}},"676":{"start":{"line":2985,"column":2},"end":{"line":2985,"column":46}},"677":{"start":{"line":2986,"column":2},"end":{"line":2986,"column":42}},"678":{"start":{"line":3008,"column":0},"end":{"line":3011,"column":1}},"679":{"start":{"line":3009,"column":2},"end":{"line":3009,"column":46}},"680":{"start":{"line":3010,"column":2},"end":{"line":3010,"column":48}},"681":{"start":{"line":3032,"column":0},"end":{"line":3035,"column":1}},"682":{"start":{"line":3033,"column":2},"end":{"line":3033,"column":46}},"683":{"start":{"line":3034,"column":2},"end":{"line":3034,"column":43}},"684":{"start":{"line":3056,"column":0},"end":{"line":3059,"column":1}},"685":{"start":{"line":3057,"column":2},"end":{"line":3057,"column":46}},"686":{"start":{"line":3058,"column":2},"end":{"line":3058,"column":42}},"687":{"start":{"line":3080,"column":0},"end":{"line":3083,"column":1}},"688":{"start":{"line":3081,"column":2},"end":{"line":3081,"column":46}},"689":{"start":{"line":3082,"column":2},"end":{"line":3082,"column":36}},"690":{"start":{"line":3104,"column":0},"end":{"line":3107,"column":1}},"691":{"start":{"line":3105,"column":2},"end":{"line":3105,"column":44}},"692":{"start":{"line":3106,"column":2},"end":{"line":3106,"column":75}},"693":{"start":{"line":3131,"column":0},"end":{"line":3134,"column":1}},"694":{"start":{"line":3132,"column":2},"end":{"line":3132,"column":96}},"695":{"start":{"line":3133,"column":2},"end":{"line":3133,"column":131}},"696":{"start":{"line":3152,"column":0},"end":{"line":3155,"column":1}},"697":{"start":{"line":3153,"column":2},"end":{"line":3153,"column":46}},"698":{"start":{"line":3154,"column":2},"end":{"line":3154,"column":81}},"699":{"start":{"line":3178,"column":0},"end":{"line":3190,"column":1}},"700":{"start":{"line":3179,"column":2},"end":{"line":3179,"column":46}},"701":{"start":{"line":3180,"column":2},"end":{"line":3180,"column":42}},"702":{"start":{"line":3181,"column":2},"end":{"line":3181,"column":29}},"703":{"start":{"line":3182,"column":2},"end":{"line":3188,"column":3}},"704":{"start":{"line":3183,"column":4},"end":{"line":3183,"column":38}},"705":{"start":{"line":3184,"column":4},"end":{"line":3186,"column":5}},"706":{"start":{"line":3185,"column":6},"end":{"line":3185,"column":19}},"707":{"start":{"line":3187,"column":4},"end":{"line":3187,"column":53}},"708":{"start":{"line":3189,"column":2},"end":{"line":3189,"column":37}},"709":{"start":{"line":3213,"column":0},"end":{"line":3224,"column":1}},"710":{"start":{"line":3214,"column":2},"end":{"line":3214,"column":46}},"711":{"start":{"line":3215,"column":2},"end":{"line":3215,"column":36}},"712":{"start":{"line":3216,"column":2},"end":{"line":3218,"column":3}},"713":{"start":{"line":3217,"column":4},"end":{"line":3217,"column":17}},"714":{"start":{"line":3219,"column":2},"end":{"line":3221,"column":3}},"715":{"start":{"line":3220,"column":4},"end":{"line":3220,"column":16}},"716":{"start":{"line":3222,"column":2},"end":{"line":3222,"column":92}},"717":{"start":{"line":3223,"column":2},"end":{"line":3223,"column":76}},"718":{"start":{"line":3239,"column":0},"end":{"line":3242,"column":1}},"719":{"start":{"line":3240,"column":2},"end":{"line":3240,"column":46}},"720":{"start":{"line":3241,"column":2},"end":{"line":3241,"column":33}},"721":{"start":{"line":3262,"column":0},"end":{"line":3274,"column":1}},"722":{"start":{"line":3263,"column":2},"end":{"line":3263,"column":46}},"723":{"start":{"line":3264,"column":2},"end":{"line":3264,"column":49}},"724":{"start":{"line":3265,"column":2},"end":{"line":3265,"column":26}},"725":{"start":{"line":3266,"column":2},"end":{"line":3266,"column":16}},"726":{"start":{"line":3267,"column":2},"end":{"line":3267,"column":31}},"727":{"start":{"line":3268,"column":2},"end":{"line":3272,"column":3}},"728":{"start":{"line":3269,"column":4},"end":{"line":3269,"column":56}},"729":{"start":{"line":3270,"column":4},"end":{"line":3270,"column":41}},"730":{"start":{"line":3271,"column":4},"end":{"line":3271,"column":46}},"731":{"start":{"line":3273,"column":2},"end":{"line":3273,"column":24}},"732":{"start":{"line":3296,"column":0},"end":{"line":3299,"column":1}},"733":{"start":{"line":3297,"column":2},"end":{"line":3297,"column":46}},"734":{"start":{"line":3298,"column":2},"end":{"line":3298,"column":71}},"735":{"start":{"line":3319,"column":0},"end":{"line":3322,"column":1}},"736":{"start":{"line":3320,"column":2},"end":{"line":3320,"column":46}},"737":{"start":{"line":3321,"column":2},"end":{"line":3321,"column":47}},"738":{"start":{"line":3324,"column":0},"end":{"line":3324,"column":31}},"739":{"start":{"line":3344,"column":0},"end":{"line":3353,"column":1}},"740":{"start":{"line":3345,"column":2},"end":{"line":3345,"column":46}},"741":{"start":{"line":3346,"column":2},"end":{"line":3348,"column":3}},"742":{"start":{"line":3347,"column":4},"end":{"line":3347,"column":14}},"743":{"start":{"line":3349,"column":2},"end":{"line":3351,"column":3}},"744":{"start":{"line":3350,"column":4},"end":{"line":3350,"column":38}},"745":{"start":{"line":3352,"column":2},"end":{"line":3352,"column":23}},"746":{"start":{"line":3365,"column":0},"end":{"line":3374,"column":1}},"747":{"start":{"line":3366,"column":2},"end":{"line":3366,"column":92}},"748":{"start":{"line":3368,"column":2},"end":{"line":3368,"column":22}},"749":{"start":{"line":3369,"column":2},"end":{"line":3371,"column":3}},"750":{"start":{"line":3370,"column":4},"end":{"line":3370,"column":40}},"751":{"start":{"line":3372,"column":2},"end":{"line":3372,"column":81}},"752":{"start":{"line":3373,"column":2},"end":{"line":3373,"column":56}},"753":{"start":{"line":3383,"column":0},"end":{"line":3390,"column":1}},"754":{"start":{"line":3384,"column":2},"end":{"line":3384,"column":20}},"755":{"start":{"line":3385,"column":2},"end":{"line":3385,"column":21}},"756":{"start":{"line":3386,"column":2},"end":{"line":3388,"column":3}},"757":{"start":{"line":3387,"column":4},"end":{"line":3387,"column":28}},"758":{"start":{"line":3389,"column":2},"end":{"line":3389,"column":18}},"759":{"start":{"line":3392,"column":0},"end":{"line":3392,"column":24}},"760":{"start":{"line":3393,"column":0},"end":{"line":3393,"column":29}},"761":{"start":{"line":3394,"column":0},"end":{"line":3394,"column":19}},"762":{"start":{"line":3403,"column":0},"end":{"line":3432,"column":1}},"763":{"start":{"line":3404,"column":2},"end":{"line":3404,"column":30}},"764":{"start":{"line":3405,"column":2},"end":{"line":3405,"column":19}},"765":{"start":{"line":3406,"column":2},"end":{"line":3406,"column":16}},"766":{"start":{"line":3407,"column":2},"end":{"line":3430,"column":3}},"767":{"start":{"line":3408,"column":4},"end":{"line":3408,"column":49}},"768":{"start":{"line":3409,"column":4},"end":{"line":3429,"column":5}},"769":{"start":{"line":3411,"column":8},"end":{"line":3411,"column":14}},"770":{"start":{"line":3413,"column":8},"end":{"line":3413,"column":27}},"771":{"start":{"line":3414,"column":8},"end":{"line":3414,"column":14}},"772":{"start":{"line":3416,"column":8},"end":{"line":3427,"column":9}},"773":{"start":{"line":3417,"column":10},"end":{"line":3419,"column":11}},"774":{"start":{"line":3418,"column":12},"end":{"line":3418,"column":31}},"775":{"start":{"line":3421,"column":10},"end":{"line":3423,"column":11}},"776":{"start":{"line":3422,"column":12},"end":{"line":3422,"column":41}},"777":{"start":{"line":3424,"column":10},"end":{"line":3426,"column":11}},"778":{"start":{"line":3425,"column":12},"end":{"line":3425,"column":28}},"779":{"start":{"line":3428,"column":8},"end":{"line":3428,"column":14}},"780":{"start":{"line":3431,"column":2},"end":{"line":3431,"column":17}},"781":{"start":{"line":3434,"column":0},"end":{"line":3434,"column":21}},"782":{"start":{"line":3435,"column":0},"end":{"line":3435,"column":19}},"783":{"start":{"line":3436,"column":0},"end":{"line":3436,"column":26}},"784":{"start":{"line":3437,"column":0},"end":{"line":3437,"column":22}},"785":{"start":{"line":3461,"column":0},"end":{"line":3585,"column":1}},"786":{"start":{"line":3462,"column":2},"end":{"line":3462,"column":36}},"787":{"start":{"line":3463,"column":2},"end":{"line":3465,"column":3}},"788":{"start":{"line":3464,"column":4},"end":{"line":3464,"column":14}},"789":{"start":{"line":3466,"column":2},"end":{"line":3469,"column":3}},"790":{"start":{"line":3467,"column":4},"end":{"line":3467,"column":60}},"791":{"start":{"line":3468,"column":4},"end":{"line":3468,"column":88}},"792":{"start":{"line":3470,"column":2},"end":{"line":3470,"column":54}},"793":{"start":{"line":3471,"column":2},"end":{"line":3471,"column":30}},"794":{"start":{"line":3472,"column":2},"end":{"line":3472,"column":50}},"795":{"start":{"line":3473,"column":2},"end":{"line":3473,"column":61}},"796":{"start":{"line":3474,"column":2},"end":{"line":3474,"column":27}},"797":{"start":{"line":3475,"column":2},"end":{"line":3475,"column":16}},"798":{"start":{"line":3476,"column":2},"end":{"line":3476,"column":18}},"799":{"start":{"line":3477,"column":2},"end":{"line":3477,"column":22}},"800":{"start":{"line":3478,"column":2},"end":{"line":3478,"column":19}},"801":{"start":{"line":3479,"column":2},"end":{"line":3583,"column":3}},"802":{"start":{"line":3480,"column":4},"end":{"line":3480,"column":30}},"803":{"start":{"line":3481,"column":4},"end":{"line":3481,"column":24}},"804":{"start":{"line":3482,"column":4},"end":{"line":3570,"column":5}},"805":{"start":{"line":3484,"column":8},"end":{"line":3486,"column":9}},"806":{"start":{"line":3485,"column":10},"end":{"line":3485,"column":16}},"807":{"start":{"line":3487,"column":8},"end":{"line":3490,"column":9}},"808":{"start":{"line":3488,"column":10},"end":{"line":3488,"column":25}},"809":{"start":{"line":3489,"column":10},"end":{"line":3489,"column":16}},"810":{"start":{"line":3491,"column":8},"end":{"line":3495,"column":9}},"811":{"start":{"line":3492,"column":10},"end":{"line":3492,"column":25}},"812":{"start":{"line":3493,"column":10},"end":{"line":3493,"column":29}},"813":{"start":{"line":3494,"column":10},"end":{"line":3494,"column":16}},"814":{"start":{"line":3496,"column":8},"end":{"line":3499,"column":9}},"815":{"start":{"line":3497,"column":10},"end":{"line":3497,"column":18}},"816":{"start":{"line":3498,"column":10},"end":{"line":3498,"column":16}},"817":{"start":{"line":3500,"column":8},"end":{"line":3500,"column":23}},"818":{"start":{"line":3501,"column":8},"end":{"line":3501,"column":14}},"819":{"start":{"line":3503,"column":8},"end":{"line":3506,"column":9}},"820":{"start":{"line":3504,"column":10},"end":{"line":3504,"column":36}},"821":{"start":{"line":3505,"column":10},"end":{"line":3505,"column":16}},"822":{"start":{"line":3507,"column":8},"end":{"line":3507,"column":23}},"823":{"start":{"line":3508,"column":8},"end":{"line":3508,"column":14}},"824":{"start":{"line":3510,"column":8},"end":{"line":3513,"column":9}},"825":{"start":{"line":3511,"column":10},"end":{"line":3511,"column":32}},"826":{"start":{"line":3512,"column":10},"end":{"line":3512,"column":16}},"827":{"start":{"line":3514,"column":8},"end":{"line":3514,"column":23}},"828":{"start":{"line":3515,"column":8},"end":{"line":3515,"column":14}},"829":{"start":{"line":3518,"column":8},"end":{"line":3524,"column":9}},"830":{"start":{"line":3519,"column":10},"end":{"line":3523,"column":11}},"831":{"start":{"line":3520,"column":12},"end":{"line":3520,"column":25}},"832":{"start":{"line":3521,"column":17},"end":{"line":3523,"column":11}},"833":{"start":{"line":3522,"column":12},"end":{"line":3522,"column":25}},"834":{"start":{"line":3525,"column":8},"end":{"line":3525,"column":23}},"835":{"start":{"line":3526,"column":8},"end":{"line":3526,"column":14}},"836":{"start":{"line":3529,"column":8},"end":{"line":3532,"column":9}},"837":{"start":{"line":3530,"column":10},"end":{"line":3530,"column":29}},"838":{"start":{"line":3531,"column":10},"end":{"line":3531,"column":16}},"839":{"start":{"line":3533,"column":8},"end":{"line":3533,"column":23}},"840":{"start":{"line":3534,"column":8},"end":{"line":3534,"column":14}},"841":{"start":{"line":3536,"column":8},"end":{"line":3539,"column":9}},"842":{"start":{"line":3537,"column":10},"end":{"line":3537,"column":18}},"843":{"start":{"line":3538,"column":10},"end":{"line":3538,"column":16}},"844":{"start":{"line":3540,"column":8},"end":{"line":3542,"column":9}},"845":{"start":{"line":3541,"column":10},"end":{"line":3541,"column":16}},"846":{"start":{"line":3543,"column":8},"end":{"line":3559,"column":9}},"847":{"start":{"line":3544,"column":10},"end":{"line":3544,"column":23}},"848":{"start":{"line":3545,"column":10},"end":{"line":3545,"column":31}},"849":{"start":{"line":3546,"column":10},"end":{"line":3557,"column":11}},"850":{"start":{"line":3547,"column":12},"end":{"line":3547,"column":30}},"851":{"start":{"line":3548,"column":12},"end":{"line":3548,"column":51}},"852":{"start":{"line":3549,"column":12},"end":{"line":3553,"column":13}},"853":{"start":{"line":3550,"column":14},"end":{"line":3550,"column":35}},"854":{"start":{"line":3552,"column":14},"end":{"line":3552,"column":42}},"855":{"start":{"line":3554,"column":12},"end":{"line":3554,"column":28}},"856":{"start":{"line":3556,"column":12},"end":{"line":3556,"column":40}},"857":{"start":{"line":3558,"column":10},"end":{"line":3558,"column":16}},"858":{"start":{"line":3560,"column":8},"end":{"line":3565,"column":9}},"859":{"start":{"line":3561,"column":10},"end":{"line":3561,"column":23}},"860":{"start":{"line":3562,"column":10},"end":{"line":3562,"column":31}},"861":{"start":{"line":3563,"column":10},"end":{"line":3563,"column":26}},"862":{"start":{"line":3564,"column":10},"end":{"line":3564,"column":16}},"863":{"start":{"line":3566,"column":8},"end":{"line":3566,"column":23}},"864":{"start":{"line":3567,"column":8},"end":{"line":3567,"column":14}},"865":{"start":{"line":3569,"column":8},"end":{"line":3569,"column":23}},"866":{"start":{"line":3571,"column":4},"end":{"line":3582,"column":5}},"867":{"start":{"line":3572,"column":6},"end":{"line":3581,"column":7}},"868":{"start":{"line":3574,"column":10},"end":{"line":3574,"column":25}},"869":{"start":{"line":3575,"column":10},"end":{"line":3575,"column":16}},"870":{"start":{"line":3577,"column":10},"end":{"line":3579,"column":11}},"871":{"start":{"line":3578,"column":12},"end":{"line":3578,"column":31}},"872":{"start":{"line":3580,"column":10},"end":{"line":3580,"column":16}},"873":{"start":{"line":3584,"column":2},"end":{"line":3584,"column":16}},"874":{"start":{"line":3587,"column":0},"end":{"line":3587,"column":26}},"875":{"start":{"line":3589,"column":0},"end":{"line":3606,"column":1}},"876":{"start":{"line":3590,"column":2},"end":{"line":3592,"column":3}},"877":{"start":{"line":3591,"column":4},"end":{"line":3591,"column":26}},"878":{"start":{"line":3595,"column":2},"end":{"line":3604,"column":3},"skip":true},"879":{"start":{"line":3597,"column":4},"end":{"line":3597,"column":28},"skip":true},"880":{"start":{"line":3598,"column":9},"end":{"line":3604,"column":3},"skip":true},"881":{"start":{"line":3600,"column":4},"end":{"line":3600,"column":26},"skip":true},"882":{"start":{"line":3603,"column":4},"end":{"line":3603,"column":51},"skip":true},"883":{"start":{"line":3605,"column":2},"end":{"line":3605,"column":24}},"884":{"start":{"line":3608,"column":0},"end":{"line":3608,"column":37}},"885":{"start":{"line":3609,"column":0},"end":{"line":3609,"column":31}},"886":{"start":{"line":3624,"column":0},"end":{"line":3629,"column":1}},"887":{"start":{"line":3625,"column":2},"end":{"line":3627,"column":3}},"888":{"start":{"line":3626,"column":4},"end":{"line":3626,"column":31}},"889":{"start":{"line":3628,"column":2},"end":{"line":3628,"column":14}},"890":{"start":{"line":3642,"column":0},"end":{"line":3642,"column":22}},"891":{"start":{"line":3695,"column":0},"end":{"line":3777,"column":2}},"892":{"start":{"line":3788,"column":0},"end":{"line":3791,"column":1}},"893":{"start":{"line":3789,"column":2},"end":{"line":3789,"column":31}},"894":{"start":{"line":3790,"column":2},"end":{"line":3790,"column":38}},"895":{"start":{"line":3815,"column":0},"end":{"line":3817,"column":2}},"896":{"start":{"line":3816,"column":2},"end":{"line":3816,"column":28}},"897":{"start":{"line":3825,"column":0},"end":{"line":3827,"column":2}},"898":{"start":{"line":3826,"column":2},"end":{"line":3826,"column":22}},"899":{"start":{"line":3835,"column":0},"end":{"line":3837,"column":2}},"900":{"start":{"line":3836,"column":2},"end":{"line":3836,"column":22}},"901":{"start":{"line":3845,"column":0},"end":{"line":3847,"column":2}},"902":{"start":{"line":3846,"column":2},"end":{"line":3846,"column":30}},"903":{"start":{"line":3873,"column":0},"end":{"line":3875,"column":2}},"904":{"start":{"line":3874,"column":2},"end":{"line":3874,"column":52}},"905":{"start":{"line":3897,"column":0},"end":{"line":3902,"column":2}},"906":{"start":{"line":3898,"column":2},"end":{"line":3900,"column":3}},"907":{"start":{"line":3899,"column":4},"end":{"line":3899,"column":78}},"908":{"start":{"line":3901,"column":2},"end":{"line":3901,"column":14}},"909":{"start":{"line":3910,"column":0},"end":{"line":3910,"column":45}},"910":{"start":{"line":3919,"column":0},"end":{"line":3932,"column":1}},"911":{"start":{"line":3920,"column":2},"end":{"line":3931,"column":4}},"912":{"start":{"line":3921,"column":4},"end":{"line":3923,"column":5}},"913":{"start":{"line":3922,"column":6},"end":{"line":3922,"column":35}},"914":{"start":{"line":3925,"column":4},"end":{"line":3925,"column":86}},"915":{"start":{"line":3926,"column":4},"end":{"line":3930,"column":5}},"916":{"start":{"line":3927,"column":6},"end":{"line":3927,"column":59}},"917":{"start":{"line":3929,"column":6},"end":{"line":3929,"column":20}},"918":{"start":{"line":3934,"column":0},"end":{"line":3936,"column":3}},"919":{"start":{"line":3935,"column":2},"end":{"line":3935,"column":72}},"920":{"start":{"line":3955,"column":0},"end":{"line":3957,"column":1}},"921":{"start":{"line":3956,"column":2},"end":{"line":3956,"column":41}},"922":{"start":{"line":3959,"column":0},"end":{"line":3959,"column":257}},"923":{"start":{"line":3959,"column":52},"end":{"line":3959,"column":239}},"924":{"start":{"line":3959,"column":97},"end":{"line":3959,"column":123}},"925":{"start":{"line":3959,"column":124},"end":{"line":3959,"column":237}},"926":{"start":{"line":3959,"column":150},"end":{"line":3959,"column":235}},"927":{"start":{"line":3959,"column":207},"end":{"line":3959,"column":233}},"928":{"start":{"line":3959,"column":240},"end":{"line":3959,"column":254}},"929":{"start":{"line":3983,"column":0},"end":{"line":3985,"column":1}},"930":{"start":{"line":3984,"column":2},"end":{"line":3984,"column":42}},"931":{"start":{"line":3987,"column":0},"end":{"line":3989,"column":3}},"932":{"start":{"line":3991,"column":0},"end":{"line":3991,"column":12}}},"branchMap":{"1":{"line":10,"type":"cond-expr","locations":[{"start":{"line":10,"column":64},"end":{"line":10,"column":90}},{"start":{"line":11,"column":1},"end":{"line":12,"column":23}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":28}},{"start":{"line":10,"column":32},"end":{"line":10,"column":61}}]},"3":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":61}},{"start":{"line":12,"column":2},"end":{"line":12,"column":22}}]},"4":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":29}},{"start":{"line":11,"column":33},"end":{"line":11,"column":43}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":28}},{"start":{"line":24,"column":32},"end":{"line":24,"column":46}}]},"6":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":74},"end":{"line":37,"column":86}},{"start":{"line":37,"column":89},"end":{"line":37,"column":94}}]},"7":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":21},"end":{"line":37,"column":41}},{"start":{"line":37,"column":45},"end":{"line":37,"column":71}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"9":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":74},"end":{"line":78,"column":86}},{"start":{"line":78,"column":89},"end":{"line":78,"column":91}}]},"10":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":21},"end":{"line":78,"column":41}},{"start":{"line":78,"column":45},"end":{"line":78,"column":71}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"13":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"14":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"15":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":25},"end":{"line":403,"column":37}},{"start":{"line":403,"column":40},"end":{"line":403,"column":45}}]},"16":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":2},"end":{"line":416,"column":2}},{"start":{"line":416,"column":2},"end":{"line":416,"column":2}}]},"17":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":2},"end":{"line":419,"column":2}},{"start":{"line":419,"column":2},"end":{"line":419,"column":2}}]},"18":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":2},"end":{"line":452,"column":2}},{"start":{"line":452,"column":2},"end":{"line":452,"column":2}}]},"19":{"line":453,"type":"cond-expr","locations":[{"start":{"line":453,"column":64},"end":{"line":453,"column":81}},{"start":{"line":453,"column":84},"end":{"line":453,"column":95}}]},"20":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":9},"end":{"line":454,"column":9}},{"start":{"line":454,"column":9},"end":{"line":454,"column":9}}]},"21":{"line":472,"type":"cond-expr","locations":[{"start":{"line":472,"column":23},"end":{"line":472,"column":38}},{"start":{"line":472,"column":41},"end":{"line":472,"column":63}}]},"22":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":496,"column":2}},{"start":{"line":496,"column":2},"end":{"line":496,"column":2}}]},"23":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"24":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":2},"end":{"line":548,"column":2}},{"start":{"line":548,"column":2},"end":{"line":548,"column":2}}]},"25":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":2},"end":{"line":575,"column":2}},{"start":{"line":575,"column":2},"end":{"line":575,"column":2}}]},"26":{"line":624,"type":"cond-expr","locations":[{"start":{"line":624,"column":46},"end":{"line":624,"column":55}},{"start":{"line":624,"column":58},"end":{"line":624,"column":67}}]},"27":{"line":646,"type":"cond-expr","locations":[{"start":{"line":646,"column":54},"end":{"line":646,"column":65}},{"start":{"line":646,"column":68},"end":{"line":646,"column":70}}]},"28":{"line":647,"type":"cond-expr","locations":[{"start":{"line":647,"column":64},"end":{"line":647,"column":81}},{"start":{"line":647,"column":84},"end":{"line":647,"column":95}}]},"29":{"line":650,"type":"cond-expr","locations":[{"start":{"line":650,"column":60},"end":{"line":650,"column":73}},{"start":{"line":650,"column":76},"end":{"line":650,"column":107}}]},"30":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":2},"end":{"line":665,"column":2}},{"start":{"line":665,"column":2},"end":{"line":665,"column":2}}]},"31":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":2},"end":{"line":668,"column":2}},{"start":{"line":668,"column":2},"end":{"line":668,"column":2}}]},"32":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":2},"end":{"line":691,"column":2}},{"start":{"line":691,"column":2},"end":{"line":691,"column":2}}]},"33":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":2},"end":{"line":694,"column":2}},{"start":{"line":694,"column":2},"end":{"line":694,"column":2}}]},"34":{"line":723,"type":"cond-expr","locations":[{"start":{"line":723,"column":34},"end":{"line":723,"column":54}},{"start":{"line":723,"column":57},"end":{"line":723,"column":107}}]},"35":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":2},"end":{"line":725,"column":2}},{"start":{"line":725,"column":2},"end":{"line":725,"column":2}}]},"36":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":9},"end":{"line":766,"column":42}},{"start":{"line":766,"column":46},"end":{"line":766,"column":77}}]},"37":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":9},"end":{"line":777,"column":41}},{"start":{"line":777,"column":45},"end":{"line":777,"column":75}}]},"38":{"line":805,"type":"cond-expr","locations":[{"start":{"line":805,"column":74},"end":{"line":805,"column":86}},{"start":{"line":805,"column":89},"end":{"line":805,"column":90}}]},"39":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":21},"end":{"line":805,"column":41}},{"start":{"line":805,"column":45},"end":{"line":805,"column":71}}]},"40":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":2},"end":{"line":807,"column":2}},{"start":{"line":807,"column":2},"end":{"line":807,"column":2}}]},"41":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":2},"end":{"line":810,"column":2}},{"start":{"line":810,"column":2},"end":{"line":810,"column":2}}]},"42":{"line":826,"type":"cond-expr","locations":[{"start":{"line":826,"column":27},"end":{"line":826,"column":39}},{"start":{"line":826,"column":42},"end":{"line":826,"column":47}}]},"43":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":2},"end":{"line":855,"column":2}},{"start":{"line":855,"column":2},"end":{"line":855,"column":2}}]},"44":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":6},"end":{"line":855,"column":24}},{"start":{"line":855,"column":28},"end":{"line":855,"column":65}}]},"45":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":2},"end":{"line":860,"column":2}},{"start":{"line":860,"column":2},"end":{"line":860,"column":2}}]},"46":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":6},"end":{"line":860,"column":37}},{"start":{"line":860,"column":41},"end":{"line":860,"column":81}}]},"47":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":4},"end":{"line":862,"column":4}},{"start":{"line":862,"column":4},"end":{"line":862,"column":4}}]},"48":{"line":891,"type":"cond-expr","locations":[{"start":{"line":891,"column":34},"end":{"line":891,"column":35}},{"start":{"line":891,"column":38},"end":{"line":891,"column":88}}]},"49":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":2},"end":{"line":892,"column":2}},{"start":{"line":892,"column":2},"end":{"line":892,"column":2}}]},"50":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":4},"end":{"line":924,"column":4}},{"start":{"line":924,"column":4},"end":{"line":924,"column":4}}]},"51":{"line":955,"type":"cond-expr","locations":[{"start":{"line":955,"column":34},"end":{"line":955,"column":35}},{"start":{"line":955,"column":38},"end":{"line":955,"column":88}}]},"52":{"line":956,"type":"if","locations":[{"start":{"line":956,"column":2},"end":{"line":956,"column":2}},{"start":{"line":956,"column":2},"end":{"line":956,"column":2}}]},"53":{"line":986,"type":"cond-expr","locations":[{"start":{"line":986,"column":34},"end":{"line":986,"column":54}},{"start":{"line":986,"column":57},"end":{"line":986,"column":107}}]},"54":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":2},"end":{"line":988,"column":2}},{"start":{"line":988,"column":2},"end":{"line":988,"column":2}}]},"55":{"line":991,"type":"cond-expr","locations":[{"start":{"line":991,"column":60},"end":{"line":991,"column":77}},{"start":{"line":991,"column":80},"end":{"line":991,"column":91}}]},"56":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":4},"end":{"line":995,"column":4}},{"start":{"line":995,"column":4},"end":{"line":995,"column":4}}]},"57":{"line":1141,"type":"if","locations":[{"start":{"line":1141,"column":2},"end":{"line":1141,"column":2}},{"start":{"line":1141,"column":2},"end":{"line":1141,"column":2}}]},"58":{"line":1141,"type":"binary-expr","locations":[{"start":{"line":1141,"column":6},"end":{"line":1141,"column":26}},{"start":{"line":1141,"column":30},"end":{"line":1141,"column":52}}]},"59":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}},{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}}]},"60":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":2},"end":{"line":1178,"column":2}},{"start":{"line":1178,"column":2},"end":{"line":1178,"column":2}}]},"61":{"line":1178,"type":"binary-expr","locations":[{"start":{"line":1178,"column":6},"end":{"line":1178,"column":26}},{"start":{"line":1178,"column":30},"end":{"line":1178,"column":61}}]},"62":{"line":1183,"type":"cond-expr","locations":[{"start":{"line":1183,"column":67},"end":{"line":1183,"column":82}},{"start":{"line":1183,"column":85},"end":{"line":1183,"column":96}}]},"63":{"line":1245,"type":"if","locations":[{"start":{"line":1245,"column":2},"end":{"line":1245,"column":2}},{"start":{"line":1245,"column":2},"end":{"line":1245,"column":2}}]},"64":{"line":1258,"type":"cond-expr","locations":[{"start":{"line":1258,"column":27},"end":{"line":1258,"column":37}},{"start":{"line":1258,"column":40},"end":{"line":1258,"column":52}}]},"65":{"line":1311,"type":"cond-expr","locations":[{"start":{"line":1311,"column":32},"end":{"line":1311,"column":33}},{"start":{"line":1311,"column":36},"end":{"line":1311,"column":85}}]},"66":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":4},"end":{"line":1314,"column":4}},{"start":{"line":1314,"column":4},"end":{"line":1314,"column":4}}]},"67":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":4},"end":{"line":1317,"column":4}},{"start":{"line":1317,"column":4},"end":{"line":1317,"column":4}}]},"68":{"line":1362,"type":"cond-expr","locations":[{"start":{"line":1362,"column":34},"end":{"line":1362,"column":35}},{"start":{"line":1362,"column":38},"end":{"line":1362,"column":88}}]},"69":{"line":1364,"type":"if","locations":[{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}},{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}}]},"70":{"line":1393,"type":"cond-expr","locations":[{"start":{"line":1393,"column":34},"end":{"line":1393,"column":35}},{"start":{"line":1393,"column":38},"end":{"line":1393,"column":88}}]},"71":{"line":1395,"type":"if","locations":[{"start":{"line":1395,"column":2},"end":{"line":1395,"column":2}},{"start":{"line":1395,"column":2},"end":{"line":1395,"column":2}}]},"72":{"line":1411,"type":"if","locations":[{"start":{"line":1411,"column":2},"end":{"line":1411,"column":2}},{"start":{"line":1411,"column":2},"end":{"line":1411,"column":2}}]},"73":{"line":1411,"type":"binary-expr","locations":[{"start":{"line":1411,"column":6},"end":{"line":1411,"column":18}},{"start":{"line":1411,"column":22},"end":{"line":1411,"column":45}}]},"74":{"line":1414,"type":"cond-expr","locations":[{"start":{"line":1414,"column":72},"end":{"line":1414,"column":80}},{"start":{"line":1414,"column":83},"end":{"line":1414,"column":90}}]},"75":{"line":1429,"type":"if","locations":[{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}},{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}}]},"76":{"line":1429,"type":"binary-expr","locations":[{"start":{"line":1429,"column":6},"end":{"line":1429,"column":53}},{"start":{"line":1429,"column":57},"end":{"line":1429,"column":79}}]},"77":{"line":1447,"type":"if","locations":[{"start":{"line":1447,"column":2},"end":{"line":1447,"column":2}},{"start":{"line":1447,"column":2},"end":{"line":1447,"column":2}}]},"78":{"line":1451,"type":"switch","locations":[{"start":{"line":1452,"column":4},"end":{"line":1454,"column":12}},{"start":{"line":1455,"column":4},"end":{"line":1457,"column":12}},{"start":{"line":1458,"column":4},"end":{"line":1460,"column":12}},{"start":{"line":1461,"column":4},"end":{"line":1461,"column":32}},{"start":{"line":1462,"column":4},"end":{"line":1464,"column":12}}]},"79":{"line":1480,"type":"if","locations":[{"start":{"line":1480,"column":2},"end":{"line":1480,"column":2}},{"start":{"line":1480,"column":2},"end":{"line":1480,"column":2}}]},"80":{"line":1483,"type":"cond-expr","locations":[{"start":{"line":1483,"column":43},"end":{"line":1483,"column":44}},{"start":{"line":1483,"column":47},"end":{"line":1483,"column":56}}]},"81":{"line":1485,"type":"if","locations":[{"start":{"line":1485,"column":2},"end":{"line":1485,"column":2}},{"start":{"line":1485,"column":2},"end":{"line":1485,"column":2}}]},"82":{"line":1502,"type":"if","locations":[{"start":{"line":1502,"column":2},"end":{"line":1502,"column":2}},{"start":{"line":1502,"column":2},"end":{"line":1502,"column":2}}]},"83":{"line":1506,"type":"switch","locations":[{"start":{"line":1507,"column":4},"end":{"line":1509,"column":12}},{"start":{"line":1510,"column":4},"end":{"line":1512,"column":12}},{"start":{"line":1513,"column":4},"end":{"line":1515,"column":12}},{"start":{"line":1516,"column":4},"end":{"line":1518,"column":12}},{"start":{"line":1519,"column":4},"end":{"line":1521,"column":12}}]},"84":{"line":1537,"type":"if","locations":[{"start":{"line":1537,"column":2},"end":{"line":1537,"column":2}},{"start":{"line":1537,"column":2},"end":{"line":1537,"column":2}}]},"85":{"line":1554,"type":"if","locations":[{"start":{"line":1554,"column":2},"end":{"line":1554,"column":2}},{"start":{"line":1554,"column":2},"end":{"line":1554,"column":2}}]},"86":{"line":1554,"type":"binary-expr","locations":[{"start":{"line":1554,"column":6},"end":{"line":1554,"column":23}},{"start":{"line":1554,"column":27},"end":{"line":1554,"column":66}}]},"87":{"line":1571,"type":"switch","locations":[{"start":{"line":1572,"column":4},"end":{"line":1574,"column":12}},{"start":{"line":1575,"column":4},"end":{"line":1575,"column":36}},{"start":{"line":1576,"column":4},"end":{"line":1578,"column":12}},{"start":{"line":1579,"column":4},"end":{"line":1579,"column":44}},{"start":{"line":1580,"column":4},"end":{"line":1580,"column":35}},{"start":{"line":1581,"column":4},"end":{"line":1581,"column":34}},{"start":{"line":1582,"column":4},"end":{"line":1582,"column":40}},{"start":{"line":1583,"column":4},"end":{"line":1583,"column":50}},{"start":{"line":1584,"column":4},"end":{"line":1586,"column":12}},{"start":{"line":1587,"column":4},"end":{"line":1587,"column":26}},{"start":{"line":1588,"column":4},"end":{"line":1588,"column":37}},{"start":{"line":1589,"column":4},"end":{"line":1589,"column":47}},{"start":{"line":1590,"column":4},"end":{"line":1590,"column":32}},{"start":{"line":1591,"column":4},"end":{"line":1593,"column":12}}]},"88":{"line":1690,"type":"if","locations":[{"start":{"line":1690,"column":2},"end":{"line":1690,"column":2}},{"start":{"line":1690,"column":2},"end":{"line":1690,"column":2}}]},"89":{"line":1690,"type":"binary-expr","locations":[{"start":{"line":1690,"column":6},"end":{"line":1690,"column":35}},{"start":{"line":1690,"column":39},"end":{"line":1690,"column":89}}]},"90":{"line":1707,"type":"if","locations":[{"start":{"line":1707,"column":2},"end":{"line":1707,"column":2}},{"start":{"line":1707,"column":2},"end":{"line":1707,"column":2}}]},"91":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":2},"end":{"line":1710,"column":2}},{"start":{"line":1710,"column":2},"end":{"line":1710,"column":2}}]},"92":{"line":1713,"type":"if","locations":[{"start":{"line":1713,"column":2},"end":{"line":1713,"column":2}},{"start":{"line":1713,"column":2},"end":{"line":1713,"column":2}}]},"93":{"line":1746,"type":"if","locations":[{"start":{"line":1746,"column":2},"end":{"line":1746,"column":2}},{"start":{"line":1746,"column":2},"end":{"line":1746,"column":2}}]},"94":{"line":1931,"type":"if","locations":[{"start":{"line":1931,"column":2},"end":{"line":1931,"column":2}},{"start":{"line":1931,"column":2},"end":{"line":1931,"column":2}}]},"95":{"line":1943,"type":"if","locations":[{"start":{"line":1943,"column":35},"end":{"line":1943,"column":35}},{"start":{"line":1943,"column":35},"end":{"line":1943,"column":35}}]},"96":{"line":2129,"type":"cond-expr","locations":[{"start":{"line":2129,"column":43},"end":{"line":2129,"column":44}},{"start":{"line":2129,"column":47},"end":{"line":2129,"column":104}}]},"97":{"line":2131,"type":"if","locations":[{"start":{"line":2131,"column":2},"end":{"line":2131,"column":2}},{"start":{"line":2131,"column":2},"end":{"line":2131,"column":2}}]},"98":{"line":2131,"type":"binary-expr","locations":[{"start":{"line":2131,"column":6},"end":{"line":2131,"column":23}},{"start":{"line":2131,"column":27},"end":{"line":2131,"column":50}}]},"99":{"line":2159,"type":"if","locations":[{"start":{"line":2159,"column":2},"end":{"line":2159,"column":2}},{"start":{"line":2159,"column":2},"end":{"line":2159,"column":2}}]},"100":{"line":2159,"type":"binary-expr","locations":[{"start":{"line":2159,"column":6},"end":{"line":2159,"column":24}},{"start":{"line":2159,"column":28},"end":{"line":2159,"column":65}},{"start":{"line":2159,"column":69},"end":{"line":2159,"column":90}}]},"101":{"line":2293,"type":"if","locations":[{"start":{"line":2293,"column":2},"end":{"line":2293,"column":2}},{"start":{"line":2293,"column":2},"end":{"line":2293,"column":2}}]},"102":{"line":2316,"type":"cond-expr","locations":[{"start":{"line":2316,"column":37},"end":{"line":2316,"column":62}},{"start":{"line":2316,"column":65},"end":{"line":2316,"column":74}}]},"103":{"line":2352,"type":"if","locations":[{"start":{"line":2352,"column":2},"end":{"line":2352,"column":2}},{"start":{"line":2352,"column":2},"end":{"line":2352,"column":2}}]},"104":{"line":2381,"type":"cond-expr","locations":[{"start":{"line":2381,"column":34},"end":{"line":2381,"column":35}},{"start":{"line":2381,"column":38},"end":{"line":2381,"column":88}}]},"105":{"line":2383,"type":"if","locations":[{"start":{"line":2383,"column":2},"end":{"line":2383,"column":2}},{"start":{"line":2383,"column":2},"end":{"line":2383,"column":2}}]},"106":{"line":2453,"type":"if","locations":[{"start":{"line":2453,"column":2},"end":{"line":2453,"column":2}},{"start":{"line":2453,"column":2},"end":{"line":2453,"column":2}}]},"107":{"line":2456,"type":"if","locations":[{"start":{"line":2456,"column":2},"end":{"line":2456,"column":2}},{"start":{"line":2456,"column":2},"end":{"line":2456,"column":2}}]},"108":{"line":2459,"type":"cond-expr","locations":[{"start":{"line":2459,"column":31},"end":{"line":2459,"column":32}},{"start":{"line":2459,"column":35},"end":{"line":2459,"column":91}}]},"109":{"line":2473,"type":"if","locations":[{"start":{"line":2473,"column":2},"end":{"line":2473,"column":2}},{"start":{"line":2473,"column":2},"end":{"line":2473,"column":2}}]},"110":{"line":2501,"type":"if","locations":[{"start":{"line":2501,"column":2},"end":{"line":2501,"column":2}},{"start":{"line":2501,"column":2},"end":{"line":2501,"column":2}}]},"111":{"line":2503,"type":"if","locations":[{"start":{"line":2503,"column":9},"end":{"line":2503,"column":9}},{"start":{"line":2503,"column":9},"end":{"line":2503,"column":9}}]},"112":{"line":2582,"type":"if","locations":[{"start":{"line":2582,"column":2},"end":{"line":2582,"column":2}},{"start":{"line":2582,"column":2},"end":{"line":2582,"column":2}}]},"113":{"line":2617,"type":"if","locations":[{"start":{"line":2617,"column":2},"end":{"line":2617,"column":2}},{"start":{"line":2617,"column":2},"end":{"line":2617,"column":2}}]},"114":{"line":2619,"type":"if","locations":[{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}},{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}}]},"115":{"line":2622,"type":"if","locations":[{"start":{"line":2622,"column":9},"end":{"line":2622,"column":9}},{"start":{"line":2622,"column":9},"end":{"line":2622,"column":9}}]},"116":{"line":2626,"type":"if","locations":[{"start":{"line":2626,"column":2},"end":{"line":2626,"column":2}},{"start":{"line":2626,"column":2},"end":{"line":2626,"column":2}}]},"117":{"line":2632,"type":"if","locations":[{"start":{"line":2632,"column":247},"end":{"line":2632,"column":247}},{"start":{"line":2632,"column":247},"end":{"line":2632,"column":247}}]},"118":{"line":2632,"type":"binary-expr","locations":[{"start":{"line":2632,"column":251},"end":{"line":2632,"column":252}},{"start":{"line":2632,"column":256},"end":{"line":2632,"column":273}}]},"119":{"line":2632,"type":"if","locations":[{"start":{"line":2632,"column":339},"end":{"line":2632,"column":339}},{"start":{"line":2632,"column":339},"end":{"line":2632,"column":339}}]},"120":{"line":2632,"type":"binary-expr","locations":[{"start":{"line":2632,"column":343},"end":{"line":2632,"column":346}},{"start":{"line":2632,"column":350},"end":{"line":2632,"column":362}}]},"121":{"line":2632,"type":"if","locations":[{"start":{"line":2632,"column":392},"end":{"line":2632,"column":392}},{"start":{"line":2632,"column":392},"end":{"line":2632,"column":392}}]},"122":{"line":2632,"type":"if","locations":[{"start":{"line":2632,"column":456},"end":{"line":2632,"column":456}},{"start":{"line":2632,"column":456},"end":{"line":2632,"column":456}}]},"123":{"line":2632,"type":"if","locations":[{"start":{"line":2632,"column":501},"end":{"line":2632,"column":501}},{"start":{"line":2632,"column":501},"end":{"line":2632,"column":501}}]},"124":{"line":2669,"type":"if","locations":[{"start":{"line":2669,"column":2},"end":{"line":2669,"column":2}},{"start":{"line":2669,"column":2},"end":{"line":2669,"column":2}}]},"125":{"line":2669,"type":"binary-expr","locations":[{"start":{"line":2669,"column":6},"end":{"line":2669,"column":20}},{"start":{"line":2669,"column":24},"end":{"line":2669,"column":36}}]},"126":{"line":2680,"type":"if","locations":[{"start":{"line":2680,"column":2},"end":{"line":2680,"column":2}},{"start":{"line":2680,"column":2},"end":{"line":2680,"column":2}}]},"127":{"line":2689,"type":"binary-expr","locations":[{"start":{"line":2689,"column":27},"end":{"line":2689,"column":48}},{"start":{"line":2689,"column":52},"end":{"line":2689,"column":75}}]},"128":{"line":2691,"type":"if","locations":[{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}},{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}}]},"129":{"line":2698,"type":"cond-expr","locations":[{"start":{"line":2698,"column":24},"end":{"line":2698,"column":34}},{"start":{"line":2698,"column":37},"end":{"line":2698,"column":57}}]},"130":{"line":2712,"type":"if","locations":[{"start":{"line":2712,"column":2},"end":{"line":2712,"column":2}},{"start":{"line":2712,"column":2},"end":{"line":2712,"column":2}}]},"131":{"line":2715,"type":"cond-expr","locations":[{"start":{"line":2715,"column":37},"end":{"line":2715,"column":38}},{"start":{"line":2715,"column":41},"end":{"line":2715,"column":43}}]},"132":{"line":2739,"type":"if","locations":[{"start":{"line":2739,"column":2},"end":{"line":2739,"column":2}},{"start":{"line":2739,"column":2},"end":{"line":2739,"column":2}}]},"133":{"line":2739,"type":"binary-expr","locations":[{"start":{"line":2739,"column":6},"end":{"line":2739,"column":26}},{"start":{"line":2739,"column":30},"end":{"line":2739,"column":50}}]},"134":{"line":2743,"type":"if","locations":[{"start":{"line":2743,"column":2},"end":{"line":2743,"column":2}},{"start":{"line":2743,"column":2},"end":{"line":2743,"column":2}}]},"135":{"line":2748,"type":"if","locations":[{"start":{"line":2748,"column":4},"end":{"line":2748,"column":4}},{"start":{"line":2748,"column":4},"end":{"line":2748,"column":4}}]},"136":{"line":2748,"type":"binary-expr","locations":[{"start":{"line":2748,"column":8},"end":{"line":2748,"column":23}},{"start":{"line":2748,"column":27},"end":{"line":2748,"column":64}}]},"137":{"line":2777,"type":"if","locations":[{"start":{"line":2777,"column":2},"end":{"line":2777,"column":2}},{"start":{"line":2777,"column":2},"end":{"line":2777,"column":2}}]},"138":{"line":2777,"type":"binary-expr","locations":[{"start":{"line":2777,"column":6},"end":{"line":2777,"column":26}},{"start":{"line":2777,"column":30},"end":{"line":2777,"column":50}}]},"139":{"line":2781,"type":"if","locations":[{"start":{"line":2781,"column":2},"end":{"line":2781,"column":2}},{"start":{"line":2781,"column":2},"end":{"line":2781,"column":2}}]},"140":{"line":2786,"type":"if","locations":[{"start":{"line":2786,"column":4},"end":{"line":2786,"column":4}},{"start":{"line":2786,"column":4},"end":{"line":2786,"column":4}}]},"141":{"line":2786,"type":"binary-expr","locations":[{"start":{"line":2786,"column":8},"end":{"line":2786,"column":23}},{"start":{"line":2786,"column":27},"end":{"line":2786,"column":64}}]},"142":{"line":2813,"type":"if","locations":[{"start":{"line":2813,"column":2},"end":{"line":2813,"column":2}},{"start":{"line":2813,"column":2},"end":{"line":2813,"column":2}}]},"143":{"line":2813,"type":"binary-expr","locations":[{"start":{"line":2813,"column":6},"end":{"line":2813,"column":23}},{"start":{"line":2813,"column":27},"end":{"line":2813,"column":47}}]},"144":{"line":2817,"type":"if","locations":[{"start":{"line":2817,"column":2},"end":{"line":2817,"column":2}},{"start":{"line":2817,"column":2},"end":{"line":2817,"column":2}}]},"145":{"line":2865,"type":"cond-expr","locations":[{"start":{"line":2865,"column":69},"end":{"line":2865,"column":81}},{"start":{"line":2865,"column":84},"end":{"line":2865,"column":86}}]},"146":{"line":2865,"type":"binary-expr","locations":[{"start":{"line":2865,"column":16},"end":{"line":2865,"column":36}},{"start":{"line":2865,"column":40},"end":{"line":2865,"column":66}}]},"147":{"line":2875,"type":"if","locations":[{"start":{"line":2875,"column":2},"end":{"line":2875,"column":2}},{"start":{"line":2875,"column":2},"end":{"line":2875,"column":2}}]},"148":{"line":2875,"type":"binary-expr","locations":[{"start":{"line":2875,"column":6},"end":{"line":2875,"column":26}},{"start":{"line":2875,"column":30},"end":{"line":2875,"column":40}}]},"149":{"line":2883,"type":"if","locations":[{"start":{"line":2883,"column":4},"end":{"line":2883,"column":4}},{"start":{"line":2883,"column":4},"end":{"line":2883,"column":4}}]},"150":{"line":2888,"type":"if","locations":[{"start":{"line":2888,"column":4},"end":{"line":2888,"column":4}},{"start":{"line":2888,"column":4},"end":{"line":2888,"column":4}}]},"151":{"line":2892,"type":"if","locations":[{"start":{"line":2892,"column":6},"end":{"line":2892,"column":6}},{"start":{"line":2892,"column":6},"end":{"line":2892,"column":6}}]},"152":{"line":2897,"type":"if","locations":[{"start":{"line":2897,"column":8},"end":{"line":2897,"column":8}},{"start":{"line":2897,"column":8},"end":{"line":2897,"column":8}}]},"153":{"line":2907,"type":"if","locations":[{"start":{"line":2907,"column":2},"end":{"line":2907,"column":2}},{"start":{"line":2907,"column":2},"end":{"line":2907,"column":2}}]},"154":{"line":2951,"type":"if","locations":[{"start":{"line":2951,"column":2},"end":{"line":2951,"column":2}},{"start":{"line":2951,"column":2},"end":{"line":2951,"column":2}}]},"155":{"line":2956,"type":"if","locations":[{"start":{"line":2956,"column":2},"end":{"line":2956,"column":2}},{"start":{"line":2956,"column":2},"end":{"line":2956,"column":2}}]},"156":{"line":2959,"type":"cond-expr","locations":[{"start":{"line":2959,"column":31},"end":{"line":2959,"column":51}},{"start":{"line":2959,"column":54},"end":{"line":2959,"column":110}}]},"157":{"line":2962,"type":"binary-expr","locations":[{"start":{"line":2962,"column":9},"end":{"line":2962,"column":25}},{"start":{"line":2962,"column":29},"end":{"line":2962,"column":51}}]},"158":{"line":3106,"type":"binary-expr","locations":[{"start":{"line":3106,"column":9},"end":{"line":3106,"column":29}},{"start":{"line":3106,"column":33},"end":{"line":3106,"column":74}}]},"159":{"line":3132,"type":"cond-expr","locations":[{"start":{"line":3132,"column":70},"end":{"line":3132,"column":85}},{"start":{"line":3132,"column":88},"end":{"line":3132,"column":95}}]},"160":{"line":3132,"type":"binary-expr","locations":[{"start":{"line":3132,"column":21},"end":{"line":3132,"column":48}},{"start":{"line":3132,"column":52},"end":{"line":3132,"column":67}}]},"161":{"line":3133,"type":"binary-expr","locations":[{"start":{"line":3133,"column":10},"end":{"line":3133,"column":42}},{"start":{"line":3133,"column":46},"end":{"line":3133,"column":78}},{"start":{"line":3133,"column":83},"end":{"line":3133,"column":130}}]},"162":{"line":3154,"type":"binary-expr","locations":[{"start":{"line":3154,"column":9},"end":{"line":3154,"column":31}},{"start":{"line":3154,"column":35},"end":{"line":3154,"column":80}}]},"163":{"line":3182,"type":"if","locations":[{"start":{"line":3182,"column":2},"end":{"line":3182,"column":2}},{"start":{"line":3182,"column":2},"end":{"line":3182,"column":2}}]},"164":{"line":3184,"type":"if","locations":[{"start":{"line":3184,"column":4},"end":{"line":3184,"column":4}},{"start":{"line":3184,"column":4},"end":{"line":3184,"column":4}}]},"165":{"line":3216,"type":"if","locations":[{"start":{"line":3216,"column":2},"end":{"line":3216,"column":2}},{"start":{"line":3216,"column":2},"end":{"line":3216,"column":2}}]},"166":{"line":3219,"type":"if","locations":[{"start":{"line":3219,"column":2},"end":{"line":3219,"column":2}},{"start":{"line":3219,"column":2},"end":{"line":3219,"column":2}}]},"167":{"line":3222,"type":"cond-expr","locations":[{"start":{"line":3222,"column":31},"end":{"line":3222,"column":32}},{"start":{"line":3222,"column":35},"end":{"line":3222,"column":91}}]},"168":{"line":3271,"type":"cond-expr","locations":[{"start":{"line":3271,"column":40},"end":{"line":3271,"column":41}},{"start":{"line":3271,"column":44},"end":{"line":3271,"column":45}}]},"169":{"line":3346,"type":"if","locations":[{"start":{"line":3346,"column":2},"end":{"line":3346,"column":2}},{"start":{"line":3346,"column":2},"end":{"line":3346,"column":2}}]},"170":{"line":3349,"type":"if","locations":[{"start":{"line":3349,"column":2},"end":{"line":3349,"column":2}},{"start":{"line":3349,"column":2},"end":{"line":3349,"column":2}}]},"171":{"line":3366,"type":"cond-expr","locations":[{"start":{"line":3366,"column":72},"end":{"line":3366,"column":84}},{"start":{"line":3366,"column":87},"end":{"line":3366,"column":91}}]},"172":{"line":3366,"type":"binary-expr","locations":[{"start":{"line":3366,"column":19},"end":{"line":3366,"column":39}},{"start":{"line":3366,"column":43},"end":{"line":3366,"column":69}}]},"173":{"line":3369,"type":"if","locations":[{"start":{"line":3369,"column":2},"end":{"line":3369,"column":2}},{"start":{"line":3369,"column":2},"end":{"line":3369,"column":2}}]},"174":{"line":3409,"type":"switch","locations":[{"start":{"line":3410,"column":6},"end":{"line":3411,"column":14}},{"start":{"line":3412,"column":6},"end":{"line":3414,"column":14}},{"start":{"line":3415,"column":6},"end":{"line":3428,"column":14}}]},"175":{"line":3416,"type":"if","locations":[{"start":{"line":3416,"column":8},"end":{"line":3416,"column":8}},{"start":{"line":3416,"column":8},"end":{"line":3416,"column":8}}]},"176":{"line":3417,"type":"if","locations":[{"start":{"line":3417,"column":10},"end":{"line":3417,"column":10}},{"start":{"line":3417,"column":10},"end":{"line":3417,"column":10}}]},"177":{"line":3421,"type":"if","locations":[{"start":{"line":3421,"column":10},"end":{"line":3421,"column":10}},{"start":{"line":3421,"column":10},"end":{"line":3421,"column":10}}]},"178":{"line":3424,"type":"if","locations":[{"start":{"line":3424,"column":10},"end":{"line":3424,"column":10}},{"start":{"line":3424,"column":10},"end":{"line":3424,"column":10}}]},"179":{"line":3463,"type":"if","locations":[{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}},{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}}]},"180":{"line":3466,"type":"if","locations":[{"start":{"line":3466,"column":2},"end":{"line":3466,"column":2}},{"start":{"line":3466,"column":2},"end":{"line":3466,"column":2}}]},"181":{"line":3468,"type":"cond-expr","locations":[{"start":{"line":3468,"column":49},"end":{"line":3468,"column":51}},{"start":{"line":3468,"column":54},"end":{"line":3468,"column":87}}]},"182":{"line":3482,"type":"switch","locations":[{"start":{"line":3483,"column":6},"end":{"line":3501,"column":14}},{"start":{"line":3502,"column":6},"end":{"line":3508,"column":14}},{"start":{"line":3509,"column":6},"end":{"line":3515,"column":14}},{"start":{"line":3516,"column":6},"end":{"line":3516,"column":15}},{"start":{"line":3517,"column":6},"end":{"line":3526,"column":14}},{"start":{"line":3527,"column":6},"end":{"line":3527,"column":15}},{"start":{"line":3528,"column":6},"end":{"line":3534,"column":14}},{"start":{"line":3535,"column":6},"end":{"line":3567,"column":14}},{"start":{"line":3568,"column":6},"end":{"line":3569,"column":23}}]},"183":{"line":3484,"type":"if","locations":[{"start":{"line":3484,"column":8},"end":{"line":3484,"column":8}},{"start":{"line":3484,"column":8},"end":{"line":3484,"column":8}}]},"184":{"line":3487,"type":"if","locations":[{"start":{"line":3487,"column":8},"end":{"line":3487,"column":8}},{"start":{"line":3487,"column":8},"end":{"line":3487,"column":8}}]},"185":{"line":3491,"type":"if","locations":[{"start":{"line":3491,"column":8},"end":{"line":3491,"column":8}},{"start":{"line":3491,"column":8},"end":{"line":3491,"column":8}}]},"186":{"line":3496,"type":"if","locations":[{"start":{"line":3496,"column":8},"end":{"line":3496,"column":8}},{"start":{"line":3496,"column":8},"end":{"line":3496,"column":8}}]},"187":{"line":3503,"type":"if","locations":[{"start":{"line":3503,"column":8},"end":{"line":3503,"column":8}},{"start":{"line":3503,"column":8},"end":{"line":3503,"column":8}}]},"188":{"line":3503,"type":"binary-expr","locations":[{"start":{"line":3503,"column":12},"end":{"line":3503,"column":32}},{"start":{"line":3503,"column":36},"end":{"line":3503,"column":61}}]},"189":{"line":3510,"type":"if","locations":[{"start":{"line":3510,"column":8},"end":{"line":3510,"column":8}},{"start":{"line":3510,"column":8},"end":{"line":3510,"column":8}}]},"190":{"line":3510,"type":"binary-expr","locations":[{"start":{"line":3510,"column":12},"end":{"line":3510,"column":39}},{"start":{"line":3510,"column":43},"end":{"line":3510,"column":69}}]},"191":{"line":3518,"type":"if","locations":[{"start":{"line":3518,"column":8},"end":{"line":3518,"column":8}},{"start":{"line":3518,"column":8},"end":{"line":3518,"column":8}}]},"192":{"line":3519,"type":"if","locations":[{"start":{"line":3519,"column":10},"end":{"line":3519,"column":10}},{"start":{"line":3519,"column":10},"end":{"line":3519,"column":10}}]},"193":{"line":3521,"type":"if","locations":[{"start":{"line":3521,"column":17},"end":{"line":3521,"column":17}},{"start":{"line":3521,"column":17},"end":{"line":3521,"column":17}}]},"194":{"line":3529,"type":"if","locations":[{"start":{"line":3529,"column":8},"end":{"line":3529,"column":8}},{"start":{"line":3529,"column":8},"end":{"line":3529,"column":8}}]},"195":{"line":3529,"type":"binary-expr","locations":[{"start":{"line":3529,"column":12},"end":{"line":3529,"column":39}},{"start":{"line":3529,"column":43},"end":{"line":3529,"column":73}}]},"196":{"line":3536,"type":"if","locations":[{"start":{"line":3536,"column":8},"end":{"line":3536,"column":8}},{"start":{"line":3536,"column":8},"end":{"line":3536,"column":8}}]},"197":{"line":3540,"type":"if","locations":[{"start":{"line":3540,"column":8},"end":{"line":3540,"column":8}},{"start":{"line":3540,"column":8},"end":{"line":3540,"column":8}}]},"198":{"line":3543,"type":"if","locations":[{"start":{"line":3543,"column":8},"end":{"line":3543,"column":8}},{"start":{"line":3543,"column":8},"end":{"line":3543,"column":8}}]},"199":{"line":3546,"type":"if","locations":[{"start":{"line":3546,"column":10},"end":{"line":3546,"column":10}},{"start":{"line":3546,"column":10},"end":{"line":3546,"column":10}}]},"200":{"line":3549,"type":"if","locations":[{"start":{"line":3549,"column":12},"end":{"line":3549,"column":12}},{"start":{"line":3549,"column":12},"end":{"line":3549,"column":12}}]},"201":{"line":3560,"type":"if","locations":[{"start":{"line":3560,"column":8},"end":{"line":3560,"column":8}},{"start":{"line":3560,"column":8},"end":{"line":3560,"column":8}}]},"202":{"line":3560,"type":"binary-expr","locations":[{"start":{"line":3560,"column":12},"end":{"line":3560,"column":39}},{"start":{"line":3560,"column":43},"end":{"line":3560,"column":66}},{"start":{"line":3560,"column":70},"end":{"line":3560,"column":96}}]},"203":{"line":3571,"type":"if","locations":[{"start":{"line":3571,"column":4},"end":{"line":3571,"column":4}},{"start":{"line":3571,"column":4},"end":{"line":3571,"column":4}}]},"204":{"line":3572,"type":"switch","locations":[{"start":{"line":3573,"column":8},"end":{"line":3575,"column":16}},{"start":{"line":3576,"column":8},"end":{"line":3580,"column":16}}]},"205":{"line":3577,"type":"if","locations":[{"start":{"line":3577,"column":10},"end":{"line":3577,"column":10}},{"start":{"line":3577,"column":10},"end":{"line":3577,"column":10}}]},"206":{"line":3590,"type":"if","locations":[{"start":{"line":3590,"column":2},"end":{"line":3590,"column":2}},{"start":{"line":3590,"column":2},"end":{"line":3590,"column":2}}]},"207":{"line":3595,"type":"if","locations":[{"start":{"line":3595,"column":2},"end":{"line":3595,"column":2},"skip":true},{"start":{"line":3595,"column":2},"end":{"line":3595,"column":2},"skip":true}]},"208":{"line":3595,"type":"binary-expr","locations":[{"start":{"line":3595,"column":6},"end":{"line":3595,"column":32},"skip":true},{"start":{"line":3595,"column":36},"end":{"line":3595,"column":60},"skip":true}]},"209":{"line":3598,"type":"if","locations":[{"start":{"line":3598,"column":9},"end":{"line":3598,"column":9},"skip":true},{"start":{"line":3598,"column":9},"end":{"line":3598,"column":9},"skip":true}]},"210":{"line":3598,"type":"binary-expr","locations":[{"start":{"line":3598,"column":13},"end":{"line":3598,"column":37},"skip":true},{"start":{"line":3598,"column":41},"end":{"line":3598,"column":63},"skip":true}]},"211":{"line":3625,"type":"if","locations":[{"start":{"line":3625,"column":2},"end":{"line":3625,"column":2}},{"start":{"line":3625,"column":2},"end":{"line":3625,"column":2}}]},"212":{"line":3898,"type":"if","locations":[{"start":{"line":3898,"column":2},"end":{"line":3898,"column":2}},{"start":{"line":3898,"column":2},"end":{"line":3898,"column":2}}]},"213":{"line":3926,"type":"if","locations":[{"start":{"line":3926,"column":4},"end":{"line":3926,"column":4}},{"start":{"line":3926,"column":4},"end":{"line":3926,"column":4}}]},"214":{"line":3926,"type":"binary-expr","locations":[{"start":{"line":3926,"column":8},"end":{"line":3926,"column":27}},{"start":{"line":3926,"column":31},"end":{"line":3926,"column":57}}]},"215":{"line":3959,"type":"binary-expr","locations":[{"start":{"line":3959,"column":15},"end":{"line":3959,"column":28}},{"start":{"line":3959,"column":32},"end":{"line":3959,"column":256}}]},"216":{"line":3959,"type":"if","locations":[{"start":{"line":3959,"column":150},"end":{"line":3959,"column":150}},{"start":{"line":3959,"column":150},"end":{"line":3959,"column":150}}]}},"code":["/*! "," * Voca string library 1.3.0"," * https://vocajs.com"," *"," * Copyright Dmitri Pavlutin and other contributors"," * Released under the MIT license"," */","","(function (global, factory) {","\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :","\ttypeof define === 'function' && define.amd ? define(factory) :","\t(global.v = factory());","}(this, (function () { 'use strict';","","/**"," * Checks if `value` is `null` or `undefined`"," *"," * @ignore"," * @function isNil"," * @param {*} value The object to check"," * @return {boolean} Returns `true` is `value` is `undefined` or `null`, `false` otherwise"," */","function isNil(value) {","  return value === undefined || value === null;","}","","/**"," * Converts the `value` to a boolean. If `value` is `undefined` or `null`, returns `defaultValue`."," *"," * @ignore"," * @function toBoolean"," * @param {*} value The value to convert."," * @param {boolean} [defaultValue=false] The default value."," * @return {boolean} Returns the coercion to boolean."," */","function coerceToBoolean(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;","","  if (isNil(value)) {","    return defaultValue;","  }","  return Boolean(value);","}","","/**"," * Checks whether `subject` is a string primitive type."," *"," * @function isString"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} subject The value to verify."," * @return {boolean} Returns `true` if `subject` is string primitive type or `false` otherwise."," * @example"," * v.isString('vacation');"," * // => true"," *"," * v.isString(560);"," * // => false"," */","function isString(subject) {","  return typeof subject === 'string';","}","","/**"," * Get the string representation of the `value`."," * Converts the `value` to string."," * If `value` is `null` or `undefined`, return `defaultValue`."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @param {*} [defaultValue=''] The default value to return."," * @return {string|null}        Returns the string representation of `value`. Returns `defaultValue` if `value` is"," *                              `null` or `undefined`."," */","function coerceToString(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';","","  if (isNil(value)) {","    return defaultValue;","  }","  if (isString(value)) {","    return value;","  }","  return String(value);","}","","/**"," * Converts the first character of `subject` to upper case. If `restToLower` is `true`, convert the rest of"," * `subject` to lower case."," *"," * @function capitalize"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string}  [subject='']        The string to capitalize."," * @param  {boolean} [restToLower=false] Convert the rest of `subject` to lower case."," * @return {string}                      Returns the capitalized string."," * @example"," * v.capitalize('apple');"," * // => 'Apple'"," *"," * v.capitalize('aPPle', true);"," * // => 'Apple'"," */","function capitalize(subject, restToLower) {","  var subjectString = coerceToString(subject);","  var restToLowerCaseBoolean = coerceToBoolean(restToLower);","  if (subjectString === '') {","    return '';","  }","  if (restToLowerCaseBoolean) {","    subjectString = subjectString.toLowerCase();","  }","  return subjectString.substr(0, 1).toUpperCase() + subjectString.substr(1);","}","","/**"," * Converts the `subject` to lower case."," *"," * @function lowerCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to lower case."," * @return {string}              Returns the lower case string."," * @example"," * v.lowerCase('Green');"," * // => 'green'"," *"," * v.lowerCase('BLUE');"," * // => 'blue'"," */","function lowerCase(subject) {","  var subjectString = coerceToString(subject, '');","  return subjectString.toLowerCase();","}","","/**"," * A regular expression string matching digits"," *"," * @type {string}"," * @ignore"," */","var digit = '\\\\d';","","/**"," * A regular expression string matching whitespace"," *"," * @type {string}"," * @ignore"," */","var whitespace = '\\\\s\\\\uFEFF\\\\xA0';","","/**"," * A regular expression string matching high surrogate"," *"," * @type {string}"," * @ignore"," */","var highSurrogate = '\\\\uD800-\\\\uDBFF';","","/**"," * A regular expression string matching low surrogate"," *"," * @type {string}"," * @ignore"," */","var lowSurrogate = '\\\\uDC00-\\\\uDFFF';","","/**"," * A regular expression string matching diacritical mark"," *"," * @type {string}"," * @ignore"," */","var diacriticalMark = '\\\\u0300-\\\\u036F\\\\u1AB0-\\\\u1AFF\\\\u1DC0-\\\\u1DFF\\\\u20D0-\\\\u20FF\\\\uFE20-\\\\uFE2F';","","/**"," * A regular expression to match the base character for a combining mark"," *"," * @type {string}"," * @ignore"," */","var base = '\\\\0-\\\\u02FF\\\\u0370-\\\\u1AAF\\\\u1B00-\\\\u1DBF\\\\u1E00-\\\\u20CF\\\\u2100-\\\\uD7FF\\\\uE000-\\\\uFE1F\\\\uFE30-\\\\uFFFF';","","/**"," * Regular expression to match combining marks"," *"," * @see http://unicode.org/faq/char_combmark.html"," * @type {RegExp}"," * @ignore"," */","var REGEXP_COMBINING_MARKS = new RegExp('([' + base + ']|[' + highSurrogate + '][' + lowSurrogate + ']|[' + highSurrogate + '](?![' + lowSurrogate + '])|(?:[^' + highSurrogate + ']|^)[' + lowSurrogate + '])([' + diacriticalMark + ']+)', 'g');","","/**"," * Regular expression to match surrogate pairs"," *"," * @see http://www.unicode.org/faq/utf_bom.html#utf16-2"," * @type {RegExp}"," * @ignore"," */","var REGEXP_SURROGATE_PAIRS = new RegExp('([' + highSurrogate + '])([' + lowSurrogate + '])', 'g');","","/**"," * Regular expression to match an unicode character"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_UNICODE_CHARACTER = new RegExp('((?:[' + base + ']|[' + highSurrogate + '][' + lowSurrogate + ']|[' + highSurrogate + '](?![' + lowSurrogate + '])|(?:[^' + highSurrogate + ']|^)[' + lowSurrogate + '])(?:[' + diacriticalMark + ']+))|\\","([' + highSurrogate + '][' + lowSurrogate + '])|\\","([\\\\n\\\\r\\\\u2028\\\\u2029])|\\","(.)', 'g');","","/**"," * Regular expression to match whitespaces"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_WHITESPACE = new RegExp('[' + whitespace + ']');","","/**"," * Regular expression to match whitespaces from the left side"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRIM_LEFT = new RegExp('^[' + whitespace + ']+');","","/**"," * Regular expression to match whitespaces from the right side"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRIM_RIGHT = new RegExp('[' + whitespace + ']+$');","","/**"," * Regular expression to match digit characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_DIGIT = new RegExp('^' + digit + '+$');","","/**"," * Regular expression to match regular expression special characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_SPECIAL_CHARACTERS = /[-[\\]{}()*+!<=:?.\\/\\\\^$|#,]/g;","","/**"," * Regular expression to match not latin characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_NON_LATIN = /[^A-Za-z0-9]/g;","","/**"," * Regular expression to match HTML special characters."," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_HTML_SPECIAL_CHARACTERS = /[<>&\"'`]/g;","","/**"," * Regular expression to match sprintf format string"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_CONVERSION_SPECIFICATION = /(%{1,2})(?:(\\d+)\\$)?(\\+)?([ 0]|'.{1})?(-)?(\\d+)?(?:\\.(\\d+))?([bcdiouxXeEfgGs])?/g;","","/**"," * Regular expression to match trailing zeros in a number"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRAILING_ZEROS = /\\.?0+$/g;","","/**"," * Regular expression to match flags from a regular expression."," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_FLAGS = /[gimuy]*$/;","","/**"," * Regular expression to match a list of tags."," *"," * @see https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-name"," * @type {RegExp}"," * @ignore"," */","","var REGEXP_TAG_LIST = /<([A-Za-z0-9]+)>/g;","","/**"," * A regular expression to match the General Punctuation Unicode block"," *"," * @type {string}"," * @ignore"," */","var generalPunctuationBlock = '\\\\u2000-\\\\u206F';","","/**"," * A regular expression to match non characters from from Basic Latin and Latin-1 Supplement Unicode blocks"," *"," * @type {string}"," * @ignore"," */","var nonCharacter = '\\\\x00-\\\\x2F\\\\x3A-\\\\x40\\\\x5B-\\\\x60\\\\x7b-\\\\xBF\\\\xD7\\\\xF7';","","/**"," * A regular expression to match the dingbat Unicode block"," *"," * @type {string}"," * @ignore"," */","var dingbatBlock = '\\\\u2700-\\\\u27BF';","","/**"," * A regular expression string that matches lower case letters: LATIN"," *"," * @type {string}"," * @ignore"," */","var lowerCaseLetter = 'a-z\\\\xB5\\\\xDF-\\\\xF6\\\\xF8-\\\\xFF\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010B\\\\u010D\\\\u010F\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011B\\\\u011D\\\\u011F\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012B\\\\u012D\\\\u012F\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013A\\\\u013C\\\\u013E\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014B\\\\u014D\\\\u014F\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015B\\\\u015D\\\\u015F\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016B\\\\u016D\\\\u016F\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017A\\\\u017C\\\\u017E-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018C\\\\u018D\\\\u0192\\\\u0195\\\\u0199-\\\\u019B\\\\u019E\\\\u01A1\\\\u01A3\\\\u01A5\\\\u01A8\\\\u01AA\\\\u01AB\\\\u01AD\\\\u01B0\\\\u01B4\\\\u01B6\\\\u01B9\\\\u01BA\\\\u01BD-\\\\u01BF\\\\u01C6\\\\u01C9\\\\u01CC\\\\u01CE\\\\u01D0\\\\u01D2\\\\u01D4\\\\u01D6\\\\u01D8\\\\u01DA\\\\u01DC\\\\u01DD\\\\u01DF\\\\u01E1\\\\u01E3\\\\u01E5\\\\u01E7\\\\u01E9\\\\u01EB\\\\u01ED\\\\u01EF\\\\u01F0\\\\u01F3\\\\u01F5\\\\u01F9\\\\u01FB\\\\u01FD\\\\u01FF\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020B\\\\u020D\\\\u020F\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021B\\\\u021D\\\\u021F\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022B\\\\u022D\\\\u022F\\\\u0231\\\\u0233-\\\\u0239\\\\u023C\\\\u023F\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024B\\\\u024D\\\\u024F';","","/**"," * A regular expression string that matches upper case letters: LATIN"," *"," * @type {string}"," * @ignore"," */","var upperCaseLetter = '\\\\x41-\\\\x5a\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010a\\\\u010c\\\\u010e\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011a\\\\u011c\\\\u011e\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012a\\\\u012c\\\\u012e\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013b\\\\u013d\\\\u013f\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014a\\\\u014c\\\\u014e\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015a\\\\u015c\\\\u015e\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016a\\\\u016c\\\\u016e\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017b\\\\u017d\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018b\\\\u018e-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019c\\\\u019d\\\\u019f\\\\u01a0\\\\u01a2\\\\u01a4\\\\u01a6\\\\u01a7\\\\u01a9\\\\u01ac\\\\u01ae\\\\u01af\\\\u01b1-\\\\u01b3\\\\u01b5\\\\u01b7\\\\u01b8\\\\u01bc\\\\u01c4\\\\u01c5\\\\u01c7\\\\u01c8\\\\u01ca\\\\u01cb\\\\u01cd\\\\u01cf\\\\u01d1\\\\u01d3\\\\u01d5\\\\u01d7\\\\u01d9\\\\u01db\\\\u01de\\\\u01e0\\\\u01e2\\\\u01e4\\\\u01e6\\\\u01e8\\\\u01ea\\\\u01ec\\\\u01ee\\\\u01f1\\\\u01f2\\\\u01f4\\\\u01f6-\\\\u01f8\\\\u01fa\\\\u01fc\\\\u01fe\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020a\\\\u020c\\\\u020e\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021a\\\\u021c\\\\u021e\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022a\\\\u022c\\\\u022e\\\\u0230\\\\u0232\\\\u023a\\\\u023b\\\\u023d\\\\u023e\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024a\\\\u024c\\\\u024e';","","/**"," * Regular expression to match Unicode words"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_WORD = new RegExp('(?:[' + upperCaseLetter + '][' + diacriticalMark + ']*)?(?:[' + lowerCaseLetter + '][' + diacriticalMark + ']*)+|\\","(?:[' + upperCaseLetter + '][' + diacriticalMark + ']*)+(?![' + lowerCaseLetter + '])|\\","[' + digit + ']+|\\","[' + dingbatBlock + ']|\\","[^' + nonCharacter + generalPunctuationBlock + whitespace + ']+', 'g');","","/**"," * Regular expression to match words from Basic Latin and Latin-1 Supplement blocks"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_LATIN_WORD = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])|\\d+/g;","","/**"," * Regular expression to match alpha characters"," *"," * @see http://stackoverflow.com/a/22075070/1894471"," * @type {RegExp}"," * @ignore"," */","var REGEXP_ALPHA = new RegExp('^(?:[' + lowerCaseLetter + upperCaseLetter + '][' + diacriticalMark + ']*)+$');","","/**"," * Regular expression to match alpha and digit characters"," *"," * @see http://stackoverflow.com/a/22075070/1894471"," * @type {RegExp}"," * @ignore"," */","var REGEXP_ALPHA_DIGIT = new RegExp('^((?:[' + lowerCaseLetter + upperCaseLetter + '][' + diacriticalMark + ']*)|[' + digit + '])+$');","","/**"," * Regular expression to match Extended ASCII characters, i.e. the first 255"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_EXTENDED_ASCII = /^[\\x00-\\xFF]*$/;","","/**"," * Verifies if `value` is `undefined` or `null` and returns `defaultValue`. In other case returns `value`."," *"," * @ignore"," * @function nilDefault"," * @param {*} value The value to verify."," * @param {*} defaultValue The default value."," * @return {*} Returns `defaultValue` if `value` is `undefined` or `null`, otherwise `defaultValue`."," */","function nilDefault(value, defaultValue) {","  return value == null ? defaultValue : value;","}","","/**"," * Get the string representation of the `value`."," * Converts the `value` to string."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @return {string|null}        Returns the string representation of `value`."," */","function toString(value) {","  if (isNil(value)) {","    return null;","  }","  if (isString(value)) {","    return value;","  }","  return String(value);","}","","/**"," * Splits `subject` into an array of words."," *"," * @function words"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into words."," * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {Array} Returns the array of words."," * @example"," * v.words('gravity can cross dimensions');"," * // => ['gravity', 'can', 'cross', 'dimensions']"," *"," * v.words('GravityCanCrossDimensions');"," * // => ['Gravity', 'Can', 'Cross', 'Dimensions']"," *"," * v.words('Gravity - can cross dimensions!');"," * // => ['Gravity', 'can', 'cross', 'dimensions']"," *"," * v.words('Earth gravity', /[^\\s]+/g);"," * // => ['Earth', 'gravity']"," */","function words(subject, pattern, flags) {","  var subjectString = coerceToString(subject);","  var patternRegExp = void 0;","  if (isNil(pattern)) {","    patternRegExp = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;","  } else if (pattern instanceof RegExp) {","    patternRegExp = pattern;","  } else {","    var flagsString = toString(nilDefault(flags, ''));","    patternRegExp = new RegExp(toString(pattern), flagsString);","  }","  return nilDefault(subjectString.match(patternRegExp), []);","}","","/**"," * Transforms the `word` into camel case chunk."," *"," * @param  {string} word  The word string"," * @param  {number} index The index of the word in phrase."," * @return {string}       The transformed word."," * @ignore"," */","function wordToCamel(word, index) {","  return index === 0 ? lowerCase(word) : capitalize(word, true);","}","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/CamelCase\">camel case</a>."," *"," * @function camelCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to camel case."," * @return {string}              The camel case string."," * @example"," * v.camelCase('bird flight');"," * // => 'birdFlight'"," *"," * v.camelCase('BirdFlight');"," * // => 'birdFlight'"," *"," * v.camelCase('-BIRD-FLIGHT-');"," * // => 'birdFlight'"," */","function camelCase(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  return words(subjectString).map(wordToCamel).join('');","}","","/**"," * Converts the first character of `subject` to lower case."," *"," * @function decapitalize"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to decapitalize."," * @return {string}              Returns the decapitalized string."," * @example"," * v.decapitalize('Sun');"," * // => 'sun'"," *"," * v.decapitalize('moon');"," * // => 'moon'"," */","function decapitalize(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  return subjectString.substr(0, 1).toLowerCase() + subjectString.substr(1);","}","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Letter_case#cite_ref-13\">kebab case</a>,"," * also called <i>spinal case</i> or <i>lisp case</i>."," *"," * @function kebabCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to kebab case."," * @return {string}              Returns the kebab case string."," * @example"," * v.kebabCase('goodbye blue sky');"," * // => 'goodbye-blue-sky'"," *"," * v.kebabCase('GoodbyeBlueSky');"," * // => 'goodbye-blue-sky'"," *"," * v.kebabCase('-Goodbye-Blue-Sky-');"," * // => 'goodbye-blue-sky'"," */","function kebabCase(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  return words(subjectString).map(lowerCase).join('-');","}","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Snake_case\">snake case</a>."," *"," * @function snakeCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to snake case."," * @return {string}              Returns the snake case string."," * @example"," * v.snakeCase('learning to fly');"," * // => 'learning_to_fly'"," *"," * v.snakeCase('LearningToFly');"," * // => 'learning_to_fly'"," *"," * v.snakeCase('-Learning-To-Fly-');"," * // => 'learning_to_fly'"," */","function snakeCase(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  return words(subjectString).map(lowerCase).join('_');","}","","/**"," * Converts the `subject` to upper case."," *"," * @function upperCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to upper case."," * @return {string}              Returns the upper case string."," * @example"," * v.upperCase('school');"," * // => 'SCHOOL'"," */","function upperCase(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.toUpperCase();","}","","/**"," * Converts the uppercase alpha caracters of `subject` to lowercase and lowercase "," * characters to uppercase."," *"," * @function swapCase"," * @static"," * @since 1.3.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to swap the case."," * @return {string}              Returns the converted string."," * @example"," * v.swapCase('League of Shadows');"," * // => 'lEAGE OF sHADOWS'"," *"," * v.swapCase('2 Bees');"," * // => '2 bEES'"," */","function swapCase(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.split('').reduce(swapAndConcat, '');","}","","function swapAndConcat(swapped, character) {","  var lowerCase = character.toLowerCase();","  var upperCase = character.toUpperCase();","  return swapped + (character === lowerCase ? upperCase : lowerCase);","}","","/**"," * Converts the subject to title case."," *"," * @function titleCase"," * @static"," * @since 1.2.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to title case."," * @param  {Array} [ignoreWords] The words that should not be capitalized."," * @return {string}              Returns the title case string."," * @example"," * v.titleCase('learning to fly');"," * // => 'Learning To Fly'"," *"," * v.titleCase('another brick in the wall', ['in', 'the']);"," * // => 'Another Brick in the Wall'"," */","function titleCase(subject, ignoreWords) {","  var subjectString = coerceToString(subject);","  var ignoreWordsArray = Array.isArray(ignoreWords) ? ignoreWords : [];","  var wordsRegExp = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;","  return subjectString.replace(wordsRegExp, function (word) {","    var lowerCaseWord = word.toLowerCase();","    return ignoreWordsArray.indexOf(lowerCaseWord) !== -1 ? lowerCaseWord : capitalize(lowerCaseWord, true);","  });","}","","/**"," * Clip the number to interval `downLimit` to `upLimit`."," *"," * @ignore"," * @function clipNumber"," * @param {number} value The number to clip"," * @param {number} downLimit The down limit"," * @param {number} upLimit The upper limit"," * @return {number} The clipped number"," */","function clipNumber(value, downLimit, upLimit) {","  if (value <= downLimit) {","    return downLimit;","  }","  if (value >= upLimit) {","    return upLimit;","  }","  return value;","}","","/**"," * Max save integer value"," *"," * @ignore"," * @type {number}"," */","var MAX_SAFE_INTEGER = 0x1fffffffffffff;","","/**"," * Transforms `value` to an integer."," *"," * @ignore"," * @function toInteger"," * @param {number} value The number to transform."," * @returns {number} Returns the transformed integer."," */","function toInteger(value) {","  if (value === Infinity) {","    return MAX_SAFE_INTEGER;","  }","  if (value === -Infinity) {","    return -MAX_SAFE_INTEGER;","  }","  return ~~value;","}","","/**"," * Truncates `subject` to a new `length`."," *"," * @function truncate"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to truncate."," * @param  {int}    length       The length to truncate the string."," * @param  {string} [end='...']  The string to be added at the end."," * @return {string}              Returns the truncated string."," * @example"," * v.truncate('Once upon a time', 7);"," * // => 'Once...'"," *"," * v.truncate('Good day, Little Red Riding Hood', 14, ' (...)');"," * // => 'Good day (...)'"," *"," * v.truncate('Once upon', 10);"," * // => 'Once upon'"," */","function truncate(subject, length, end) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? subjectString.length : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  var endString = coerceToString(end, '...');","  if (lengthInt >= subjectString.length) {","    return subjectString;","  }","  return subjectString.substr(0, length - endString.length) + endString;","}","","/**"," * Access a character from `subject` at specified `position`."," *"," * @function charAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {numbers} position The position to get the character."," * @return {string} Returns the character at specified position."," * @example"," * v.charAt('helicopter', 0);"," * // => 'h'"," *"," * v.charAt('helicopter', 1);"," * // => 'e'"," */","function charAt(subject, position) {","  var subjectString = coerceToString(subject);","  return subjectString.charAt(position);","}","","var HIGH_SURROGATE_START = 0xD800;","var HIGH_SURROGATE_END = 0xDBFF;","var LOW_SURROGATE_START = 0xDC00;","var LOW_SURROGATE_END = 0xDFFF;","","/**"," * Checks if `codePoint` is a high-surrogate number from range 0xD800 to 0xDBFF."," *"," * @ignore"," * @param {number} codePoint The code point number to be verified"," * @return {boolean} Returns a boolean whether `codePoint` is a high-surrogate number."," */","function isHighSurrogate(codePoint) {","  return codePoint >= HIGH_SURROGATE_START && codePoint <= HIGH_SURROGATE_END;","}","","/**"," * Checks if `codePoint` is a low-surrogate number from range 0xDC00 to 0xDFFF."," *"," * @ignore"," * @param {number} codePoint The code point number to be verified"," * @return {boolean} Returns a boolean whether `codePoint` is a low-surrogate number."," */","function isLowSurrogate(codePoint) {","  return codePoint >= LOW_SURROGATE_START && codePoint <= LOW_SURROGATE_END;","}","","/**"," * Get the astral code point number based on surrogate pair numbers."," *"," * @ignore"," * @param {number} highSurrogate The high-surrogate code point number."," * @param {number} lowSurrogate The low-surrogate code point number."," * @return {number} Returns the astral symbol number."," */","function getAstralNumberFromSurrogatePair(highSurrogate, lowSurrogate) {","  return (highSurrogate - HIGH_SURROGATE_START) * 0x400 + lowSurrogate - LOW_SURROGATE_START + 0x10000;","}","","/**"," * Get the number representation of the `value`."," * Converts the `value` to number."," * If `value` is `null` or `undefined`, return `defaultValue`."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @param {*} [defaultValue=''] The default value to return."," * @return {number|null}        Returns the number representation of `value`. Returns `defaultValue` if `value` is"," *                              `null` or `undefined`."," */","function coerceToNumber(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;","","  if (isNil(value)) {","    return defaultValue;","  }","  if (typeof value === 'number') {","    return value;","  }","  return Number(value);","}","","/**"," * If `value` is `NaN`, return `defaultValue`. In other case returns `value`."," *"," * @ignore"," * @function nanDefault"," * @param {*} value The value to verify."," * @param {*} defaultValue The default value."," * @return {*} Returns `defaultValue` if `value` is `NaN`, otherwise `defaultValue`."," */","function nanDefault(value, defaultValue) {","  return value !== value ? defaultValue : value;","}","","/**"," * Get the Unicode code point value of the character at `position`. <br/>"," * If a valid UTF-16 <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">"," * surrogate pair</a> starts at `position`, the"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#astralplanes\">astral code point</a>"," * value at `position` is returned."," *"," * @function codePointAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {number} position The position to get the code point number."," * @return {number} Returns a non-negative number less than or equal to `0x10FFFF`."," * @example"," * v.codePointAt('rain', 1);"," * // => 97, or 0x0061"," *"," * v.codePointAt('\\uD83D\\uDE00 is smile', 0); // or '😀 is smile'"," * // => 128512, or 0x1F600"," */","function codePointAt(subject, position) {","  var subjectString = coerceToString(subject);","  var subjectStringLength = subjectString.length;","  var positionNumber = coerceToNumber(position);","  positionNumber = nanDefault(positionNumber, 0);","  if (positionNumber < 0 || positionNumber >= subjectStringLength) {","    return undefined;","  }","  var firstCodePoint = subjectString.charCodeAt(positionNumber);","  var secondCodePoint = void 0;","  if (isHighSurrogate(firstCodePoint) && subjectStringLength > positionNumber + 1) {","    secondCodePoint = subjectString.charCodeAt(positionNumber + 1);","    if (isLowSurrogate(secondCodePoint)) {","      return getAstralNumberFromSurrogatePair(firstCodePoint, secondCodePoint);","    }","  }","  return firstCodePoint;","}","","/**"," * Extracts the first `length` characters from `subject`."," *"," * @function first"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {int}    [length=1]   The number of characters to extract."," * @return {string}              Returns the first characters string."," * @example"," * v.first('helicopter');"," * // => 'h'"," *"," * v.first('vehicle', 2);"," * // => 've'"," *"," * v.first('car', 5);"," * // => 'car'"," */","function first(subject, length) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? 1 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  if (subjectString.length <= lengthInt) {","    return subjectString;","  }","  return subjectString.substr(0, lengthInt);","}","","/**"," * Get a grapheme from `subject` at specified `position` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function graphemeAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {number} position The position to get the grapheme."," * @return {string} Returns the grapheme at specified position."," * @example"," * v.graphemeAt('\\uD835\\uDC00\\uD835\\uDC01', 0); // or '𝐀𝐁'"," * // => 'A'"," *"," * v.graphemeAt('cafe\\u0301', 3); // or 'café'"," * // => 'é'"," */","function graphemeAt(subject, position) {","  var subjectString = coerceToString(subject);","  var positionNumber = coerceToNumber(position);","  var graphemeMatch = void 0;","  var graphemeMatchIndex = 0;","  positionNumber = nanDefault(positionNumber, 0);","  while ((graphemeMatch = REGEXP_UNICODE_CHARACTER.exec(subjectString)) !== null) {","    if (graphemeMatchIndex === positionNumber) {","      REGEXP_UNICODE_CHARACTER.lastIndex = 0;","      return graphemeMatch[0];","    }","    graphemeMatchIndex++;","  }","  return '';","}","","/**"," * Extracts the last `length` characters from `subject`."," *"," * @function last"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {int}    [length=1]   The number of characters to extract."," * @return {string}              Returns the last characters string."," * @example"," * v.last('helicopter');"," * // => 'r'"," *"," * v.last('vehicle', 2);"," * // => 'le'"," *"," * v.last('car', 5);"," * // => 'car'"," */","function last(subject, length) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? 1 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  if (subjectString.length <= lengthInt) {","    return subjectString;","  }","  return subjectString.substr(subjectString.length - lengthInt, lengthInt);","}","","/**"," * Truncates `subject` to a new `length` and does not break the words. Guarantees that the truncated string is no longer"," * than `length`."," *"," * @static"," * @function prune"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to prune."," * @param  {int}    length       The length to prune the string."," * @param  {string} [end='...']  The string to be added at the end."," * @return {string}              Returns the pruned string."," * @example"," * v.prune('Once upon a time', 7);"," * // => 'Once...'"," *"," * v.prune('Good day, Little Red Riding Hood', 16, ' (more)');"," * // => 'Good day (more)'"," *"," * v.prune('Once upon', 10);"," * // => 'Once upon'"," */","function prune(subject, length, end) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? subjectString.length : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  var endString = coerceToString(end, '...');","  if (lengthInt >= subjectString.length) {","    return subjectString;","  }","  var pattern = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;","  var truncatedLength = 0;","  subjectString.replace(pattern, function (word, offset) {","    var wordInsertLength = offset + word.length;","    if (wordInsertLength <= lengthInt - endString.length) {","      truncatedLength = wordInsertLength;","    }","  });","  return subjectString.substr(0, truncatedLength) + endString;","}","","/**"," * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not"," * included."," *"," * @function slice"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']         The string to extract from."," * @param  {number} start                The position to start extraction. If negative use `subject.length + start`."," * @param  {number} [end=subject.length] The position to end extraction. If negative use `subject.length + end`."," * @return {string}                      Returns the extracted string."," * @note Uses native `String.prototype.slice()`"," * @example"," * v.slice('miami', 1);"," * // => 'iami'"," *"," * v.slice('florida', -4);"," * // => 'rida'"," *"," * v.slice('florida', 1, 4);"," * // => \"lor\""," */","function slice(subject, start, end) {","  return coerceToString(subject).slice(start, end);","}","","/**"," * Extracts from `subject` a string from `start` position a number of `length` characters."," *"," * @function substr"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']                 The string to extract from."," * @param  {number} start                        The position to start extraction."," * @param  {number} [length=subject.endOfString] The number of characters to extract. If omitted, extract to the end of `subject`."," * @return {string}                              Returns the extracted string."," * @note Uses native `String.prototype.substr()`"," * @example"," * v.substr('infinite loop', 9);"," * // => 'loop'"," *"," * v.substr('dreams', 2, 2);"," * // => 'ea'"," */","function substr(subject, start, length) {","  return coerceToString(subject).substr(start, length);","}","","/**"," * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not"," * included."," *"," * @function substring"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']         The string to extract from."," * @param  {number} start                The position to start extraction."," * @param  {number} [end=subject.length] The position to end extraction."," * @return {string}                      Returns the extracted string."," * @note Uses native `String.prototype.substring()`"," * @example"," * v.substring('beach', 1);"," * // => 'each'"," *"," * v.substring('ocean', 1, 3);"," * // => 'ea'"," */","function substring(subject, start, end) {","  return coerceToString(subject).substring(start, end);","}","","/**"," * Counts the characters in `subject`.<br/>"," *"," * @function count"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string to count characters."," * @return {number}              Returns the number of characters in `subject`."," * @example"," * v.count('rain');"," * // => 4"," */","function count(subject) {","  return coerceToString(subject).length;","}","","/**"," * Counts the graphemes in `subject` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function  countGraphemes"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string to count graphemes."," * @return {number}              Returns the number of graphemes in `subject`."," * @example"," * v.countGraphemes('cafe\\u0301'); // or 'café'"," * // => 4"," *"," * v.countGraphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'"," * // => 2"," *"," * v.countGraphemes('rain');"," * // => 4"," */","function countGrapheme(subject) {","  return coerceToString(subject).replace(REGEXP_COMBINING_MARKS, '*').replace(REGEXP_SURROGATE_PAIRS, '*').length;","}","","/**"," * Counts the number of `substring` appearances in `subject`."," *"," * @function countSubstrings"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string where to count."," * @param  {string} substring    The substring to be counted."," * @return {number}              Returns the number of `substring` appearances."," * @example"," * v.countSubstrings('bad boys, bad boys whatcha gonna do?', 'boys');"," * // => 2"," *"," * v.countSubstrings('every dog has its day', 'cat');"," * // => 0"," */","function countSubstrings(subject, substring) {","  var subjectString = coerceToString(subject);","  var substringString = coerceToString(substring);","  var substringLength = substringString.length;","  var count = 0;","  var matchIndex = 0;","  if (subjectString === '' || substringString === '') {","    return count;","  }","  do {","    matchIndex = subjectString.indexOf(substringString, matchIndex);","    if (matchIndex !== -1) {","      count++;","      matchIndex += substringLength;","    }","  } while (matchIndex !== -1);","  return count;","}","","var reduce = Array.prototype.reduce;","","/**"," * Counts the characters in `subject` for which `predicate` returns truthy."," *"," * @function  countWhere"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string}   [subject=''] The string to count characters."," * @param  {Function} predicate    The predicate function invoked on each character with parameters `(character, index, string)`."," * @param  {Object}   [context]    The context to invoke the `predicate`."," * @return {number}                Returns the number of characters for which `predicate` returns truthy."," * @example"," * v.countWhere('hola!', v.isAlpha);"," * // => 4"," *"," * v.countWhere('2022', function(character, index, str) {"," *   return character === '2';"," * });"," * // => 3"," */","function countWhere(subject, predicate, context) {","  var subjectString = coerceToString(subject);","  if (subjectString === '' || typeof predicate !== 'function') {","    return 0;","  }","  var predicateWithContext = predicate.bind(context);","  return reduce.call(subjectString, function (countTruthy, character, index) {","    return predicateWithContext(character, index, subjectString) ? countTruthy + 1 : countTruthy;","  }, 0);","}","","/**"," * Counts the number of words in `subject`."," *"," * @function countWords"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param {string} [subject=''] The string to split into words."," * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {number} Returns the number of words."," * @example"," * v.countWords('gravity can cross dimensions');"," * // => 4"," *"," * v.countWords('GravityCanCrossDimensions');"," * // => 4"," *"," * v.countWords('Gravity - can cross dimensions!');"," * // => 4"," *"," * v.words('Earth gravity', /[^\\s]+/g);"," * // => 2"," */","function countWords(subject, pattern, flags) {","  return words(subject, pattern, flags).length;","}","","/**"," * The current index."," *"," * @ignore"," * @name ReplacementIndex#index"," * @type {number}"," * @return {ReplacementIndex} ReplacementIndex instance."," */","function ReplacementIndex() {","  this.index = 0;","}","","/**"," * Increment the current index."," *"," * @ignore"," * @return {undefined}"," */","ReplacementIndex.prototype.increment = function () {","  this.index++;","};","","/**"," * Increment the current index by position."," *"," * @ignore"," * @param {number} [position] The replacement position."," * @return {undefined}"," */","ReplacementIndex.prototype.incrementOnEmptyPosition = function (position) {","  if (isNil(position)) {","    this.increment();","  }","};","","/**"," * Get the replacement index by position."," *"," * @ignore"," * @param {number} [position] The replacement position."," * @return {number} The replacement index."," */","ReplacementIndex.prototype.getIndexByPosition = function (position) {","  return isNil(position) ? this.index : position - 1;","};","","var Const = Object.freeze({","  // Type specifiers","  TYPE_INTEGER: 'i',","  TYPE_INTEGER_BINARY: 'b',","  TYPE_INTEGER_ASCII_CHARACTER: 'c',","  TYPE_INTEGER_DECIMAL: 'd',","  TYPE_INTEGER_OCTAL: 'o',","  TYPE_INTEGER_UNSIGNED_DECIMAL: 'u',","  TYPE_INTEGER_HEXADECIMAL: 'x',","  TYPE_INTEGER_HEXADECIMAL_UPPERCASE: 'X',","  TYPE_FLOAT_SCIENTIFIC: 'e',","  TYPE_FLOAT_SCIENTIFIC_UPPERCASE: 'E',","  TYPE_FLOAT: 'f',","  TYPE_FLOAT_SHORT: 'g',","  TYPE_FLOAT_SHORT_UPPERCASE: 'G',","  TYPE_STRING: 's',","","  // Simple literals","  LITERAL_PERCENT: '%',","  LITERAL_SINGLE_QUOTE: \"'\",","  LITERAL_PLUS: '+',","  LITERAL_MINUS: '-',","  LITERAL_PERCENT_SPECIFIER: '%%',","","  // Radix constants to format numbers","  RADIX_BINARY: 2,","  RADIX_OCTAL: 8,","  RADIX_DECIMAL: 10,","  RADIX_HEXADECIMAL: 16","});","","/**"," * Repeats the `subject` number of `times`."," *"," * @function repeat"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to repeat."," * @param {number} [times=1] The number of times to repeat."," * @return {string} Returns the repeated string."," * @example"," * v.repeat('w', 3);"," * // => 'www'"," *"," * v.repeat('world', 0);"," * // => ''"," */","function repeat(subject, times) {","  var subjectString = coerceToString(subject);","  var timesInt = isNil(times) ? 1 : clipNumber(toInteger(times), 0, MAX_SAFE_INTEGER);","  var repeatString = '';","  while (timesInt) {","    if (timesInt & 1) {","      repeatString += subjectString;","    }","    if (timesInt > 1) {","      subjectString += subjectString;","    }","    timesInt >>= 1;","  }","  return repeatString;","}","","/**"," * Creates the padding string."," *"," * @ignore"," * @param {string} padCharacters The characters to create padding string."," * @param {number} length The padding string length."," * @return {string} The padding string."," */","function buildPadding(padCharacters, length) {","  var padStringRepeat = toInteger(length / padCharacters.length);","  var padStringRest = length % padCharacters.length;","  return repeat(padCharacters, padStringRepeat + padStringRest).substr(0, length);","}","","/**"," * Pads `subject` from left to a new `length`."," *"," * @function padLeft"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to left pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the left padded string."," * @example"," * v.padLeft('dog', 5);"," * // => '  dog'"," *"," * v.padLeft('bird', 6, '-');"," * // => '--bird'"," *"," * v.padLeft('cat', 6, '-=');"," * // => '-=-cat'"," */","function padLeft(subject, length, pad) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  var padString = coerceToString(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  return buildPadding(padString, lengthInt - subjectString.length) + subjectString;","}","","/**"," * Pads `subject` from right to a new `length`."," *"," * @function padRight"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to right pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the right padded string."," * @example"," * v.padRight('dog', 5);"," * // => 'dog  '"," *"," * v.padRight('bird', 6, '-');"," * // => 'bird--'"," *"," * v.padRight('cat', 6, '-=');"," * // => 'cat-=-'"," */","function padRight(subject, length, pad) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  var padString = coerceToString(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  return subjectString + buildPadding(padString, lengthInt - subjectString.length);","}","","/**"," * Aligns and pads `subject` string."," *"," * @ignore"," * @param {string} subject The subject string."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the aligned and padded string."," */","function alignAndPad(subject, conversion) {","  var width = conversion.width;","  if (isNil(width) || subject.length >= width) {","    return subject;","  }","  var padType = conversion.alignmentSpecifier === Const.LITERAL_MINUS ? padRight : padLeft;","  return padType(subject, width, conversion.getPaddingCharacter());","}","","/**"," * Add sign to the formatted number."," *"," * @ignore"," * @name addSignToFormattedNumber"," * @param  {number} replacementNumber The number to be replaced."," * @param  {string} formattedReplacement The formatted version of number."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted number string with a sign."," */","function addSignToFormattedNumber(replacementNumber, formattedReplacement, conversion) {","  if (conversion.signSpecifier === Const.LITERAL_PLUS && replacementNumber >= 0) {","    formattedReplacement = Const.LITERAL_PLUS + formattedReplacement;","  }","  return formattedReplacement;","}","","/**"," * Formats a float type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function float(replacement, conversion) {","  var replacementNumber = parseFloat(replacement);","  var formattedReplacement = void 0;","  if (isNaN(replacementNumber)) {","    replacementNumber = 0;","  }","  var precision = coerceToNumber(conversion.precision, 6);","  switch (conversion.typeSpecifier) {","    case Const.TYPE_FLOAT:","      formattedReplacement = replacementNumber.toFixed(precision);","      break;","    case Const.TYPE_FLOAT_SCIENTIFIC:","      formattedReplacement = replacementNumber.toExponential(precision);","      break;","    case Const.TYPE_FLOAT_SCIENTIFIC_UPPERCASE:","      formattedReplacement = replacementNumber.toExponential(precision).toUpperCase();","      break;","    case Const.TYPE_FLOAT_SHORT:","    case Const.TYPE_FLOAT_SHORT_UPPERCASE:","      formattedReplacement = formatFloatAsShort(replacementNumber, precision, conversion);","      break;","  }","  formattedReplacement = addSignToFormattedNumber(replacementNumber, formattedReplacement, conversion);","  return coerceToString(formattedReplacement);","}","","/**"," * Formats the short float."," *"," * @ignore"," * @param  {number} replacementNumber The number to format."," * @param  {number} precision The precision to format the float."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string}  Returns the formatted short float."," */","function formatFloatAsShort(replacementNumber, precision, conversion) {","  if (replacementNumber === 0) {","    return '0';","  }","  var nonZeroPrecision = precision === 0 ? 1 : precision;","  var formattedReplacement = replacementNumber.toPrecision(nonZeroPrecision).replace(REGEXP_TRAILING_ZEROS, '');","  if (conversion.typeSpecifier === Const.TYPE_FLOAT_SHORT_UPPERCASE) {","    formattedReplacement = formattedReplacement.toUpperCase();","  }","  return formattedReplacement;","}","","/**"," * Formats an integer type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function integerBase(replacement, conversion) {","  var integer = parseInt(replacement);","  if (isNaN(integer)) {","    integer = 0;","  }","  integer = integer >>> 0;","  switch (conversion.typeSpecifier) {","    case Const.TYPE_INTEGER_ASCII_CHARACTER:","      integer = String.fromCharCode(integer);","      break;","    case Const.TYPE_INTEGER_BINARY:","      integer = integer.toString(Const.RADIX_BINARY);","      break;","    case Const.TYPE_INTEGER_OCTAL:","      integer = integer.toString(Const.RADIX_OCTAL);","      break;","    case Const.TYPE_INTEGER_HEXADECIMAL:","      integer = integer.toString(Const.RADIX_HEXADECIMAL);","      break;","    case Const.TYPE_INTEGER_HEXADECIMAL_UPPERCASE:","      integer = integer.toString(Const.RADIX_HEXADECIMAL).toUpperCase();","      break;","  }","  return coerceToString(integer);","}","","/**"," * Formats a decimal integer type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function integerDecimal(replacement, conversion) {","  var integer = parseInt(replacement);","  if (isNaN(integer)) {","    integer = 0;","  }","  return addSignToFormattedNumber(integer, toString(integer), conversion);","}","","/**"," * Formats a string type according to specifiers."," *"," * @ignore"," * @param {string} replacement The string to be formatted."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","function stringFormat(replacement, conversion) {","  var formattedReplacement = replacement;","  var precision = conversion.precision;","  if (!isNil(precision) && formattedReplacement.length > precision) {","    formattedReplacement = truncate(formattedReplacement, precision, '');","  }","  return formattedReplacement;","}","","/**"," * Returns the computed string based on format specifiers."," *"," * @ignore"," * @name computeReplacement"," * @param {string} replacement The replacement value."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the computed string."," */","function compute(replacement, conversion) {","  var formatFunction = void 0;","  switch (conversion.typeSpecifier) {","    case Const.TYPE_STRING:","      formatFunction = stringFormat;","      break;","    case Const.TYPE_INTEGER_DECIMAL:","    case Const.TYPE_INTEGER:","      formatFunction = integerDecimal;","      break;","    case Const.TYPE_INTEGER_ASCII_CHARACTER:","    case Const.TYPE_INTEGER_BINARY:","    case Const.TYPE_INTEGER_OCTAL:","    case Const.TYPE_INTEGER_HEXADECIMAL:","    case Const.TYPE_INTEGER_HEXADECIMAL_UPPERCASE:","    case Const.TYPE_INTEGER_UNSIGNED_DECIMAL:","      formatFunction = integerBase;","      break;","    case Const.TYPE_FLOAT:","    case Const.TYPE_FLOAT_SCIENTIFIC:","    case Const.TYPE_FLOAT_SCIENTIFIC_UPPERCASE:","    case Const.TYPE_FLOAT_SHORT:","    case Const.TYPE_FLOAT_SHORT_UPPERCASE:","      formatFunction = float;","      break;","  }","  var formattedString = formatFunction(replacement, conversion);","  return alignAndPad(formattedString, conversion);","}","","/**"," * Construct the new conversion specification object."," *"," * @ignore"," * @param {Object} properties An object with properties to initialize."," * @return {ConversionSpecification} ConversionSpecification instance."," */","function ConversionSpecification(properties) {","","  /**","   * The percent characters from conversion specification.","   *","   * @ignore","   * @name ConversionSpecification#percent","   * @type {string}","   */","  this.percent = properties.percent;","","  /**","   *  The sign specifier to force a sign to be used on a number.","   *","   * @ignore","   * @name ConversionSpecification#signSpecifier","   * @type {string}","   */","  this.signSpecifier = properties.signSpecifier;","","  /**","   * The padding specifier that says what padding character will be used.","   *","   * @ignore","   * @name ConversionSpecification#paddingSpecifier","   * @type {string}","   */","  this.paddingSpecifier = properties.paddingSpecifier;","","  /**","   * The alignment specifier that says if the result should be left-justified or right-justified.","   *","   * @ignore","   * @name ConversionSpecification#alignmentSpecifier","   * @type {string}","   */","  this.alignmentSpecifier = properties.alignmentSpecifier;","","  /**","   * The width specifier how many characters this conversion should result in.","   *","   * @ignore","   * @name ConversionSpecification#width","   * @type {number}","   */","  this.width = properties.width;","","  /**","   * The precision specifier says how many decimal digits should be displayed for floating-point numbers.","   *","   * @ignore","   * @name ConversionSpecification#precision","   * @type {number}","   */","  this.precision = properties.precision;","","  /**","   * The type specifier says what type the argument data should be treated as.","   *","   * @ignore","   * @name ConversionSpecification#typeSpecifier","   * @type {string}","   */","  this.typeSpecifier = properties.typeSpecifier;","}","","/**"," * Check if the conversion specification is a percent literal \"%%\"."," *"," * @ignore"," * @return {boolean} Returns true if the conversion is a percent literal, false otherwise."," */","ConversionSpecification.prototype.isPercentLiteral = function () {","  return Const.LITERAL_PERCENT_SPECIFIER === this.percent;","};","","/**"," * Get the padding character from padding specifier."," *"," * @ignore"," * @returns {string} Returns the padding character."," */","ConversionSpecification.prototype.getPaddingCharacter = function () {","  var paddingCharacter = nilDefault(this.paddingSpecifier, ' ');","  if (paddingCharacter.length === 2 && paddingCharacter[0] === Const.LITERAL_SINGLE_QUOTE) {","    paddingCharacter = paddingCharacter[1];","  }","  return paddingCharacter;","};","","/**"," * Validates the specifier type and replacement position."," *"," * @ignore"," * @throws {Error} Throws an exception on insufficient arguments or unknown specifier."," * @param  {number} index The index of the matched specifier."," * @param  {number} replacementsLength The number of replacements."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {undefined}"," */","function validate(index, replacementsLength, conversion) {","  if (isNil(conversion.typeSpecifier)) {","    throw new Error('sprintf(): Unknown type specifier');","  }","  if (index > replacementsLength - 1) {","    throw new Error('sprintf(): Too few arguments');","  }","  if (index < 0) {","    throw new Error('sprintf(): Argument number must be greater than zero');","  }","}","","/**"," * Return the replacement for regular expression match of the conversion specification."," *"," * @ignore"," * @name matchReplacement"," * @param {ReplacementIndex} replacementIndex The replacement index object."," * @param {string[]} replacements The array of replacements."," * @param {string} conversionSpecification The conversion specification."," * @param {string} percent The percent characters from conversion specification."," * @param {string} position The position to insert the replacement."," * @param {string} signSpecifier The sign specifier to force a sign to be used on a number."," * @param {string} paddingSpecifier The padding specifier that says what padding character will be used."," * @param {string} alignmentSpecifier The alignment specifier that says if the result should be left-justified or right-justified."," * @param {string} widthSpecifier The width specifier how many characters this conversion should result in."," * @param {string} precisionSpecifier The precision specifier says how many decimal digits should be displayed for floating-point numbers."," * @param {string} typeSpecifier The type specifier says what type the argument data should be treated as."," * @return {string} Returns the computed replacement."," */","function match(replacementIndex, replacements, conversionSpecification, percent, position, signSpecifier, paddingSpecifier, alignmentSpecifier, widthSpecifier, precisionSpecifier, typeSpecifier) {","  var conversion = new ConversionSpecification({","    percent: percent,","    signSpecifier: signSpecifier,","    paddingSpecifier: paddingSpecifier,","    alignmentSpecifier: alignmentSpecifier,","    width: coerceToNumber(widthSpecifier, null),","    precision: coerceToNumber(precisionSpecifier, null),","    typeSpecifier: typeSpecifier","  });","  if (conversion.isPercentLiteral()) {","    return conversionSpecification.slice(1);","  }","  var actualReplacementIndex = replacementIndex.getIndexByPosition(position);","  replacementIndex.incrementOnEmptyPosition(position);","  validate(actualReplacementIndex, replacements.length, conversion);","  return compute(replacements[actualReplacementIndex], conversion);","}","","/**"," * Produces a string according to `format`."," *"," * <div id=\"sprintf-format\" class=\"smaller\">"," * `format` string is composed of zero or more directives: ordinary characters (not <code>%</code>), which are  copied  unchanged"," * to  the  output string and <i>conversion specifications</i>, each of which results in fetching zero or more subsequent"," * arguments. <br/> <br/>"," *"," * Each <b>conversion specification</b> is introduced by the character <code>%</code>, and ends with a <b>conversion"," * specifier</b>. In between there may be (in this order) zero or more <b>flags</b>, an optional <b>minimum field width</b>"," * and an optional <b>precision</b>.<br/>"," * The syntax is: <b>ConversionSpecification</b> = <b>\"%\"</b> { <b>Flags</b> }"," * [ <b>MinimumFieldWidth</b> ] [ <b>Precision</b> ] <b>ConversionSpecifier</b>, where curly braces { } denote repetition"," * and square brackets [ ] optionality. <br/><br/>"," *"," * By default, the arguments are used in the given order.<br/>"," * For argument numbering and swapping, `%m$` (where `m` is a number indicating the argument order)"," * is used instead of `%` to specify explicitly which argument is taken. For instance `%1$s` fetches the 1st argument,"," * `%2$s` the 2nd and so on, no matter what position  the conversion specification has in `format`."," * <br/><br/>"," *"," * <b>The flags</b><br/>"," * The character <code>%</code> is followed by zero or more of the following flags:<br/>"," * <table class=\"light-params\">"," *   <tr>"," *     <td><code>+</code></td>"," *     <td>"," *       A  sign (<code>+</code> or <code>-</code>) should always be placed before a number produced by a"," *       signed conversion. By default a sign is used only for negative numbers."," *     </td>"," *   </tr>"," *   <tr>"," *     <td><code>0</code></td>"," *     <td>The value should be zero padded.</td>"," *   </tr>"," *   <tr>"," *     <td><code>&blank;</code></td>"," *     <td>(a space) The value should be space padded.</td>"," *   </tr>"," *   <tr>"," *    <td><code>'</code></td>"," *    <td>Indicates alternate padding character, specified by prefixing it with a single quote <code>'</code>.</td>"," *   </tr>"," *   <tr>"," *     <td><code>-</code></td>"," *     <td>The converted value is to be left adjusted on the field boundary (the default is right justification).</td>"," *   </tr>"," * </table>"," *"," * <b>The minimum field width</b><br/>"," * An  optional decimal digit string (with nonzero first digit) specifying a minimum field width.  If the converted"," * value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the"," * left-adjustment flag has been given).<br/><br/>"," *"," * <b>The precision</b><br/>"," * An optional precision, in the form of a period `.` followed by an optional decimal digit string.<br/>"," * This gives the number of digits to appear after the radix character for `e`, `E`, `f` and `F` conversions, the"," * maximum number of significant digits for `g` and `G` conversions or the maximum number of characters to be printed"," * from a string for `s` conversion.<br/><br/>"," *"," * <b>The conversion specifier</b><br/>"," * A specifier that mentions what type the argument should be treated as:"," *"," * <table class=\"light-params\">"," *   <tr>"," *     <td>`s`</td>"," *     <td>The string argument is treated as and presented as a string.</td>"," *   </tr>"," *   <tr>"," *     <td>`d` `i`</td>"," *     <td>The integer argument is converted to signed decimal notation.</td>"," *   </tr>"," *   <tr>"," *     <td>`b`</td>"," *     <td>The unsigned integer argument is converted to unsigned binary.</td>"," *   </tr>"," *   <tr>"," *     <td>`c`</td>"," *     <td>The unsigned integer argument is converted to an ASCII character with that number.</td>"," *   </tr>"," *   <tr>"," *     <td>`o`</td>"," *     <td>The unsigned integer argument is converted to unsigned octal.</td>"," *   </tr>"," *   <tr>"," *     <td>`u`</td>"," *     <td>The unsigned integer argument is converted to unsigned decimal.</td>"," *   </tr>"," *   <tr>"," *     <td>`x` `X`</td>"," *     <td>The unsigned integer argument is converted to unsigned hexadecimal. The letters `abcdef` are used for `x`"," *     conversions; the letters `ABCDEF` are used for `X` conversions.</td>"," *   </tr>"," *   <tr>"," *     <td>`f`</td>"," *     <td>"," *      The float argument is rounded and converted to decimal notation in the style `[-]ddd.ddd`, where the number of"," *      digits after the decimal-point character is equal to the precision specification. If the precision is missing,"," *      it is taken as 6; if the precision is explicitly zero, no decimal-point character appears."," *      If a decimal point appears, at least one digit appears before it."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`e` `E`</td>"," *     <td>"," *       The float argument is rounded and converted in the style `[-]d.ddde±dd`, where there is one digit"," *       before the decimal-point character and the number of digits after it is equal to the precision. If"," *       the precision is missing, it is taken as `6`; if the precision is zero, no decimal-point character"," *       appears. An `E` conversion uses the letter `E` (rather than `e`) to introduce the exponent."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`g` `G`</td>"," *     <td>"," *       The float argument is converted in style `f` or `e` (or `F` or `E` for `G` conversions). The precision specifies"," *       the number of significant digits. If the precision is missing, `6` digits are given; if the"," *       precision is zero, it is treated as `1`. Style `e` is used if the exponent from its conversion is less"," *       than `-6` or greater than or equal to the precision. Trailing zeros are removed from the fractional"," *       part of the result; a decimal point appears only if it is followed by at least one digit."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`%`</td>"," *     <td>A literal `%` is written. No argument is converted. The complete conversion specification is `%%`.</td>"," *   </tr>"," *"," * </table>"," * </div>"," *"," * @function sprintf"," * @static"," * @since 1.0.0"," * @memberOf Format"," * @param  {string} [format=''] The format string."," * @param  {...*}               replacements The replacements to produce the string."," * @return {string}             Returns the produced string."," * @example"," * v.sprintf('%s, %s!', 'Hello', 'World');"," * // => 'Hello World!'"," *"," * v.sprintf('%s costs $%d', 'coffee', 2);"," * // => 'coffee costs $2'"," *"," * v.sprintf('%1$s %2$s %1$s %2$s, watcha gonna %3$s', 'bad', 'boys', 'do')"," * // => 'bad boys bad boys, watcha gonna do'"," *"," * v.sprintf('% 6s', 'bird');"," * // => '  bird'"," *"," * v.sprintf('% -6s', 'crab');"," * // => 'crab  '"," *"," * v.sprintf(\"%'*5s\", 'cat');"," * // => '**cat'"," *"," * v.sprintf(\"%'*-6s\", 'duck');"," * // => 'duck**'"," *"," * v.sprintf('%d %i %+d', 15, -2, 25);"," * // => '15 -2 +25'"," *"," * v.sprintf(\"%06d\", 15);"," * // => '000015'"," *"," * v.sprintf('0b%b 0o%o 0x%X', 12, 9, 155);"," * // => '0b1100 0o11 0x9B'"," *"," * v.sprintf('%.2f', 10.469);"," * // => '10.47'"," *"," * v.sprintf('%.2e %g', 100.5, 0.455);"," * // => '1.01e+2 0.455'"," * "," */","function sprintf(format) {","  var formatString = coerceToString(format);","  if (formatString === '') {","    return formatString;","  }","","  for (var _len = arguments.length, replacements = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {","    replacements[_key - 1] = arguments[_key];","  }","","  var boundReplacementMatch = match.bind(undefined, new ReplacementIndex(), replacements);","  return formatString.replace(REGEXP_CONVERSION_SPECIFICATION, boundReplacementMatch);","}","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","/**"," * Produces a string according to `format`. Works exactly like <a href=\"#sprintf\"><code>sprintf()</code></a>,"," * with the only difference that accepts the formatting arguments in an array `values`.<br/>"," * See <a href=\"#sprintf-format\">here</a> `format` string specifications."," *"," * @function vprintf"," * @static"," * @since 1.0.0"," * @memberOf Format"," * @param  {string} format='']  The format string."," * @param  {Array} replacements The array of replacements to produce the string."," * @return {string}             Returns the produced string."," * @example"," * v.vprintf('%s', ['Welcome'])"," * // => 'Welcome'"," *"," * v.vprintf('%s has %d apples', ['Alexandra', 3]);"," * // => 'Alexandra has 3 apples'"," */","function vprintf(format, replacements) {","  return sprintf.apply(undefined, [format].concat(_toConsumableArray(nilDefault(replacements, []))));","}","","var escapeCharactersMap = {","  '<': '&lt;',","  '>': '&gt;',","  '&': '&amp;',","  '\"': '&quot;',","  \"'\": '&#x27;',","  '`': '&#x60;'","};","","/**"," * Return the escaped version of `character`."," *"," * @ignore"," * @param  {string} character The character to be escape."," * @return {string}           The escaped version of character."," */","function replaceSpecialCharacter(character) {","  return escapeCharactersMap[character];","}","","/**"," * Escapes HTML special characters  <code>< > & ' \" `</code> in <code>subject</code>."," *"," * @function escapeHtml"," * @static"," * @since 1.0.0         "," * @memberOf Escape"," * @param {string} [subject=''] The string to escape."," * @return {string} Returns the escaped string."," * @example"," * v.escapeHtml('<p>wonderful world</p>');"," * // => '&lt;p&gt;wonderful world&lt;/p&gt;'"," */","function escapeHtml(subject) {","  return coerceToString(subject).replace(REGEXP_HTML_SPECIAL_CHARACTERS, replaceSpecialCharacter);","}","","/**"," * Escapes the regular expression special characters `- [ ] / { } ( ) * + ? . \\ ^ $ |` in `subject`."," *"," * @function escapeRegExp"," * @static"," * @since 1.0.0"," * @memberOf Escape"," * @param {string} [subject=''] The string to escape."," * @return {string} Returns the escaped string."," * @example"," * v.escapeRegExp('(hours)[minutes]{seconds}');"," * // => '\\(hours\\)\\[minutes\\]\\{seconds\\}'"," */","function escapeRegExp(subject) {","  return coerceToString(subject).replace(REGEXP_SPECIAL_CHARACTERS, '\\\\$&');","}","","var unescapeCharactersMap = {","  '<': /(&lt;)|(&#x0*3c;)|(&#0*60;)/gi,","  '>': /(&gt;)|(&#x0*3e;)|(&#0*62;)/gi,","  '&': /(&amp;)|(&#x0*26;)|(&#0*38;)/gi,","  '\"': /(&quot;)|(&#x0*22;)|(&#0*34;)/gi,","  \"'\": /(&#x0*27;)|(&#0*39;)/gi,","  '`': /(&#x0*60;)|(&#0*96;)/gi","};","var characters = Object.keys(unescapeCharactersMap);","","/**"," * Replaces the HTML entities with corresponding characters."," *"," * @ignore"," * @param  {string} string The accumulator string."," * @param  {string} key    The character."," * @return {string}        The string with replaced HTML entity"," */","function reduceUnescapedString(string, key) {","  return string.replace(unescapeCharactersMap[key], key);","}","","/**"," * Unescapes HTML special characters from <code>&amp;lt; &amp;gt; &amp;amp; &amp;quot; &amp;#x27; &amp;#x60;</code>"," * to corresponding <code>< > & ' \" `</code> in <code>subject</code>."," *"," * @function unescapeHtml"," * @static"," * @since 1.0.0"," * @memberOf Escape"," * @param  {string} [subject=''] The string to unescape."," * @return {string}              Returns the unescaped string."," * @example"," * v.unescapeHtml('&lt;p&gt;wonderful world&lt;/p&gt;');"," * // => '<p>wonderful world</p>'"," */","function unescapeHtml(subject) {","  var subjectString = coerceToString(subject);","  return characters.reduce(reduceUnescapedString, subjectString);","}","","/**"," * Returns the first occurrence index of `search` in `subject`."," *"," * @function indexOf"," * @static"," * @since 1.0.0"," * @memberOf Index"," * @param {string} [subject=''] The string where to search."," * @param {string} search The string to search."," * @param {number} [fromIndex=0] The index to start searching."," * @return {number} Returns the first occurrence index or `-1` if not found."," * @example"," * v.indexOf('morning', 'n');"," * // => 3"," *"," * v.indexOf('evening', 'o');"," * // => -1"," */","function indexOf(subject, search, fromIndex) {","  var subjectString = coerceToString(subject);","  return subjectString.indexOf(search, fromIndex);","}","","/**"," * Returns the last occurrence index of `search` in `subject`."," *"," * @function lastIndexOf"," * @static"," * @since 1.0.0"," * @memberOf Index"," * @param {string} [subject=''] The string where to search."," * @param {string} search The string to search."," * @param {number} [fromIndex=subject.length - 1] The index to start searching backward in the string."," * @return {number} Returns the last occurrence index or `-1` if not found."," * @example"," * v.lastIndexOf('morning', 'n');"," * // => 5"," *"," * v.lastIndexOf('evening', 'o');"," * // => -1"," */","function lastIndexOf(subject, search, fromIndex) {","  var subjectString = coerceToString(subject);","  return subjectString.lastIndexOf(search, fromIndex);","}","","/**"," * Returns the first index of a `pattern` match in `subject`."," *"," * @function search"," * @static"," * @since 1.0.0"," * @memberOf Index"," * @param {string} [subject=''] The string where to search."," * @param {string|RegExp} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern)`."," * @param {number} [fromIndex=0] The index to start searching."," * @return {number} Returns the first match index or `-1` if not found."," * @example"," * v.search('morning', /rn/);"," * // => 2"," *"," * v.search('evening', '/\\d/');"," * // => -1"," */","function search(subject, pattern, fromIndex) {","  var subjectString = coerceToString(subject);","  var fromIndexNumber = isNil(fromIndex) ? 0 : clipNumber(toInteger(fromIndex), 0, subjectString.length);","  var matchIndex = subjectString.substr(fromIndexNumber).search(pattern);","  if (matchIndex !== -1 && !isNaN(fromIndexNumber)) {","    matchIndex += fromIndexNumber;","  }","  return matchIndex;","}","","/**"," * Inserts into `subject` a string `toInsert` at specified `position`."," *"," * @function insert"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string where to insert."," * @param {string} [toInsert=''] The string to be inserted."," * @param {number} [position=0] The position to insert."," * @return {string} Returns the string after insertion."," * @example"," * v.insert('ct', 'a', 1);"," * // => 'cat'"," *"," * v.insert('sunny', ' day', 5);"," * // => 'sunny day'"," */","function insert(subject, toInsert, position) {","  var subjectString = coerceToString(subject);","  var toInsertString = coerceToString(toInsert);","  var positionNumber = coerceToNumber(position);","  if (positionNumber < 0 || positionNumber > subjectString.length || toInsertString === '') {","    return subjectString;","  }","  return subjectString.slice(0, positionNumber) + toInsertString + subjectString.slice(positionNumber);","}","","/**"," * Generated diacritics map. See bellow the base code."," * @ignore"," * @see http://stackoverflow.com/a/18391901/1894471"," * @type Object"," */","","var diacritics = {","  \"3\": \"\\u039e\\u03be\",","  \"8\": \"\\u0398\\u03b8\",","  \"A\": \"\\x41\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\u0100\\u0102\\u0104\\u01cd\\u01de\\u01e0\\u01fa\\u0200\\u0202\\u0226\\u023a\\u1e00\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u24b6\\u2c6f\\uff21\\u0386\\u0391\\u0410\",","  \"B\": \"\\x42\\u0181\\u0182\\u0243\\u1e02\\u1e04\\u1e06\\u24b7\\uff22\\u0392\\u0411\",","  \"C\": \"\\x43\\xc7\\u0106\\u0108\\u010a\\u010c\\u0187\\u023b\\u1e08\\u24b8\\ua73e\\uff23\\u0426\",","  \"D\": \"\\x44\\u010e\\u0110\\u0189\\u018a\\u018b\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u24b9\\ua779\\uff24\\xd0\\u0394\\u0414\",","  \"E\": \"\\x45\\xc8\\xc9\\xca\\xcb\\u0112\\u0114\\u0116\\u0118\\u011a\\u018e\\u0190\\u0204\\u0206\\u0228\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u24ba\\uff25\\u0388\\u0395\\u0415\\u042d\",","  \"F\": \"\\x46\\u0191\\u1e1e\\u24bb\\ua77b\\uff26\\u03a6\\u0424\",","  \"G\": \"\\x47\\u011c\\u011e\\u0120\\u0122\\u0193\\u01e4\\u01e6\\u01f4\\u1e20\\u24bc\\ua77d\\ua77e\\ua7a0\\uff27\\u0393\\u0413\\u0490\",","  \"H\": \"\\x48\\u0124\\u0126\\u021e\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u24bd\\u2c67\\u2c75\\ua78d\\uff28\\u0389\\u0397\\u0425\",","  \"I\": \"\\x49\\xcc\\xcd\\xce\\xcf\\u0128\\u012a\\u012c\\u012e\\u0130\\u0197\\u01cf\\u0208\\u020a\\u1e2c\\u1e2e\\u1ec8\\u1eca\\u24be\\uff29\\u038a\\u0399\\u03aa\\u0406\\u0418\",","  \"J\": \"\\x4a\\u0134\\u0248\\u24bf\\uff2a\\u0419\",","  \"K\": \"\\x4b\\u0136\\u0198\\u01e8\\u1e30\\u1e32\\u1e34\\u24c0\\u2c69\\ua740\\ua742\\ua744\\ua7a2\\uff2b\\u039a\\u041a\",","  \"L\": \"\\x4c\\u0139\\u013b\\u013d\\u013f\\u0141\\u023d\\u1e36\\u1e38\\u1e3a\\u1e3c\\u24c1\\u2c60\\u2c62\\ua746\\ua748\\ua780\\uff2c\\u039b\\u041b\",","  \"M\": \"\\x4d\\u019c\\u1e3e\\u1e40\\u1e42\\u24c2\\u2c6e\\uff2d\\u039c\\u041c\",","  \"N\": \"\\x4e\\xd1\\u0143\\u0145\\u0147\\u019d\\u01f8\\u0220\\u1e44\\u1e46\\u1e48\\u1e4a\\u24c3\\ua790\\ua7a4\\uff2e\\u039d\\u041d\",","  \"O\": \"\\x4f\\xd2\\xd3\\xd4\\xd5\\xd6\\xd8\\u014c\\u014e\\u0150\\u0186\\u019f\\u01a0\\u01d1\\u01ea\\u01ec\\u01fe\\u020c\\u020e\\u022a\\u022c\\u022e\\u0230\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u24c4\\ua74a\\ua74c\\uff2f\\u038c\\u039f\\u041e\",","  \"P\": \"\\x50\\u01a4\\u1e54\\u1e56\\u24c5\\u2c63\\ua750\\ua752\\ua754\\uff30\\u03a0\\u041f\",","  \"Q\": \"\\x51\\u024a\\u24c6\\ua756\\ua758\\uff31\",","  \"R\": \"\\x52\\u0154\\u0156\\u0158\\u0210\\u0212\\u024c\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u24c7\\u2c64\\ua75a\\ua782\\ua7a6\\uff32\\u03a1\\u0420\",","  \"S\": \"\\x53\\u015a\\u015c\\u015e\\u0160\\u0218\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e9e\\u24c8\\u2c7e\\ua784\\ua7a8\\uff33\\u03a3\\u0421\",","  \"T\": \"\\x54\\u0162\\u0164\\u0166\\u01ac\\u01ae\\u021a\\u023e\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u24c9\\ua786\\uff34\\u03a4\\u0422\",","  \"U\": \"\\x55\\xd9\\xda\\xdb\\xdc\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u01af\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u0214\\u0216\\u0244\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u24ca\\uff35\\u0423\\u042a\",","  \"V\": \"\\x56\\u01b2\\u0245\\u1e7c\\u1e7e\\u24cb\\ua75e\\uff36\\u0412\",","  \"W\": \"\\x57\\u0174\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u24cc\\u2c72\\uff37\\u038f\\u03a9\",","  \"X\": \"\\x58\\u1e8a\\u1e8c\\u24cd\\uff38\\u03a7\",","  \"Y\": \"\\x59\\xdd\\u0176\\u0178\\u01b3\\u0232\\u024e\\u1e8e\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efe\\u24ce\\uff39\\u038e\\u03a5\\u03ab\\u042b\",","  \"Z\": \"\\x5a\\u0179\\u017b\\u017d\\u01b5\\u0224\\u1e90\\u1e92\\u1e94\\u24cf\\u2c6b\\u2c7f\\ua762\\uff3a\\u0396\\u0417\",","  \"a\": \"\\x61\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\u0101\\u0103\\u0105\\u01ce\\u01df\\u01e1\\u01fb\\u0201\\u0203\\u0227\\u0250\\u1e01\\u1e9a\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u24d0\\u2c65\\uff41\\u03ac\\u03b1\\u0430\",","  \"b\": \"\\x62\\u0180\\u0183\\u0253\\u1e03\\u1e05\\u1e07\\u24d1\\uff42\\u03b2\\u0431\",","  \"c\": \"\\x63\\xe7\\u0107\\u0109\\u010b\\u010d\\u0188\\u023c\\u1e09\\u2184\\u24d2\\ua73f\\uff43\\u0446\",","  \"d\": \"\\x64\\u010f\\u0111\\u018c\\u0256\\u0257\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u24d3\\ua77a\\uff44\\xf0\\u03b4\\u0434\",","  \"e\": \"\\x65\\xe8\\xe9\\xea\\xeb\\u0113\\u0115\\u0117\\u0119\\u011b\\u01dd\\u0205\\u0207\\u0229\\u0247\\u025b\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u24d4\\uff45\\u03ad\\u03b5\\u0435\\u044d\",","  \"f\": \"\\x66\\u0192\\u1e1f\\u24d5\\ua77c\\uff46\\u03c6\\u0444\",","  \"g\": \"\\x67\\u011d\\u011f\\u0121\\u0123\\u01e5\\u01e7\\u01f5\\u0260\\u1d79\\u1e21\\u24d6\\ua77f\\ua7a1\\uff47\\u03b3\\u0433\\u0491\",","  \"h\": \"\\x68\\u0125\\u0127\\u021f\\u0265\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e96\\u24d7\\u2c68\\u2c76\\uff48\\u03ae\\u03b7\\u0445\",","  \"i\": \"\\x69\\xec\\xed\\xee\\xef\\u0129\\u012b\\u012d\\u012f\\u0131\\u01d0\\u0209\\u020b\\u0268\\u1e2d\\u1e2f\\u1ec9\\u1ecb\\u24d8\\uff49\\u0390\\u03af\\u03b9\\u03ca\\u0438\\u0456\",","  \"j\": \"\\x6a\\u0135\\u01f0\\u0249\\u24d9\\uff4a\\u0439\",","  \"k\": \"\\x6b\\u0137\\u0199\\u01e9\\u1e31\\u1e33\\u1e35\\u24da\\u2c6a\\ua741\\ua743\\ua745\\ua7a3\\uff4b\\u03ba\\u043a\",","  \"l\": \"\\x6c\\u013a\\u013c\\u013e\\u0140\\u0142\\u017f\\u019a\\u026b\\u1e37\\u1e39\\u1e3b\\u1e3d\\u24db\\u2c61\\ua747\\ua749\\ua781\\uff4c\\u03bb\\u043b\",","  \"m\": \"\\x6d\\u026f\\u0271\\u1e3f\\u1e41\\u1e43\\u24dc\\uff4d\\u03bc\\u043c\",","  \"n\": \"\\x6e\\xf1\\u0144\\u0146\\u0148\\u0149\\u019e\\u01f9\\u0272\\u1e45\\u1e47\\u1e49\\u1e4b\\u24dd\\ua791\\ua7a5\\uff4e\\u03bd\\u043d\",","  \"o\": \"\\x6f\\xf2\\xf3\\xf4\\xf5\\xf6\\xf8\\u014d\\u014f\\u0151\\u01a1\\u01d2\\u01eb\\u01ed\\u01ff\\u020d\\u020f\\u022b\\u022d\\u022f\\u0231\\u0254\\u0275\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u24de\\ua74b\\ua74d\\uff4f\\u03bf\\u03cc\\u043e\",","  \"p\": \"\\x70\\u01a5\\u1d7d\\u1e55\\u1e57\\u24df\\ua751\\ua753\\ua755\\uff50\\u03c0\\u043f\",","  \"q\": \"\\x71\\u024b\\u24e0\\ua757\\ua759\\uff51\",","  \"r\": \"\\x72\\u0155\\u0157\\u0159\\u0211\\u0213\\u024d\\u027d\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u24e1\\ua75b\\ua783\\ua7a7\\uff52\\u03c1\\u0440\",","  \"s\": \"\\x73\\xdf\\u015b\\u015d\\u015f\\u0161\\u0219\\u023f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e9b\\u24e2\\ua785\\ua7a9\\uff53\\u03c2\\u03c3\\u0441\",","  \"t\": \"\\x74\\u0163\\u0165\\u0167\\u01ad\\u021b\\u0288\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e97\\u24e3\\u2c66\\ua787\\uff54\\u03c4\\u0442\",","  \"u\": \"\\x75\\xf9\\xfa\\xfb\\xfc\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u01b0\\u01d4\\u01d6\\u01d8\\u01da\\u01dc\\u0215\\u0217\\u0289\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u24e4\\uff55\\u0443\\u044a\",","  \"v\": \"\\x76\\u028b\\u028c\\u1e7d\\u1e7f\\u24e5\\ua75f\\uff56\\u0432\",","  \"w\": \"\\x77\\u0175\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e98\\u24e6\\u2c73\\uff57\\u03c9\\u03ce\",","  \"x\": \"\\x78\\u1e8b\\u1e8d\\u24e7\\uff58\\u03c7\",","  \"y\": \"\\x79\\xfd\\xff\\u0177\\u01b4\\u0233\\u024f\\u1e8f\\u1e99\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1eff\\u24e8\\uff59\\u03b0\\u03c5\\u03cb\\u03cd\\u044b\",","  \"z\": \"\\x7a\\u017a\\u017c\\u017e\\u01b6\\u0225\\u0240\\u1e91\\u1e93\\u1e95\\u24e9\\u2c6c\\ua763\\uff5a\\u03b6\\u0437\",","  \"OE\": \"\\x8c\\u0152\",","  \"oe\": \"\\x9c\\u0153\",","  \"AE\": \"\\xc6\\u01e2\\u01fc\",","  \"ae\": \"\\xe6\\u01e3\\u01fd\",","  \"hv\": \"\\u0195\",","  \"OI\": \"\\u01a2\",","  \"oi\": \"\\u01a3\",","  \"DZ\": \"\\u01c4\\u01f1\",","  \"Dz\": \"\\u01c5\\u01f2\",","  \"dz\": \"\\u01c6\\u01f3\",","  \"LJ\": \"\\u01c7\",","  \"Lj\": \"\\u01c8\",","  \"lj\": \"\\u01c9\",","  \"NJ\": \"\\u01ca\",","  \"Nj\": \"\\u01cb\",","  \"nj\": \"\\u01cc\",","  \"OU\": \"\\u0222\",","  \"ou\": \"\\u0223\",","  \"TZ\": \"\\ua728\",","  \"tz\": \"\\ua729\",","  \"AA\": \"\\ua732\",","  \"aa\": \"\\ua733\",","  \"AO\": \"\\ua734\",","  \"ao\": \"\\ua735\",","  \"AU\": \"\\ua736\",","  \"au\": \"\\ua737\",","  \"AV\": \"\\ua738\\ua73a\",","  \"av\": \"\\ua739\\ua73b\",","  \"AY\": \"\\ua73c\",","  \"ay\": \"\\ua73d\",","  \"OO\": \"\\ua74e\",","  \"oo\": \"\\ua74f\",","  \"VY\": \"\\ua760\",","  \"vy\": \"\\ua761\",","  \"TH\": \"\\xde\",","  \"th\": \"\\xfe\",","  \"PS\": \"\\u03a8\",","  \"ps\": \"\\u03c8\",","  \"Yo\": \"\\u0401\",","  \"Ye\": \"\\u0404\",","  \"Yi\": \"\\u0407\",","  \"Zh\": \"\\u0416\",","  \"Ch\": \"\\u0427\",","  \"Sh\": \"\\u0428\\u0429\",","  \"\": \"\\u042c\\u044c\",","  \"Yu\": \"\\u042e\",","  \"Ya\": \"\\u042f\",","  \"zh\": \"\\u0436\",","  \"ch\": \"\\u0447\",","  \"sh\": \"\\u0448\\u0449\",","  \"yu\": \"\\u044e\",","  \"ya\": \"\\u044f\",","  \"yo\": \"\\u0451\",","  \"ye\": \"\\u0454\",","  \"yi\": \"\\u0457\"","};","","var diacriticsMap = null;","","/**"," * Creates a map of the diacritics."," *"," * @ignore"," * @returns {Object} Returns the diacritics map."," */","function getDiacriticsMap() {","  if (diacriticsMap !== null) {","    return diacriticsMap;","  }","  diacriticsMap = {};","  Object.keys(diacritics).forEach(function (key) {","    var characters = diacritics[key];","    for (var index = 0; index < characters.length; index++) {","      var character = characters[index];","      diacriticsMap[character] = key;","    }","  });","  return diacriticsMap;","}","","/**"," * Get the latin character from character with diacritics."," *"," * @ignore"," * @param   {string} character The character with diacritics."," * @returns {string}           Returns the character without diacritics."," */","function getLatinCharacter(character) {","  var characterWithoutDiacritic = getDiacriticsMap()[character];","  return characterWithoutDiacritic ? characterWithoutDiacritic : character;","}","","/**"," * Returns the `cleanCharacter` from combining marks regular expression match."," *"," * @ignore"," * @param {string} character The character with combining marks"," * @param {string} cleanCharacter The character without combining marks."," * @return {string} The character without combining marks."," */","function removeCombiningMarks(character, cleanCharacter) {","  return cleanCharacter;","}","","/**"," * Latinises the `subject` by removing diacritic characters."," *"," * @function latinise"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to latinise."," * @return {string} Returns the latinised string."," * @example"," * v.latinise('cafe\\u0301'); // or 'café'"," * // => 'cafe'"," *"," * v.latinise('août décembre');"," * // => 'aout decembre'"," *"," * v.latinise('как прекрасен этот мир');"," * // => 'kak prekrasen etot mir'"," */","function latinise(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  return subjectString.replace(REGEXP_NON_LATIN, getLatinCharacter).replace(REGEXP_COMBINING_MARKS, removeCombiningMarks);","}","","/**"," * Pads `subject` to a new `length`."," *"," * @function pad"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the padded string."," * @example"," * v.pad('dog', 5);"," * // => ' dog '"," *"," * v.pad('bird', 6, '-');"," * // => '-bird-'"," *"," * v.pad('cat', 6, '-=');"," * // => '-cat-='"," */","function pad(subject, length, pad) {","  var subjectString = coerceToString(subject);","  var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);","  var padString = coerceToString(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  var paddingLength = lengthInt - subjectString.length;","  var paddingSideLength = toInteger(paddingLength / 2);","  var paddingSideRemainingLength = paddingLength % 2;","  return buildPadding(padString, paddingSideLength) + subjectString + buildPadding(padString, paddingSideLength + paddingSideRemainingLength);","}","","/**"," * Replaces the matches of `pattern` with `replacement`. <br/>"," *"," * @function replace"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to verify."," * @param {string|RegExp} pattern The pattern which match is replaced. If `pattern` is a string,"," * a simple string match is evaluated and only the first occurrence replaced."," * @param {string|Function} replacement The string or function which invocation result replaces `pattern` match."," * @return {string} Returns the replacement result."," * @example"," * v.replace('swan', 'wa', 'u');"," * // => 'sun'"," *"," * v.replace('domestic duck', /domestic\\s/, '');"," * // => 'duck'"," *"," * v.replace('nice duck', /(nice)(duck)/, function(match, nice, duck) {"," *   return 'the ' + duck + ' is ' + nice;"," * });"," * // => 'the duck is nice'"," */","function replace(subject, pattern, replacement) {","  var subjectString = coerceToString(subject);","  return subjectString.replace(pattern, replacement);","}","","/**"," * Get the flags string from a regular expression object."," *"," * @ignore"," * @param {RegExp} regExp The regular expression object."," * @return {string} Returns the string with flags chars."," */","function getRegExpFlags(regExp) {","  return regExp.toString().match(REGEXP_FLAGS)[0];","}","","/**"," * Checks whether `subject` includes `search` starting from `position`."," *"," * @function includes"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string where to search."," * @param {string} search The string to search."," * @param {number} [position=0] The position to start searching."," * @return {boolean} Returns `true` if `subject` includes `search` or `false` otherwise."," * @example"," * v.includes('starship', 'star');"," * // => true"," *"," * v.includes('galaxy', 'g', 1);"," * // => false"," */","function includes(subject, search, position) {","  var subjectString = coerceToString(subject);","  var searchString = toString(search);","  if (searchString === null) {","    return false;","  }","  if (searchString === '') {","    return true;","  }","  position = isNil(position) ? 0 : clipNumber(toInteger(position), 0, subjectString.length);","  return subjectString.indexOf(searchString, position) !== -1;","}","","/**"," * Append flag to a regular expression."," *"," * @ignore"," * @param {RegExp} pattern The pattern to coerce."," * @param {string} appendFlag The flag to append to regular expression."," * @return {RegExp} The regular expression with added flag."," */","function appendFlagToRegExp(pattern, appendFlag) {","  var regularExpressionFlags = getRegExpFlags(pattern);","  if (!includes(regularExpressionFlags, appendFlag)) {","    return new RegExp(pattern.source, regularExpressionFlags + appendFlag);","  }","  return pattern;","}","","/**"," * Replaces all matches of `pattern` with `replacement`. <br/>"," *"," * @function replaceAll"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to verify."," * @param {string|RegExp} pattern The pattern which match is replaced. If `pattern` is a string, a simple string match is evaluated."," * All matches are replaced."," * @param {string|Function} replacement The string or function which invocation result replaces `pattern` match."," * @return {string} Returns the replacement result."," * @example"," * v.replaceAll('good morning', 'o', '*');"," * // => 'g**d m*rning'"," * v.replaceAll('evening', /n/, 's');"," * // => 'evesisg'"," *"," */","function replaceAll(subject, pattern, replacement) {","  var subjectString = coerceToString(subject);","  var regExp = pattern;","  if (!(pattern instanceof RegExp)) {","    regExp = new RegExp(escapeRegExp(pattern), 'g');","  } else if (!pattern.global) {","    regExp = appendFlagToRegExp(pattern, 'g');","  }","  return subjectString.replace(regExp, replacement);","}","","/**"," * Reverses the `subject`."," *"," * @function reverse"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to reverse."," * @return {string} Returns the reversed string."," * @example"," * v.reverse('winter');"," * // => 'retniw'"," */","function reverse(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.split('').reverse().join('');","}","","/**"," * Reverses the `subject` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function reverseGrapheme"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to reverse."," * @return {string} Returns the reversed string."," * @example"," * v.reverseGrapheme('summer');"," * // => 'remmus'"," *"," * v.reverseGrapheme('𝌆 bar mañana mañana');"," * // => 'anañam anañam rab 𝌆'"," */","function reverseGrapheme(subject) {","  var subjectString = coerceToString(subject);","  /**","   * @see https://github.com/mathiasbynens/esrever","   */","  subjectString = subjectString.replace(REGEXP_COMBINING_MARKS, function ($0, $1, $2) {","    return reverseGrapheme($2) + $1;","  }).replace(REGEXP_SURROGATE_PAIRS, '$2$1');","  var reversedString = '';","  var index = subjectString.length;","  while (index--) {","    reversedString += subjectString.charAt(index);","  }","  return reversedString;","}","","/**"," * Slugifies the `subject`. Cleans the `subject` by replacing diacritics with corresponding latin characters."," *"," * @function slugify"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to slugify."," * @return {string} Returns the slugified string."," * @example"," * v.slugify('Italian cappuccino drink');"," * // => 'italian-cappuccino-drink'"," *"," * v.slugify('caffé latté');"," * // => 'caffe-latte'"," *"," * v.slugify('хорошая погода');"," * // => 'horoshaya-pogoda'"," */","function slugify(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  var cleanSubjectString = latinise(subjectString).replace(REGEXP_NON_LATIN, '-');","  return kebabCase(cleanSubjectString);","}","","/**"," * Changes `subject` by deleting `deleteCount` of characters starting at position `start`. Places a new string"," * `toAdd` instead of deleted characters."," *"," * @function splice"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string where to insert."," * @param {string} start The position to start changing the string. For a negative position will start from the end of"," * the string."," * @param {number} [deleteCount=subject.length-start] The number of characters to delete from string."," * @param {string} [toAdd=''] The string to be added instead of deleted characters."," * @return {string} Returns the modified string."," * @example"," * v.splice('new year', 0, 4);"," * // => 'year'"," *"," * v.splice('new year', 0, 3, 'happy');"," * // => 'happy year'"," *"," * v.splice('new year', -4, 4, 'day');"," * // => 'new day'"," */","function splice(subject, start, deleteCount, toAdd) {","  var subjectString = coerceToString(subject);","  var toAddString = coerceToString(toAdd);","  var startPosition = coerceToNumber(start);","  if (startPosition < 0) {","    startPosition = subjectString.length + startPosition;","    if (startPosition < 0) {","      startPosition = 0;","    }","  } else if (startPosition > subjectString.length) {","    startPosition = subjectString.length;","  }","  var deleteCountNumber = coerceToNumber(deleteCount, subjectString.length - startPosition);","  if (deleteCountNumber < 0) {","    deleteCountNumber = 0;","  }","  return subjectString.slice(0, startPosition) + toAddString + subjectString.slice(startPosition + deleteCountNumber);","}","","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();","","/**"," * Translates characters or replaces substrings in `subject`."," *"," * @function tr"," * @static"," * @since 1.3.0"," * @memberOf Manipulate"," * @param  {string} [subject=''] The string to translate."," * @param  {string|Object} from The string of characters to translate from. Or an object, then the object keys are replaced with corresponding values (longest keys are tried first)."," * @param  {string} to The string of characters to translate to. Ignored when `from` is an object."," * @return {string} Returns the translated string."," * @example"," * v.tr('hello', 'el', 'ip');"," * // => 'hippo'"," * "," * v.tr('légèreté', 'éè', 'ee');"," * // => 'legerete'"," * "," * v.tr('Yes. The fire rises.', {"," *   'Yes': 'Awesome',"," *   'fire': 'flame'"," * })"," * // => 'Awesome. The flame rises.'"," * "," * v.tr(':where is the birthplace of :what', {"," *   ':where': 'Africa',"," *   ':what': 'Humanity'"," * });"," * // => 'Africa is the birthplace of Humanity'"," * "," */","function tr(subject, from, to) {","  var subjectString = coerceToString(subject);","  var keys = void 0;","  var values = void 0;","  if (isString(from) && isString(to)) {","    keys = from.split('');","    values = to.split('');","  } else {","    var _extractKeysAndValues = extractKeysAndValues(nilDefault(from, {}));","","    var _extractKeysAndValues2 = _slicedToArray(_extractKeysAndValues, 2);","","    keys = _extractKeysAndValues2[0];","    values = _extractKeysAndValues2[1];","  }","  if (keys.length === 0) {","    return subjectString;","  }","  var result = '';","  var valuesLength = values.length;","  var keysLength = keys.length;","  for (var index = 0; index < subjectString.length; index++) {","    var isMatch = false;","    var matchValue = void 0;","    for (var keyIndex = 0; keyIndex < keysLength && keyIndex < valuesLength; keyIndex++) {","      var key = keys[keyIndex];","      if (subjectString.substr(index, key.length) === key) {","        isMatch = true;","        matchValue = values[keyIndex];","        index = index + key.length - 1;","        break;","      }","    }","    result += isMatch ? matchValue : subjectString[index];","  }","  return result;","}","","function extractKeysAndValues(object) {","  var keys = Object.keys(object);","  var values = keys.sort(sortStringByLength).map(function (key) {","    return object[key];","  });","  return [keys, values];","}","","function sortStringByLength(str1, str2) {","  if (str1.length === str2.length) {","    return 0;","  }","  return str1.length < str2.length ? 1 : -1;","}","","var reduce$1 = Array.prototype.reduce;","","/**"," * Removes whitespaces from the left side of the `subject`."," *"," * @function trimLeft"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trimLeft('  Starship Troopers');"," * // => 'Starship Troopers'"," *"," * v.trimLeft('***Mobile Infantry', '*');"," * // => 'Mobile Infantry'"," */","function trimLeft(subject, whitespace$$1) {","  var subjectString = coerceToString(subject);","  if (whitespace$$1 === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = toString(whitespace$$1);","  if (isNil(whitespaceString)) {","    return subjectString.replace(REGEXP_TRIM_LEFT, '');","  }","  var matchWhitespace = true;","  return reduce$1.call(subjectString, function (trimmed, character) {","    if (matchWhitespace && includes(whitespaceString, character)) {","      return trimmed;","    }","    matchWhitespace = false;","    return trimmed + character;","  }, '');","}","","var reduceRight = Array.prototype.reduceRight;","","/**"," * Removes whitespaces from the right side of the `subject`."," *"," * @function trimRight"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trimRight('the fire rises   ');"," * // => 'the fire rises'"," *"," * v.trimRight('do you feel in charge?!!!', '!');"," * // => 'do you feel in charge?'"," */","function trimRight(subject, whitespace$$1) {","  var subjectString = coerceToString(subject);","  if (whitespace$$1 === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = toString(whitespace$$1);","  if (isNil(whitespaceString)) {","    return subjectString.replace(REGEXP_TRIM_RIGHT, '');","  }","  var matchWhitespace = true;","  return reduceRight.call(subjectString, function (trimmed, character) {","    if (matchWhitespace && includes(whitespaceString, character)) {","      return trimmed;","    }","    matchWhitespace = false;","    return character + trimmed;","  }, '');","}","","/**"," * Removes whitespaces from left and right sides of the `subject`."," *"," * @function trim"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trim(' Mother nature ');"," * // => 'Mother nature'"," *"," * v.trim('--Earth--', '-');"," * // => 'Earth'"," */","function trim(subject, whitespace) {","  var subjectString = coerceToString(subject);","  if (whitespace === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = toString(whitespace);","  if (isNil(whitespaceString)) {","    return subjectString.trim();","  }","  return trimRight(trimLeft(subjectString, whitespaceString), whitespaceString);","}","","var OPTION_WIDTH = 'width';","var OPTION_NEW_LINE = 'newLine';","var OPTION_INDENT = 'indent';","var OPTION_CUT = 'cut';","","/**"," * Wraps `subject` to a given number of characters using a string break character."," *"," * @function wordWrap"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param  {string} [subject=''] The string to wrap."," * @param  {Object} [options={}] The wrap options."," * @param  {number} [options.width=75] The number of characters at which to wrap."," * @param  {string} [options.newLine='\\n'] The string to add at the end of line."," * @param  {string} [options.indent='']  The string to intend the line."," * @param  {boolean} [options.cut=false] When `false` (default) does not split the word even if word length is bigger than `width`. <br/>"," *                                       When `true` breaks the word that has length bigger than `width`."," *"," * @return {string} Returns wrapped string."," * @example"," * v.wordWrap('Hello world', {"," *   width: 5"," * });"," * // => 'Hello\\nworld'"," *"," * v.wordWrap('Hello world', {"," *   width: 5,"," *   newLine: '<br/>',"," *   indent: '__'"," * });"," * // => '__Hello<br/>__world'"," *"," * v.wordWrap('Wonderful world', {"," *   width: 5,"," *   cut: true"," * });"," * // => 'Wonde\\nrful\\nworld'"," *"," */","function wordWrap(subject) {","  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","  var subjectString = coerceToString(subject);","","  var _determineOptions = determineOptions(options),","      width = _determineOptions.width,","      newLine = _determineOptions.newLine,","      indent = _determineOptions.indent,","      cut = _determineOptions.cut;","","  if (subjectString === '' || width <= 0) {","    return indent;","  }","  var subjectLength = subjectString.length;","  var substring = subjectString.substring.bind(subjectString);","  var offset = 0;","  var wrappedLine = '';","  while (subjectLength - offset > width) {","    if (subjectString[offset] === ' ') {","      offset++;","      continue;","    }","    var spaceToWrapAt = subjectString.lastIndexOf(' ', width + offset);","    if (spaceToWrapAt >= offset) {","      wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;","      offset = spaceToWrapAt + 1;","    } else {","      if (cut) {","        wrappedLine += indent + substring(offset, width + offset) + newLine;","        offset += width;","      } else {","        spaceToWrapAt = subjectString.indexOf(' ', width + offset);","        if (spaceToWrapAt >= 0) {","          wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;","          offset = spaceToWrapAt + 1;","        } else {","          wrappedLine += indent + substring(offset);","          offset = subjectLength;","        }","      }","    }","  }","  if (offset < subjectLength) {","    wrappedLine += indent + substring(offset);","  }","  return wrappedLine;","}","","/**"," * Determine the word wrap options. The missing values are filled with defaults."," *"," * @param  {Object} options  The options object."," * @return {Object}          The word wrap options, with default settings if necessary."," * @ignore"," */","function determineOptions(options) {","  return {","    width: coerceToNumber(options[OPTION_WIDTH], 75),","    newLine: coerceToString(options[OPTION_NEW_LINE], '\\n'),","    indent: coerceToString(options[OPTION_INDENT], ''),","    cut: coerceToBoolean(options[OPTION_CUT], false)","  };","}","","/**"," * Checks whether `subject` ends with `end`."," *"," * @function endsWith"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {string} end The ending string."," * @param {number} [position=subject.length] Search within `subject` as if the string were only `position` long."," * @return {boolean} Returns `true` if `subject` ends with `end` or `false` otherwise."," * @example"," * v.endsWith('red alert', 'alert');"," * // => true"," *"," * v.endsWith('metro south', 'metro');"," * // => false"," *"," * v.endsWith('Murphy', 'ph', 5);"," * // => true"," */","function endsWith(subject, end, position) {","  if (isNil(end)) {","    return false;","  }","  var subjectString = coerceToString(subject);","  var endString = coerceToString(end);","  if (endString === '') {","    return true;","  }","  position = isNil(position) ? subjectString.length : clipNumber(toInteger(position), 0, subjectString.length);","  position -= endString.length;","  var lastIndex = subjectString.indexOf(endString, position);","  return lastIndex !== -1 && lastIndex === position;","}","","/**"," * Checks whether `subject` contains only alpha characters."," *"," * @function isAlpha"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only alpha characters or `false` otherwise."," * @example"," * v.isAlpha('bart');"," * // => true"," *"," * v.isAlpha('lisa!');"," * // => false"," *"," * v.isAlpha('lisa and bart');"," * // => false"," */","function isAlpha(subject) {","  var subjectString = coerceToString(subject);","  return REGEXP_ALPHA.test(subjectString);","}","","/**"," * Checks whether `subject` contains only alpha and digit characters."," *"," * @function isAlphaDigit"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only alpha and digit characters or `false` otherwise."," * @example"," * v.isAlphaDigit('year2020');"," * // => true"," *"," * v.isAlphaDigit('1448');"," * // => true"," *"," * v.isAlphaDigit('40-20');"," * // => false"," */","function isAlphaDigit(subject) {","  var subjectString = coerceToString(subject);","  return REGEXP_ALPHA_DIGIT.test(subjectString);","}","","/**"," * Checks whether `subject` is empty or contains only whitespaces."," *"," * @function isBlank"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is empty or contains only whitespaces or `false` otherwise."," * @example"," * v.isBlank('');"," * // => true"," *"," * v.isBlank('  ');"," * // => true"," *"," * v.isBlank('World');"," * // => false"," */","function isBlank(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.trim().length === 0;","}","","/**"," * Checks whether `subject` contains only digit characters."," *"," * @function isDigit"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only digit characters or `false` otherwise."," * @example"," * v.isDigit('35');"," * // => true"," *"," * v.isDigit('1.5');"," * // => false"," *"," * v.isDigit('ten');"," * // => false"," */","function isDigit(subject) {","  var subjectString = coerceToString(subject);","  return REGEXP_DIGIT.test(subjectString);","}","","/**"," * Checks whether `subject` is empty."," *"," * @function isEmpty"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is empty or `false` otherwise"," * @example"," * v.isEmpty('');"," * // => true"," *"," * v.isEmpty('  ');"," * // => false"," *"," * v.isEmpty('sun');"," * // => false"," */","function isEmpty(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.length === 0;","}","","/**"," * Checks whether `subject` has only lower case characters."," *"," * @function isLowerCase"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is lower case or `false` otherwise."," * @example"," * v.isLowerCase('motorcycle');"," * // => true"," *"," * v.isLowerCase('John');"," * // => false"," *"," * v.isLowerCase('T1000');"," * // => false"," */","function isLowerCase(subject) {","  var valueString = coerceToString(subject);","  return isAlpha(valueString) && valueString.toLowerCase() === valueString;","}","","/**"," * Checks whether `subject` is numeric."," *"," * @function isNumeric"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is numeric or `false` otherwise."," * @example"," * v.isNumeric('350');"," * // => true"," *"," * v.isNumeric('-20.5');"," * // => true"," *"," * v.isNumeric('1.5E+2');"," * // => true"," *"," * v.isNumeric('five');"," * // => false"," */","function isNumeric(subject) {","  var valueNumeric = typeof subject === 'object' && !isNil(subject) ? Number(subject) : subject;","  return (typeof valueNumeric === 'number' || typeof valueNumeric === 'string') && !isNaN(valueNumeric - parseFloat(valueNumeric));","}","","/**"," * Checks whether `subject` contains only upper case characters."," *"," * @function isUpperCase"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is upper case or `false` otherwise."," * @example"," * v.isUpperCase('ACDC');"," * // => true"," *"," * v.isUpperCase('Morning');"," * // => false"," */","function isUpperCase(subject) {","  var subjectString = coerceToString(subject);","  return isAlpha(subjectString) && subjectString.toUpperCase() === subjectString;","}","","/**"," * Checks whether `subject` matches the regular expression `pattern`."," *"," * @function matches"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {RegExp|string} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {boolean} Returns `true` if `subject` matches `pattern` or `false` otherwise."," * @example"," * v.matches('pluto', /plu.{2}/);"," * // => true"," *"," * v.matches('sun', 'S', 'i');"," * // => true"," *"," * v.matches('apollo 11', '\\\\d{3}');"," * // => false"," */","function matches(subject, pattern, flags) {","  var subjectString = coerceToString(subject);","  var flagsString = coerceToString(flags);","  var patternString = void 0;","  if (!(pattern instanceof RegExp)) {","    patternString = toString(pattern);","    if (patternString === null) {","      return false;","    }","    pattern = new RegExp(patternString, flagsString);","  }","  return pattern.test(subjectString);","}","","/**"," * Checks whether `subject` starts with `start`."," *"," * @function startsWith"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {string} start The starting string."," * @param {number} [position=0] The position to start searching."," * @return {boolean} Returns `true` if `subject` starts with `start` or `false` otherwise."," * @example"," * v.startsWith('say hello to my little friend', 'say hello');"," * // => true"," *"," * v.startsWith('tony', 'on', 1);"," * // => true"," *"," * v.startsWith('the world is yours', 'world');"," * // => false"," */","function startsWith(subject, start, position) {","  var subjectString = coerceToString(subject);","  var startString = toString(start);","  if (startString === null) {","    return false;","  }","  if (startString === '') {","    return true;","  }","  position = isNil(position) ? 0 : clipNumber(toInteger(position), 0, subjectString.length);","  return subjectString.substr(position, startString.length) === startString;","}","","/**"," * Splits `subject` into an array of characters."," *"," * @function chars"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @return {Array} Returns the array of characters."," * @example"," * v.chars('cloud');"," * // => ['c', 'l', 'o', 'u', 'd']"," */","function chars(subject) {","  var subjectString = coerceToString(subject);","  return subjectString.split('');","}","","/**"," * Returns an array of Unicode code point values from characters of `subject`."," *"," * @function codePoints"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param  {string} [subject=''] The string to extract from."," * @return {Array} Returns an array of non-negative numbers less than or equal to `0x10FFFF`."," * @example"," * v.codePoints('rain');"," * // => [114, 97, 105, 110], or"," * //    [0x72, 0x61, 0x69, 0x6E]"," *"," * v.codePoints('\\uD83D\\uDE00 smile'); // or '😀 smile'"," * // => [128512, 32, 115, 109, 105, 108, 101], or"," * //    [0x1F600, 0x20, 0x73, 0x6D, 0x69, 0x6C, 0x65]"," */","function codePoints(subject) {","  var subjectString = coerceToString(subject);","  var subjectStringLength = subjectString.length;","  var codePointArray = [];","  var index = 0;","  var codePointNumber = void 0;","  while (index < subjectStringLength) {","    codePointNumber = codePointAt(subjectString, index);","    codePointArray.push(codePointNumber);","    index += codePointNumber > 0xFFFF ? 2 : 1;","  }","  return codePointArray;","}","","/**"," * Splits `subject` into an array of graphemes taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function graphemes"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @return {Array} Returns the array of graphemes."," * @example"," * v.graphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'"," * // => ['\\uD835\\uDC00', '\\uD835\\uDC01'], or"," * //    ['𝐀', '𝐁']"," *"," * v.graphemes('cafe\\u0301'); // or 'café'"," * // => ['c', 'a', 'f', 'e\\u0301'], or"," * //    ['c', 'a', 'f', 'é']"," */","function graphemes(subject) {","  var subjectString = coerceToString(subject);","  return nilDefault(subjectString.match(REGEXP_UNICODE_CHARACTER), []);","}","","/**"," * Splits `subject` into an array of chunks by `separator`."," *"," * @function split"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @param {string|RegExp} [separator] The pattern to match the separator."," * @param {number} [limit] Limit the number of chunks to be found."," * @return {Array} Returns the array of chunks."," * @example"," * v.split('rage against the dying of the light', ' ');"," * // => ['rage', 'against', 'the', 'dying', 'of', 'the', 'light']"," *"," * v.split('the dying of the light', /\\s/, 3);"," * // => ['the', 'dying', 'of']"," */","function split(subject, separator, limit) {","  var subjectString = coerceToString(subject);","  return subjectString.split(separator, limit);","}","","var BYRE_ORDER_MARK = '\\uFEFF';","","/**"," * Strips the byte order mark (BOM) from the beginning of `subject`."," *"," * @function stripBom"," * @static"," * @since 1.2.0"," * @memberOf Strip"," * @param {string} [subject=''] The string to strip from."," * @return {string} Returns the stripped string."," * @example"," *"," * v.stripBom('\\uFEFFsummertime sadness');"," * // => 'summertime sadness'"," *"," * v.stripBom('summertime happiness');"," * // => 'summertime happiness'"," *"," */","function trim$1(subject) {","  var subjectString = coerceToString(subject);","  if (subjectString === '') {","    return '';","  }","  if (subjectString[0] === BYRE_ORDER_MARK) {","    return subjectString.substring(1);","  }","  return subjectString;","}","","/**"," * Checks whether `subject` contains substring at specific `index`."," *"," * @ignore"," * @param {string} subject The subject to search in."," * @param {string} substring The substring to search/"," * @param {number} index The index to search substring."," * @param {boolean} lookBehind Whether to look behind (true) or ahead (false)."," * @return {boolean} Returns a boolean whether the substring exists."," */","function hasSubstringAtIndex(subject, substring, index) {","  var lookBehind = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;","","  var indexOffset = 0;","  if (lookBehind) {","    indexOffset = -substring.length + 1;","  }","  var extractedSubstring = subject.substr(index + indexOffset, substring.length);","  return extractedSubstring.toLowerCase() === substring;","}","","/**"," * Parses the tags from the string '<tag1><tag2>...<tagN>'."," *"," * @ignore"," * @param {string} tags The string that contains the tags."," * @return {string[]} Returns the array of tag names."," */","function parseTagList(tags) {","  var tagsList = [];","  var match = void 0;","  while ((match = REGEXP_TAG_LIST.exec(tags)) !== null) {","    tagsList.push(match[1]);","  }","  return tagsList;","}","","var STATE_START_TAG = 0;","var STATE_NON_WHITESPACE = 1;","var STATE_DONE = 2;","","/**"," * Parses the tag name from html content."," *"," * @ignore"," * @param {string} tagContent The tag content."," * @return {string} Returns the tag name."," */","function parseTagName(tagContent) {","  var state = STATE_START_TAG;","  var tagName = '';","  var index = 0;","  while (state !== STATE_DONE) {","    var char = tagContent[index++].toLowerCase();","    switch (char) {","      case '<':","        break;","      case '>':","        state = STATE_DONE;","        break;","      default:","        if (REGEXP_WHITESPACE.test(char)) {","          if (state === STATE_NON_WHITESPACE) {","            state = STATE_DONE;","          }","        } else {","          if (state === STATE_START_TAG) {","            state = STATE_NON_WHITESPACE;","          }","          if (char !== '/') {","            tagName += char;","          }","        }","        break;","    }","  }","  return tagName;","}","","var STATE_OUTPUT = 0;","var STATE_HTML = 1;","var STATE_EXCLAMATION = 2;","var STATE_COMMENT = 3;","","/**"," * Strips HTML tags from `subject`."," *"," * @function stripTags"," * @static"," * @since 1.1.0"," * @memberOf Strip"," * @param {string} [subject=''] The string to strip from."," * @param {string|Array} [allowableTags] The string `'<tag1><tag2>'` or array `['tag1', 'tag2']` of tags that should not be stripped."," * @param {string} [replacement=''] The string to replace the stripped tag."," * @return {string} Returns the stripped string."," * @example"," *"," * v.stripTags('<span><a href=\"#\">Summer</a> is nice</span>');"," * // => 'Summer is nice'"," *"," * v.stripTags('<span><i>Winter</i> is <b>cold</b></span>', ['b', 'i']);"," * // => '<i>Winter</i> is <b>cold</b>'"," *"," * v.stripTags('Sun<br/>set', '', '-');"," * // => 'Sun-set'"," */","function trim$2(subject, allowableTags, replacement) {","  subject = coerceToString(subject);","  if (subject === '') {","    return '';","  }","  if (!Array.isArray(allowableTags)) {","    var allowableTagsString = coerceToString(allowableTags);","    allowableTags = allowableTagsString === '' ? [] : parseTagList(allowableTagsString);","  }","  var replacementString = coerceToString(replacement);","  var length = subject.length;","  var hasAllowableTags = allowableTags.length > 0;","  var hasSubstring = hasSubstringAtIndex.bind(null, subject);","  var state = STATE_OUTPUT;","  var depth = 0;","  var output = '';","  var tagContent = '';","  var quote = null;","  for (var index = 0; index < length; index++) {","    var char = subject[index];","    var advance = false;","    switch (char) {","      case '<':","        if (quote) {","          break;","        }","        if (hasSubstring('< ', index, false)) {","          advance = true;","          break;","        }","        if (state === STATE_OUTPUT) {","          advance = true;","          state = STATE_HTML;","          break;","        }","        if (state === STATE_HTML) {","          depth++;","          break;","        }","        advance = true;","        break;","      case '!':","        if (state === STATE_HTML && hasSubstring('<!', index)) {","          state = STATE_EXCLAMATION;","          break;","        }","        advance = true;","        break;","      case '-':","        if (state === STATE_EXCLAMATION && hasSubstring('!--', index)) {","          state = STATE_COMMENT;","          break;","        }","        advance = true;","        break;","      case '\"':","      case \"'\":","        if (state === STATE_HTML) {","          if (quote === char) {","            quote = null;","          } else if (!quote) {","            quote = char;","          }","        }","        advance = true;","        break;","      case 'E':","      case 'e':","        if (state === STATE_EXCLAMATION && hasSubstring('doctype', index)) {","          state = STATE_HTML;","          break;","        }","        advance = true;","        break;","      case '>':","        if (depth > 0) {","          depth--;","          break;","        }","        if (quote) {","          break;","        }","        if (state === STATE_HTML) {","          quote = null;","          state = STATE_OUTPUT;","          if (hasAllowableTags) {","            tagContent += '>';","            var tagName = parseTagName(tagContent);","            if (allowableTags.indexOf(tagName.toLowerCase()) !== -1) {","              output += tagContent;","            } else {","              output += replacementString;","            }","            tagContent = '';","          } else {","            output += replacementString;","          }","          break;","        }","        if (state === STATE_EXCLAMATION || state === STATE_COMMENT && hasSubstring('-->', index)) {","          quote = null;","          state = STATE_OUTPUT;","          tagContent = '';","          break;","        }","        advance = true;","        break;","      default:","        advance = true;","    }","    if (advance) {","      switch (state) {","        case STATE_OUTPUT:","          output += char;","          break;","        case STATE_HTML:","          if (hasAllowableTags) {","            tagContent += char;","          }","          break;","      }","    }","  }","  return output;","}","","var globalObject$1 = null;","","function getGlobalObject() {","  if (globalObject$1 !== null) {","    return globalObject$1;","  }","  /* istanbul ignore next */","  // It's hard to mock the global variables. This code surely works fine. I hope :)","  if (typeof global === 'object' && global.Object === Object) {","    // NodeJS global object","    globalObject$1 = global;","  } else if (typeof self === 'object' && self.Object === Object) {","    // self property from Window object","    globalObject$1 = self;","  } else {","    // Other cases. Function constructor always has the context as global object","    globalObject$1 = new Function('return this')();","  }","  return globalObject$1;","}","","var globalObject = getGlobalObject();","var previousV = globalObject.v;","","/**"," * Restores `v` variable to previous value and returns Voca library instance."," *"," * @function noConflict"," * @static"," * @since 1.0.0"," * @memberOf Util"," * @return {Object} Returns Voca library instance."," * @example"," * var voca = v.noConflict();"," * voca.isAlpha('Hello');"," * // => true"," */","function noConflict() {","  if (this === globalObject.v) {","    globalObject.v = previousV;","  }","  return this;","}","","/**"," * A property that contains the library <a href=\"http://semver.org/\">semantic version number</a>."," * @name version"," * @static"," * @since 1.0.0"," * @memberOf Util"," * @type string"," * @example"," * v.version"," * // => '1.3.0'"," */","var version = '1.3.0';","","/* eslint sort-imports: \"off\" */","","/**"," * Functions to change the case"," * @namespace Case"," */","/**"," * Chain functions"," * @namespace Chain"," */","","/**"," * Functions to cut a string"," * @namespace Chop"," */","/**"," * Functions to count characters in a string"," * @namespace Count"," */","/**"," * Functions to format"," * @namespace Format"," */","/**"," * Functions to escape RegExp special characters"," * @namespace Escape"," */","/**"," * Functions to find index"," * @namespace Index"," */","/**"," * Functions to manipulate a string"," * @namespace Manipulate"," */","/**"," * Functions to query a string"," * @namespace Query"," */","/**"," * Functions to split a string"," * @namespace Split"," */","/**"," * Functions to strip a string"," * @namespace Strip"," */","/**"," * Util functions and properties"," * @namespace Util"," */","var functions = {","  camelCase: camelCase,","  capitalize: capitalize,","  decapitalize: decapitalize,","  kebabCase: kebabCase,","  lowerCase: lowerCase,","  snakeCase: snakeCase,","  swapCase: swapCase,","  titleCase: titleCase,","  upperCase: upperCase,","","  count: count,","  countGraphemes: countGrapheme,","  countSubstrings: countSubstrings,","  countWhere: countWhere,","  countWords: countWords,","","  escapeHtml: escapeHtml,","  escapeRegExp: escapeRegExp,","  unescapeHtml: unescapeHtml,","","  sprintf: sprintf,","  vprintf: vprintf,","","  indexOf: indexOf,","  lastIndexOf: lastIndexOf,","  search: search,","","  charAt: charAt,","  codePointAt: codePointAt,","  first: first,","  graphemeAt: graphemeAt,","  last: last,","  prune: prune,","  slice: slice,","  substr: substr,","  substring: substring,","  truncate: truncate,","","  insert: insert,","  latinise: latinise,","  pad: pad,","  padLeft: padLeft,","  padRight: padRight,","  repeat: repeat,","  replace: replace,","  replaceAll: replaceAll,","  reverse: reverse,","  reverseGrapheme: reverseGrapheme,","  slugify: slugify,","  splice: splice,","  tr: tr,","  trim: trim,","  trimLeft: trimLeft,","  trimRight: trimRight,","  wordWrap: wordWrap,","","  endsWith: endsWith,","  includes: includes,","  isAlpha: isAlpha,","  isAlphaDigit: isAlphaDigit,","  isBlank: isBlank,","  isDigit: isDigit,","  isEmpty: isEmpty,","  isLowerCase: isLowerCase,","  isNumeric: isNumeric,","  isString: isString,","  isUpperCase: isUpperCase,","  matches: matches,","  startsWith: startsWith,","","  chars: chars,","  codePoints: codePoints,","  graphemes: graphemes,","  split: split,","  words: words,","","  stripBom: trim$1,","  stripTags: trim$2,","","  noConflict: noConflict,","  version: version","};","","/**"," * The chain wrapper constructor."," *"," * @ignore"," * @param  {string}       subject               The string to be wrapped."," * @param  {boolean}      [explicitChain=false] A boolean that indicates if the chain sequence is explicit or implicit."," * @return {ChainWrapper}                       Returns a new instance of `ChainWrapper`"," * @constructor"," */","function ChainWrapper(subject, explicitChain) {","  this._wrappedValue = subject;","  this._explicitChain = explicitChain;","}","","/**"," * Unwraps the chain sequence wrapped value."," *"," * @memberof Chain"," * @since 1.0.0"," * @function __proto__value"," * @return {*} Returns the unwrapped value."," * @example"," * v"," *  .chain('Hello world')"," *  .replace('Hello', 'Hi')"," *  .lowerCase()"," *  .slugify()"," *  .value()"," * // => 'hi-world'"," *"," * v(' Space travel ')"," *  .trim()"," *  .truncate(8)"," *  .value()"," * // => 'Space...'"," */","ChainWrapper.prototype.value = function () {","  return this._wrappedValue;","};","","/**"," * Override the default object valueOf()."," *"," * @ignore"," * @return {*} Returns the wrapped value."," */","ChainWrapper.prototype.valueOf = function () {","  return this.value();","};","","/**"," * Returns the wrapped value to be used in JSON.stringify()."," *"," * @ignore"," * @return {*} Returns the wrapped value."," */","ChainWrapper.prototype.toJSON = function () {","  return this.value();","};","","/**"," * Returns the string representation of the wrapped value."," *"," * @ignore"," * @return {string} Returns the string representation."," */","ChainWrapper.prototype.toString = function () {","  return String(this.value());","};","","/**"," * Creates a new chain object that enables <i>explicit</i> chain sequences."," * Use `v.prototype.value()` to unwrap the result. <br/>"," * Does not modify the wrapped value."," *"," * @memberof Chain"," * @since 1.0.0"," * @function __proto__chain"," * @return {Object} Returns the wrapper in <i>explicit</i> mode."," * @example"," * v('Back to School')"," *  .chain()"," *  .lowerCase()"," *  .words()"," *  .value()"," * // => ['back', 'to', 'school']"," *"," * v(\" Back to School \")"," *  .chain()"," *  .trim()"," *  .truncate(7)"," *  .value()"," * // => 'Back...'"," */","ChainWrapper.prototype.chain = function () {","  return new ChainWrapper(this._wrappedValue, true);","};","","/**"," * Modifies the wrapped value with the invocation result of `changer` function. The current wrapped value is the"," * argument of `changer` invocation."," *"," * @memberof Chain"," * @since 1.0.0"," * @function __proto__thru"," * @param  {Function} changer The function to invoke."," * @return {Object}           Returns the new wrapper that wraps the invocation result of `changer`."," * @example"," * v"," *  .chain('sun is shining')"," *  .words()"," *  .thru(function(words) {"," *    return words[0];"," *  })"," *  .value()"," * // => 'sun'"," *"," */","ChainWrapper.prototype.thru = function (changer) {","  if (typeof changer === 'function') {","    return new ChainWrapper(changer(this._wrappedValue), this._explicitChain);","  }","  return this;","};","","/**"," * A boolean that indicates if the chain sequence is explicit or implicit."," * @ignore"," * @type {boolean}"," * @private"," */","ChainWrapper.prototype._explicitChain = true;","","/**"," * Make a voca function chainable."," *"," * @ignore"," * @param  {Function} functionInstance The function to make chainable"," * @return {Function}                  Returns the chainable function"," */","function makeFunctionChainable(functionInstance) {","  return function () {","    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {","      args[_key] = arguments[_key];","    }","","    var result = functionInstance.apply(undefined, [this._wrappedValue].concat(args));","    if (this._explicitChain || typeof result === 'string') {","      return new ChainWrapper(result, this._explicitChain);","    } else {","      return result;","    }","  };","}","","Object.keys(functions).forEach(function (name) {","  ChainWrapper.prototype[name] = makeFunctionChainable(functions[name]);","});","","/**"," * Creates a chain object that wraps `subject`, enabling <i>explicit</i> chain sequences. <br/>"," * Use `v.prototype.value()` to unwrap the result."," *"," * @memberOf Chain"," * @since 1.0.0"," * @function chain"," * @param  {string} subject The string to wrap."," * @return {Object}         Returns the new wrapper object."," * @example"," * v"," *  .chain('Back to School')"," *  .lowerCase()"," *  .words()"," *  .value()"," * // => ['back', 'to', 'school']"," */","function chain(subject) {","  return new ChainWrapper(subject, true);","}","","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };","","/**"," * Creates a chain object that wraps `subject`, enabling <i>implicit</i> chain sequences.<br/>"," * A function that returns `number`, `boolean` or `array` type <i>terminates</i> the chain sequence and returns the unwrapped value."," * Otherwise use `v.prototype.value()` to unwrap the result."," *"," * @memberOf Chain"," * @since 1.0.0"," * @function v"," * @param {string} subject The string to wrap."," * @return {Object}  Returns the new wrapper object."," * @example"," * v('Back to School')"," *  .lowerCase()"," *  .words()"," * // => ['back', 'to', 'school']"," *"," * v(\" Back to School \")"," *  .trim()"," *  .truncate(7)"," *  .value()"," * // => 'Back...'"," */","function Voca(subject) {","  return new ChainWrapper(subject, false);","}","","_extends(Voca, functions, {","  chain: chain","});","","return Voca;","","})));",""],"l":{"9":1,"10":1,"23":1,"24":0,"36":1,"37":0,"39":0,"40":0,"42":0,"61":1,"62":0,"77":1,"78":0,"80":0,"81":0,"83":0,"84":0,"86":0,"107":1,"108":0,"109":0,"110":0,"111":0,"113":0,"114":0,"116":0,"135":1,"136":0,"137":0,"146":1,"154":1,"162":1,"170":1,"178":1,"186":1,"195":1,"204":1,"212":1,"223":1,"231":1,"239":1,"247":1,"255":1,"263":1,"271":1,"279":1,"287":1,"295":1,"305":1,"313":1,"321":1,"329":1,"337":1,"345":1,"353":1,"365":1,"374":1,"383":1,"391":1,"402":1,"403":0,"415":1,"416":0,"417":0,"419":0,"420":0,"422":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"457":0,"458":0,"460":0,"471":1,"472":0,"494":1,"495":0,"496":0,"497":0,"499":0,"518":1,"519":0,"520":0,"521":0,"523":0,"546":1,"547":0,"548":0,"549":0,"551":0,"573":1,"574":0,"575":0,"576":0,"578":0,"594":1,"595":0,"596":0,"616":1,"617":0,"618":0,"621":1,"622":0,"623":0,"624":0,"644":1,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"664":1,"665":0,"666":0,"668":0,"669":0,"671":0,"680":1,"690":1,"691":0,"692":0,"694":0,"695":0,"697":0,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"728":0,"748":1,"749":0,"750":0,"753":1,"754":1,"755":1,"756":1,"765":1,"766":0,"776":1,"777":0,"788":1,"789":0,"804":1,"805":0,"807":0,"808":0,"810":0,"811":0,"813":0,"825":1,"826":0,"850":1,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"866":0,"889":1,"890":0,"891":0,"892":0,"893":0,"895":0,"917":1,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"928":0,"930":0,"953":1,"954":0,"955":0,"956":0,"957":0,"959":0,"984":1,"985":0,"986":0,"987":0,"988":0,"989":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"999":0,"1025":1,"1026":0,"1048":1,"1049":0,"1072":1,"1073":0,"1089":1,"1090":0,"1114":1,"1115":0,"1135":1,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1151":0,"1154":1,"1176":1,"1177":0,"1178":0,"1179":0,"1181":0,"1182":0,"1183":0,"1211":1,"1212":0,"1223":1,"1224":0,"1233":1,"1234":0,"1244":1,"1245":0,"1246":0,"1257":1,"1258":0,"1261":1,"1309":1,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1317":0,"1318":0,"1320":0,"1322":0,"1333":1,"1334":0,"1335":0,"1336":0,"1360":1,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1367":0,"1391":1,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1398":0,"1409":1,"1410":0,"1411":0,"1412":0,"1414":0,"1415":0,"1428":1,"1429":0,"1430":0,"1432":0,"1444":1,"1445":0,"1446":0,"1447":0,"1448":0,"1450":0,"1451":0,"1453":0,"1454":0,"1456":0,"1457":0,"1459":0,"1460":0,"1463":0,"1464":0,"1466":0,"1467":0,"1479":1,"1480":0,"1481":0,"1483":0,"1484":0,"1485":0,"1486":0,"1488":0,"1500":1,"1501":0,"1502":0,"1503":0,"1505":0,"1506":0,"1508":0,"1509":0,"1511":0,"1512":0,"1514":0,"1515":0,"1517":0,"1518":0,"1520":0,"1521":0,"1523":0,"1535":1,"1536":0,"1537":0,"1538":0,"1540":0,"1551":1,"1552":0,"1553":0,"1554":0,"1555":0,"1557":0,"1569":1,"1570":0,"1571":0,"1573":0,"1574":0,"1577":0,"1578":0,"1585":0,"1586":0,"1592":0,"1593":0,"1595":0,"1596":0,"1606":1,"1615":0,"1624":0,"1633":0,"1642":0,"1651":0,"1660":0,"1669":0,"1678":1,"1679":0,"1688":1,"1689":0,"1690":0,"1691":0,"1693":0,"1706":1,"1707":0,"1708":0,"1710":0,"1711":0,"1713":0,"1714":0,"1736":1,"1737":0,"1746":0,"1747":0,"1749":0,"1750":0,"1751":0,"1752":0,"1929":1,"1930":0,"1931":0,"1932":0,"1935":0,"1936":0,"1939":0,"1940":0,"1943":1,"1964":1,"1965":0,"1968":1,"1984":1,"1985":0,"2001":1,"2002":0,"2018":1,"2019":0,"2022":1,"2030":1,"2040":1,"2041":0,"2058":1,"2059":0,"2060":0,"2081":1,"2082":0,"2083":0,"2104":1,"2105":0,"2106":0,"2127":1,"2128":0,"2129":0,"2130":0,"2131":0,"2132":0,"2134":0,"2155":1,"2156":0,"2157":0,"2158":0,"2159":0,"2160":0,"2162":0,"2172":1,"2284":1,"2292":1,"2293":0,"2294":0,"2296":0,"2297":0,"2298":0,"2299":0,"2300":0,"2301":0,"2304":0,"2314":1,"2315":0,"2316":0,"2327":1,"2328":0,"2350":1,"2351":0,"2352":0,"2353":0,"2355":0,"2379":1,"2380":0,"2381":0,"2382":0,"2383":0,"2384":0,"2386":0,"2387":0,"2388":0,"2389":0,"2416":1,"2417":0,"2418":0,"2428":1,"2429":0,"2450":1,"2451":0,"2452":0,"2453":0,"2454":0,"2456":0,"2457":0,"2459":0,"2460":0,"2471":1,"2472":0,"2473":0,"2474":0,"2476":0,"2498":1,"2499":0,"2500":0,"2501":0,"2502":0,"2503":0,"2504":0,"2506":0,"2522":1,"2523":0,"2524":0,"2545":1,"2546":0,"2550":0,"2551":0,"2553":0,"2554":0,"2555":0,"2556":0,"2558":0,"2580":1,"2581":0,"2582":0,"2583":0,"2585":0,"2586":0,"2613":1,"2614":0,"2615":0,"2616":0,"2617":0,"2618":0,"2619":0,"2620":0,"2622":0,"2623":0,"2625":0,"2626":0,"2627":0,"2629":0,"2632":1,"2665":1,"2666":0,"2667":0,"2668":0,"2669":0,"2670":0,"2671":0,"2673":0,"2675":0,"2677":0,"2678":0,"2680":0,"2681":0,"2683":0,"2684":0,"2685":0,"2686":0,"2687":0,"2688":0,"2689":0,"2690":0,"2691":0,"2692":0,"2693":0,"2694":0,"2695":0,"2698":0,"2700":0,"2703":1,"2704":0,"2705":0,"2706":0,"2708":0,"2711":1,"2712":0,"2713":0,"2715":0,"2718":1,"2737":1,"2738":0,"2739":0,"2740":0,"2742":0,"2743":0,"2744":0,"2746":0,"2747":0,"2748":0,"2749":0,"2751":0,"2752":0,"2756":1,"2775":1,"2776":0,"2777":0,"2778":0,"2780":0,"2781":0,"2782":0,"2784":0,"2785":0,"2786":0,"2787":0,"2789":0,"2790":0,"2811":1,"2812":0,"2813":0,"2814":0,"2816":0,"2817":0,"2818":0,"2820":0,"2823":1,"2824":1,"2825":1,"2826":1,"2864":1,"2865":0,"2867":0,"2869":0,"2875":0,"2876":0,"2878":0,"2879":0,"2880":0,"2881":0,"2882":0,"2883":0,"2884":0,"2885":0,"2887":0,"2888":0,"2889":0,"2890":0,"2892":0,"2893":0,"2894":0,"2896":0,"2897":0,"2898":0,"2899":0,"2901":0,"2902":0,"2907":0,"2908":0,"2910":0,"2920":1,"2921":0,"2950":1,"2951":0,"2952":0,"2954":0,"2955":0,"2956":0,"2957":0,"2959":0,"2960":0,"2961":0,"2962":0,"2984":1,"2985":0,"2986":0,"3008":1,"3009":0,"3010":0,"3032":1,"3033":0,"3034":0,"3056":1,"3057":0,"3058":0,"3080":1,"3081":0,"3082":0,"3104":1,"3105":0,"3106":0,"3131":1,"3132":0,"3133":0,"3152":1,"3153":0,"3154":0,"3178":1,"3179":0,"3180":0,"3181":0,"3182":0,"3183":0,"3184":0,"3185":0,"3187":0,"3189":0,"3213":1,"3214":0,"3215":0,"3216":0,"3217":0,"3219":0,"3220":0,"3222":0,"3223":0,"3239":1,"3240":0,"3241":0,"3262":1,"3263":0,"3264":0,"3265":0,"3266":0,"3267":0,"3268":0,"3269":0,"3270":0,"3271":0,"3273":0,"3296":1,"3297":0,"3298":0,"3319":1,"3320":0,"3321":0,"3324":1,"3344":1,"3345":0,"3346":0,"3347":0,"3349":0,"3350":0,"3352":0,"3365":1,"3366":0,"3368":0,"3369":0,"3370":0,"3372":0,"3373":0,"3383":1,"3384":0,"3385":0,"3386":0,"3387":0,"3389":0,"3392":1,"3393":1,"3394":1,"3403":1,"3404":0,"3405":0,"3406":0,"3407":0,"3408":0,"3409":0,"3411":0,"3413":0,"3414":0,"3416":0,"3417":0,"3418":0,"3421":0,"3422":0,"3424":0,"3425":0,"3428":0,"3431":0,"3434":1,"3435":1,"3436":1,"3437":1,"3461":1,"3462":0,"3463":0,"3464":0,"3466":0,"3467":0,"3468":0,"3470":0,"3471":0,"3472":0,"3473":0,"3474":0,"3475":0,"3476":0,"3477":0,"3478":0,"3479":0,"3480":0,"3481":0,"3482":0,"3484":0,"3485":0,"3487":0,"3488":0,"3489":0,"3491":0,"3492":0,"3493":0,"3494":0,"3496":0,"3497":0,"3498":0,"3500":0,"3501":0,"3503":0,"3504":0,"3505":0,"3507":0,"3508":0,"3510":0,"3511":0,"3512":0,"3514":0,"3515":0,"3518":0,"3519":0,"3520":0,"3521":0,"3522":0,"3525":0,"3526":0,"3529":0,"3530":0,"3531":0,"3533":0,"3534":0,"3536":0,"3537":0,"3538":0,"3540":0,"3541":0,"3543":0,"3544":0,"3545":0,"3546":0,"3547":0,"3548":0,"3549":0,"3550":0,"3552":0,"3554":0,"3556":0,"3558":0,"3560":0,"3561":0,"3562":0,"3563":0,"3564":0,"3566":0,"3567":0,"3569":0,"3571":0,"3572":0,"3574":0,"3575":0,"3577":0,"3578":0,"3580":0,"3584":0,"3587":1,"3589":1,"3590":1,"3591":0,"3595":1,"3597":1,"3598":1,"3600":1,"3603":1,"3605":1,"3608":1,"3609":1,"3624":1,"3625":0,"3626":0,"3628":0,"3642":1,"3695":1,"3788":1,"3789":0,"3790":0,"3815":1,"3816":0,"3825":1,"3826":0,"3835":1,"3836":0,"3845":1,"3846":0,"3873":1,"3874":0,"3897":1,"3898":0,"3899":0,"3901":0,"3910":1,"3919":1,"3920":71,"3921":0,"3922":0,"3925":0,"3926":0,"3927":0,"3929":0,"3934":1,"3935":71,"3955":1,"3956":0,"3959":1,"3983":1,"3984":0,"3987":1,"3991":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/camel_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/camel_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"wordToCamel","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"3":{"name":"camelCase","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":55}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":45}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":34,"column":0},"end":{"line":36,"column":1}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":95}},"15":{"start":{"line":57,"column":0},"end":{"line":63,"column":1}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":63}},"17":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"18":{"start":{"line":60,"column":4},"end":{"line":60,"column":14}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":71}},"20":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":54}},{"start":{"line":35,"column":57},"end":{"line":35,"column":94}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = camelCase;","","var _capitalize = require('./capitalize');","","var _capitalize2 = _interopRequireDefault(_capitalize);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _lower_case = require('./lower_case');","","var _lower_case2 = _interopRequireDefault(_lower_case);","","var _words = require('./words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Transforms the `word` into camel case chunk."," *"," * @param  {string} word  The word string"," * @param  {number} index The index of the word in phrase."," * @return {string}       The transformed word."," * @ignore"," */","function wordToCamel(word, index) {","  return index === 0 ? (0, _lower_case2.default)(word) : (0, _capitalize2.default)(word, true);","}","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/CamelCase\">camel case</a>."," *"," * @function camelCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to camel case."," * @return {string}              The camel case string."," * @example"," * v.camelCase('bird flight');"," * // => 'birdFlight'"," *"," * v.camelCase('BirdFlight');"," * // => 'birdFlight'"," *"," * v.camelCase('-BIRD-FLIGHT-');"," * // => 'birdFlight'"," */","function camelCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  return (0, _words2.default)(subjectString).map(wordToCamel).join('');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"34":1,"35":0,"57":1,"58":0,"59":0,"60":0,"62":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/capitalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/capitalize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"capitalize","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":69}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":36,"column":0},"end":{"line":46,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":63}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":77}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":14}},"14":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":48}},"16":{"start":{"line":45,"column":2},"end":{"line":45,"column":76}},"17":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = capitalize;","","var _coerce_to_boolean = require('./helper/boolean/coerce_to_boolean');","","var _coerce_to_boolean2 = _interopRequireDefault(_coerce_to_boolean);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the first character of `subject` to upper case. If `restToLower` is `true`, convert the rest of"," * `subject` to lower case."," *"," * @function capitalize"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string}  [subject='']        The string to capitalize."," * @param  {boolean} [restToLower=false] Convert the rest of `subject` to lower case."," * @return {string}                      Returns the capitalized string."," * @example"," * v.capitalize('apple');"," * // => 'Apple'"," *"," * v.capitalize('aPPle', true);"," * // => 'Apple'"," */","function capitalize(subject, restToLower) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var restToLowerCaseBoolean = (0, _coerce_to_boolean2.default)(restToLower);","  if (subjectString === '') {","    return '';","  }","  if (restToLowerCaseBoolean) {","    subjectString = subjectString.toLowerCase();","  }","  return subjectString.substr(0, 1).toUpperCase() + subjectString.substr(1);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"36":1,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"47":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/boolean/coerce_to_boolean.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/boolean/coerce_to_boolean.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"coerceToBoolean","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":23,"column":0},"end":{"line":30,"column":1}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":95}},"9":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":24}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":74},"end":{"line":24,"column":86}},{"start":{"line":24,"column":89},"end":{"line":24,"column":94}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":21},"end":{"line":24,"column":41}},{"start":{"line":24,"column":45},"end":{"line":24,"column":71}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = coerceToBoolean;","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the `value` to a boolean. If `value` is `undefined` or `null`, returns `defaultValue`."," *"," * @ignore"," * @function toBoolean"," * @param {*} value The value to convert."," * @param {boolean} [defaultValue=false] The default value."," * @return {boolean} Returns the coercion to boolean."," */","function coerceToBoolean(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;","","  if ((0, _is_nil2.default)(value)) {","    return defaultValue;","  }","  return Boolean(value);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"23":1,"24":0,"26":0,"27":0,"29":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/object/is_nil.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/object/is_nil.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isNil","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":47}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":28}},{"start":{"line":16,"column":32},"end":{"line":16,"column":46}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isNil;","/**"," * Checks if `value` is `null` or `undefined`"," *"," * @ignore"," * @function isNil"," * @param {*} value The object to check"," * @return {boolean} Returns `true` is `value` is `undefined` or `null`, `false` otherwise"," */","function isNil(value) {","  return value === undefined || value === null;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"15":1,"16":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/coerce_to_string.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/coerce_to_string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"coerceToString","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":30,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":92}},"11":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"13":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"16":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":74},"end":{"line":31,"column":86}},{"start":{"line":31,"column":89},"end":{"line":31,"column":91}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":21},"end":{"line":31,"column":41}},{"start":{"line":31,"column":45},"end":{"line":31,"column":71}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = coerceToString;","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _is_string = require('../../is_string');","","var _is_string2 = _interopRequireDefault(_is_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get the string representation of the `value`."," * Converts the `value` to string."," * If `value` is `null` or `undefined`, return `defaultValue`."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @param {*} [defaultValue=''] The default value to return."," * @return {string|null}        Returns the string representation of `value`. Returns `defaultValue` if `value` is"," *                              `null` or `undefined`."," */","function coerceToString(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';","","  if ((0, _is_nil2.default)(value)) {","    return defaultValue;","  }","  if ((0, _is_string2.default)(value)) {","    return value;","  }","  return String(value);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"30":1,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_string.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_string.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"isString","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":37}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isString;","/**"," * Checks whether `subject` is a string primitive type."," *"," * @function isString"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} subject The value to verify."," * @return {boolean} Returns `true` if `subject` is string primitive type or `false` otherwise."," * @example"," * v.isString('vacation');"," * // => true"," *"," * v.isString(560);"," * // => false"," */","function isString(subject) {","  return typeof subject === 'string';","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"23":1,"24":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/lower_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/lower_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"lowerCase","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":30,"column":0},"end":{"line":33,"column":1}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":67}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":37}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = lowerCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the `subject` to lower case."," *"," * @function lowerCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to lower case."," * @return {string}              Returns the lower case string."," * @example"," * v.lowerCase('Green');"," * // => 'green'"," *"," * v.lowerCase('BLUE');"," * // => 'blue'"," */","function lowerCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject, '');","  return subjectString.toLowerCase();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"30":1,"31":0,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/words.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/words.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"words","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":48}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":61}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":52,"column":0},"end":{"line":64,"column":1}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":63}},"16":{"start":{"line":54,"column":2},"end":{"line":54,"column":29}},"17":{"start":{"line":55,"column":2},"end":{"line":62,"column":3}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":144}},"19":{"start":{"line":57,"column":9},"end":{"line":62,"column":3}},"20":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"21":{"start":{"line":60,"column":4},"end":{"line":60,"column":86}},"22":{"start":{"line":61,"column":4},"end":{"line":61,"column":79}},"23":{"start":{"line":63,"column":2},"end":{"line":63,"column":76}},"24":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":80},"end":{"line":56,"column":113}},{"start":{"line":56,"column":116},"end":{"line":56,"column":143}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":9},"end":{"line":57,"column":9}},{"start":{"line":57,"column":9},"end":{"line":57,"column":9}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = words;","","var _const_extended = require('./helper/reg_exp/const_extended');","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _nil_default = require('./helper/undefined/nil_default');","","var _nil_default2 = _interopRequireDefault(_nil_default);","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Splits `subject` into an array of words."," *"," * @function words"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into words."," * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {Array} Returns the array of words."," * @example"," * v.words('gravity can cross dimensions');"," * // => ['gravity', 'can', 'cross', 'dimensions']"," *"," * v.words('GravityCanCrossDimensions');"," * // => ['Gravity', 'Can', 'Cross', 'Dimensions']"," *"," * v.words('Gravity - can cross dimensions!');"," * // => ['Gravity', 'can', 'cross', 'dimensions']"," *"," * v.words('Earth gravity', /[^\\s]+/g);"," * // => ['Earth', 'gravity']"," */","function words(subject, pattern, flags) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var patternRegExp = void 0;","  if ((0, _is_nil2.default)(pattern)) {","    patternRegExp = _const_extended.REGEXP_EXTENDED_ASCII.test(subjectString) ? _const_extended.REGEXP_LATIN_WORD : _const_extended.REGEXP_WORD;","  } else if (pattern instanceof RegExp) {","    patternRegExp = pattern;","  } else {","    var flagsString = (0, _to_string2.default)((0, _nil_default2.default)(flags, ''));","    patternRegExp = new RegExp((0, _to_string2.default)(pattern), flagsString);","  }","  return (0, _nil_default2.default)(subjectString.match(patternRegExp), []);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"63":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/const_extended.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/const_extended.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":144}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":76}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}},"7":{"start":{"line":40,"column":0},"end":{"line":40,"column":1130}},"8":{"start":{"line":48,"column":0},"end":{"line":48,"column":1198}},"9":{"start":{"line":56,"column":0},"end":{"line":60,"column":78}},"10":{"start":{"line":68,"column":0},"end":{"line":68,"column":160}},"11":{"start":{"line":77,"column":0},"end":{"line":77,"column":140}},"12":{"start":{"line":86,"column":0},"end":{"line":86,"column":177}},"13":{"start":{"line":94,"column":0},"end":{"line":94,"column":77}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.REGEXP_EXTENDED_ASCII = exports.REGEXP_ALPHA_DIGIT = exports.REGEXP_ALPHA = exports.REGEXP_LATIN_WORD = exports.REGEXP_WORD = undefined;","","var _const = require('./const');","","/**"," * A regular expression to match the General Punctuation Unicode block"," *"," * @type {string}"," * @ignore"," */","var generalPunctuationBlock = '\\\\u2000-\\\\u206F';","","/**"," * A regular expression to match non characters from from Basic Latin and Latin-1 Supplement Unicode blocks"," *"," * @type {string}"," * @ignore"," */","var nonCharacter = '\\\\x00-\\\\x2F\\\\x3A-\\\\x40\\\\x5B-\\\\x60\\\\x7b-\\\\xBF\\\\xD7\\\\xF7';","","/**"," * A regular expression to match the dingbat Unicode block"," *"," * @type {string}"," * @ignore"," */","var dingbatBlock = '\\\\u2700-\\\\u27BF';","","/**"," * A regular expression string that matches lower case letters: LATIN"," *"," * @type {string}"," * @ignore"," */","var lowerCaseLetter = 'a-z\\\\xB5\\\\xDF-\\\\xF6\\\\xF8-\\\\xFF\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010B\\\\u010D\\\\u010F\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011B\\\\u011D\\\\u011F\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012B\\\\u012D\\\\u012F\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013A\\\\u013C\\\\u013E\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014B\\\\u014D\\\\u014F\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015B\\\\u015D\\\\u015F\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016B\\\\u016D\\\\u016F\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017A\\\\u017C\\\\u017E-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018C\\\\u018D\\\\u0192\\\\u0195\\\\u0199-\\\\u019B\\\\u019E\\\\u01A1\\\\u01A3\\\\u01A5\\\\u01A8\\\\u01AA\\\\u01AB\\\\u01AD\\\\u01B0\\\\u01B4\\\\u01B6\\\\u01B9\\\\u01BA\\\\u01BD-\\\\u01BF\\\\u01C6\\\\u01C9\\\\u01CC\\\\u01CE\\\\u01D0\\\\u01D2\\\\u01D4\\\\u01D6\\\\u01D8\\\\u01DA\\\\u01DC\\\\u01DD\\\\u01DF\\\\u01E1\\\\u01E3\\\\u01E5\\\\u01E7\\\\u01E9\\\\u01EB\\\\u01ED\\\\u01EF\\\\u01F0\\\\u01F3\\\\u01F5\\\\u01F9\\\\u01FB\\\\u01FD\\\\u01FF\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020B\\\\u020D\\\\u020F\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021B\\\\u021D\\\\u021F\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022B\\\\u022D\\\\u022F\\\\u0231\\\\u0233-\\\\u0239\\\\u023C\\\\u023F\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024B\\\\u024D\\\\u024F';","","/**"," * A regular expression string that matches upper case letters: LATIN"," *"," * @type {string}"," * @ignore"," */","var upperCaseLetter = '\\\\x41-\\\\x5a\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010a\\\\u010c\\\\u010e\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011a\\\\u011c\\\\u011e\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012a\\\\u012c\\\\u012e\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013b\\\\u013d\\\\u013f\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014a\\\\u014c\\\\u014e\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015a\\\\u015c\\\\u015e\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016a\\\\u016c\\\\u016e\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017b\\\\u017d\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018b\\\\u018e-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019c\\\\u019d\\\\u019f\\\\u01a0\\\\u01a2\\\\u01a4\\\\u01a6\\\\u01a7\\\\u01a9\\\\u01ac\\\\u01ae\\\\u01af\\\\u01b1-\\\\u01b3\\\\u01b5\\\\u01b7\\\\u01b8\\\\u01bc\\\\u01c4\\\\u01c5\\\\u01c7\\\\u01c8\\\\u01ca\\\\u01cb\\\\u01cd\\\\u01cf\\\\u01d1\\\\u01d3\\\\u01d5\\\\u01d7\\\\u01d9\\\\u01db\\\\u01de\\\\u01e0\\\\u01e2\\\\u01e4\\\\u01e6\\\\u01e8\\\\u01ea\\\\u01ec\\\\u01ee\\\\u01f1\\\\u01f2\\\\u01f4\\\\u01f6-\\\\u01f8\\\\u01fa\\\\u01fc\\\\u01fe\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020a\\\\u020c\\\\u020e\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021a\\\\u021c\\\\u021e\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022a\\\\u022c\\\\u022e\\\\u0230\\\\u0232\\\\u023a\\\\u023b\\\\u023d\\\\u023e\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024a\\\\u024c\\\\u024e';","","/**"," * Regular expression to match Unicode words"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_WORD = exports.REGEXP_WORD = new RegExp('(?:[' + upperCaseLetter + '][' + _const.diacriticalMark + ']*)?(?:[' + lowerCaseLetter + '][' + _const.diacriticalMark + ']*)+|\\","(?:[' + upperCaseLetter + '][' + _const.diacriticalMark + ']*)+(?![' + lowerCaseLetter + '])|\\","[' + _const.digit + ']+|\\","[' + dingbatBlock + ']|\\","[^' + nonCharacter + generalPunctuationBlock + _const.whitespace + ']+', 'g');","","/**"," * Regular expression to match words from Basic Latin and Latin-1 Supplement blocks"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_LATIN_WORD = exports.REGEXP_LATIN_WORD = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])|\\d+/g;","","/**"," * Regular expression to match alpha characters"," *"," * @see http://stackoverflow.com/a/22075070/1894471"," * @type {RegExp}"," * @ignore"," */","var REGEXP_ALPHA = exports.REGEXP_ALPHA = new RegExp('^(?:[' + lowerCaseLetter + upperCaseLetter + '][' + _const.diacriticalMark + ']*)+$');","","/**"," * Regular expression to match alpha and digit characters"," *"," * @see http://stackoverflow.com/a/22075070/1894471"," * @type {RegExp}"," * @ignore"," */","var REGEXP_ALPHA_DIGIT = exports.REGEXP_ALPHA_DIGIT = new RegExp('^((?:[' + lowerCaseLetter + upperCaseLetter + '][' + _const.diacriticalMark + ']*)|[' + _const.digit + '])+$');","","/**"," * Regular expression to match Extended ASCII characters, i.e. the first 255"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_EXTENDED_ASCII = exports.REGEXP_EXTENDED_ASCII = /^[\\x00-\\xFF]*$/;"],"l":{"3":1,"6":1,"8":1,"16":1,"24":1,"32":1,"40":1,"48":1,"56":1,"68":1,"77":1,"86":1,"94":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/const.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/const.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"5":{"start":{"line":36,"column":0},"end":{"line":36,"column":60}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":126}},"7":{"start":{"line":52,"column":0},"end":{"line":52,"column":130}},"8":{"start":{"line":61,"column":0},"end":{"line":61,"column":275}},"9":{"start":{"line":70,"column":0},"end":{"line":70,"column":131}},"10":{"start":{"line":78,"column":0},"end":{"line":81,"column":11}},"11":{"start":{"line":89,"column":0},"end":{"line":89,"column":87}},"12":{"start":{"line":97,"column":0},"end":{"line":97,"column":87}},"13":{"start":{"line":105,"column":0},"end":{"line":105,"column":89}},"14":{"start":{"line":113,"column":0},"end":{"line":113,"column":73}},"15":{"start":{"line":121,"column":0},"end":{"line":121,"column":99}},"16":{"start":{"line":129,"column":0},"end":{"line":129,"column":66}},"17":{"start":{"line":137,"column":0},"end":{"line":137,"column":90}},"18":{"start":{"line":145,"column":0},"end":{"line":145,"column":163}},"19":{"start":{"line":153,"column":0},"end":{"line":153,"column":70}},"20":{"start":{"line":161,"column":0},"end":{"line":161,"column":54}},"21":{"start":{"line":171,"column":0},"end":{"line":171,"column":68}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","/**"," * A regular expression string matching digits"," *"," * @type {string}"," * @ignore"," */","var digit = exports.digit = '\\\\d';","","/**"," * A regular expression string matching whitespace"," *"," * @type {string}"," * @ignore"," */","var whitespace = exports.whitespace = '\\\\s\\\\uFEFF\\\\xA0';","","/**"," * A regular expression string matching high surrogate"," *"," * @type {string}"," * @ignore"," */","var highSurrogate = exports.highSurrogate = '\\\\uD800-\\\\uDBFF';","","/**"," * A regular expression string matching low surrogate"," *"," * @type {string}"," * @ignore"," */","var lowSurrogate = exports.lowSurrogate = '\\\\uDC00-\\\\uDFFF';","","/**"," * A regular expression string matching diacritical mark"," *"," * @type {string}"," * @ignore"," */","var diacriticalMark = exports.diacriticalMark = '\\\\u0300-\\\\u036F\\\\u1AB0-\\\\u1AFF\\\\u1DC0-\\\\u1DFF\\\\u20D0-\\\\u20FF\\\\uFE20-\\\\uFE2F';","","/**"," * A regular expression to match the base character for a combining mark"," *"," * @type {string}"," * @ignore"," */","var base = exports.base = '\\\\0-\\\\u02FF\\\\u0370-\\\\u1AAF\\\\u1B00-\\\\u1DBF\\\\u1E00-\\\\u20CF\\\\u2100-\\\\uD7FF\\\\uE000-\\\\uFE1F\\\\uFE30-\\\\uFFFF';","","/**"," * Regular expression to match combining marks"," *"," * @see http://unicode.org/faq/char_combmark.html"," * @type {RegExp}"," * @ignore"," */","var REGEXP_COMBINING_MARKS = exports.REGEXP_COMBINING_MARKS = new RegExp('([' + base + ']|[' + highSurrogate + '][' + lowSurrogate + ']|[' + highSurrogate + '](?![' + lowSurrogate + '])|(?:[^' + highSurrogate + ']|^)[' + lowSurrogate + '])([' + diacriticalMark + ']+)', 'g');","","/**"," * Regular expression to match surrogate pairs"," *"," * @see http://www.unicode.org/faq/utf_bom.html#utf16-2"," * @type {RegExp}"," * @ignore"," */","var REGEXP_SURROGATE_PAIRS = exports.REGEXP_SURROGATE_PAIRS = new RegExp('([' + highSurrogate + '])([' + lowSurrogate + '])', 'g');","","/**"," * Regular expression to match an unicode character"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_UNICODE_CHARACTER = exports.REGEXP_UNICODE_CHARACTER = new RegExp('((?:[' + base + ']|[' + highSurrogate + '][' + lowSurrogate + ']|[' + highSurrogate + '](?![' + lowSurrogate + '])|(?:[^' + highSurrogate + ']|^)[' + lowSurrogate + '])(?:[' + diacriticalMark + ']+))|\\","([' + highSurrogate + '][' + lowSurrogate + '])|\\","([\\\\n\\\\r\\\\u2028\\\\u2029])|\\","(.)', 'g');","","/**"," * Regular expression to match whitespaces"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_WHITESPACE = exports.REGEXP_WHITESPACE = new RegExp('[' + whitespace + ']');","","/**"," * Regular expression to match whitespaces from the left side"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRIM_LEFT = exports.REGEXP_TRIM_LEFT = new RegExp('^[' + whitespace + ']+');","","/**"," * Regular expression to match whitespaces from the right side"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRIM_RIGHT = exports.REGEXP_TRIM_RIGHT = new RegExp('[' + whitespace + ']+$');","","/**"," * Regular expression to match digit characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_DIGIT = exports.REGEXP_DIGIT = new RegExp('^' + digit + '+$');","","/**"," * Regular expression to match regular expression special characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_SPECIAL_CHARACTERS = exports.REGEXP_SPECIAL_CHARACTERS = /[-[\\]{}()*+!<=:?.\\/\\\\^$|#,]/g;","","/**"," * Regular expression to match not latin characters"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_NON_LATIN = exports.REGEXP_NON_LATIN = /[^A-Za-z0-9]/g;","","/**"," * Regular expression to match HTML special characters."," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_HTML_SPECIAL_CHARACTERS = exports.REGEXP_HTML_SPECIAL_CHARACTERS = /[<>&\"'`]/g;","","/**"," * Regular expression to match sprintf format string"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_CONVERSION_SPECIFICATION = exports.REGEXP_CONVERSION_SPECIFICATION = /(%{1,2})(?:(\\d+)\\$)?(\\+)?([ 0]|'.{1})?(-)?(\\d+)?(?:\\.(\\d+))?([bcdiouxXeEfgGs])?/g;","","/**"," * Regular expression to match trailing zeros in a number"," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_TRAILING_ZEROS = exports.REGEXP_TRAILING_ZEROS = /\\.?0+$/g;","","/**"," * Regular expression to match flags from a regular expression."," *"," * @type {RegExp}"," * @ignore"," */","var REGEXP_FLAGS = exports.REGEXP_FLAGS = /[gimuy]*$/;","","/**"," * Regular expression to match a list of tags."," *"," * @see https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-name"," * @type {RegExp}"," * @ignore"," */","","var REGEXP_TAG_LIST = exports.REGEXP_TAG_LIST = /<([A-Za-z0-9]+)>/g;"],"l":{"3":1,"12":1,"20":1,"28":1,"36":1,"44":1,"52":1,"61":1,"70":1,"78":1,"89":1,"97":1,"105":1,"113":1,"121":1,"129":1,"137":1,"145":1,"153":1,"161":1,"171":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/undefined/nil_default.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/undefined/nil_default.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"nilDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":46}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":37}},{"start":{"line":17,"column":40},"end":{"line":17,"column":45}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = nilDefault;","/**"," * Verifies if `value` is `undefined` or `null` and returns `defaultValue`. In other case returns `value`."," *"," * @ignore"," * @function nilDefault"," * @param {*} value The value to verify."," * @param {*} defaultValue The default value."," * @return {*} Returns `defaultValue` if `value` is `undefined` or `null`, otherwise `defaultValue`."," */","function nilDefault(value, defaultValue) {","  return value == null ? defaultValue : value;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"16":1,"17":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/to_string.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/to_string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"toString","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":27,"column":0},"end":{"line":35,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":16}},"12":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"14":{"start":{"line":34,"column":2},"end":{"line":34,"column":23}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = toString;","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _is_string = require('../../is_string');","","var _is_string2 = _interopRequireDefault(_is_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get the string representation of the `value`."," * Converts the `value` to string."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @return {string|null}        Returns the string representation of `value`."," */","function toString(value) {","  if ((0, _is_nil2.default)(value)) {","    return null;","  }","  if ((0, _is_string2.default)(value)) {","    return value;","  }","  return String(value);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"27":1,"28":0,"29":0,"31":0,"32":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/char_at.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/char_at.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"charAt","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":31,"column":0},"end":{"line":34,"column":1}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":63}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = charAt;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Access a character from `subject` at specified `position`."," *"," * @function charAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {numbers} position The position to get the character."," * @return {string} Returns the character at specified position."," * @example"," * v.charAt('helicopter', 0);"," * // => 'h'"," *"," * v.charAt('helicopter', 1);"," * // => 'e'"," */","function charAt(subject, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.charAt(position);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"31":1,"32":0,"33":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/chars.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/chars.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"chars","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":63}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = chars;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Splits `subject` into an array of characters."," *"," * @function chars"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @return {Array} Returns the array of characters."," * @example"," * v.chars('cloud');"," * // => ['c', 'l', 'o', 'u', 'd']"," */","function chars(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.split('');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"27":1,"28":0,"29":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/code_point_at.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/code_point_at.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"codePointAt","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":64}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":68}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":67}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":45,"column":0},"end":{"line":62,"column":1}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":63}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":49}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":65}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":65}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":64}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"21":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":67}},"23":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":100}},"25":{"start":{"line":61,"column":2},"end":{"line":61,"column":24}},"26":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":24}},{"start":{"line":50,"column":28},"end":{"line":50,"column":65}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":58}},{"start":{"line":55,"column":62},"end":{"line":55,"column":102}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = codePointAt;","","var _surrogate_pair = require('./helper/string/surrogate_pair');","","var _coerce_to_number = require('./helper/number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _nan_default = require('./helper/number/nan_default');","","var _nan_default2 = _interopRequireDefault(_nan_default);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get the Unicode code point value of the character at `position`. <br/>"," * If a valid UTF-16 <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">"," * surrogate pair</a> starts at `position`, the"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#astralplanes\">astral code point</a>"," * value at `position` is returned."," *"," * @function codePointAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {number} position The position to get the code point number."," * @return {number} Returns a non-negative number less than or equal to `0x10FFFF`."," * @example"," * v.codePointAt('rain', 1);"," * // => 97, or 0x0061"," *"," * v.codePointAt('\\uD83D\\uDE00 is smile', 0); // or '😀 is smile'"," * // => 128512, or 0x1F600"," */","function codePointAt(subject, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var subjectStringLength = subjectString.length;","  var positionNumber = (0, _coerce_to_number2.default)(position);","  positionNumber = (0, _nan_default2.default)(positionNumber, 0);","  if (positionNumber < 0 || positionNumber >= subjectStringLength) {","    return undefined;","  }","  var firstCodePoint = subjectString.charCodeAt(positionNumber);","  var secondCodePoint = void 0;","  if ((0, _surrogate_pair.isHighSurrogate)(firstCodePoint) && subjectStringLength > positionNumber + 1) {","    secondCodePoint = subjectString.charCodeAt(positionNumber + 1);","    if ((0, _surrogate_pair.isLowSurrogate)(secondCodePoint)) {","      return (0, _surrogate_pair.getAstralNumberFromSurrogatePair)(firstCodePoint, secondCodePoint);","    }","  }","  return firstCodePoint;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":3,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/surrogate_pair.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/surrogate_pair.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"isHighSurrogate","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"2":{"name":"isLowSurrogate","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":35}}},"3":{"name":"getAstralNumberFromSurrogatePair","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":71}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":76}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"9":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":78}},"11":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"12":{"start":{"line":33,"column":2},"end":{"line":33,"column":76}},"13":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":103}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":42}},{"start":{"line":22,"column":46},"end":{"line":22,"column":77}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":41}},{"start":{"line":33,"column":45},"end":{"line":33,"column":75}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.isHighSurrogate = isHighSurrogate;","exports.isLowSurrogate = isLowSurrogate;","exports.getAstralNumberFromSurrogatePair = getAstralNumberFromSurrogatePair;","var HIGH_SURROGATE_START = 0xD800;","var HIGH_SURROGATE_END = 0xDBFF;","var LOW_SURROGATE_START = 0xDC00;","var LOW_SURROGATE_END = 0xDFFF;","","/**"," * Checks if `codePoint` is a high-surrogate number from range 0xD800 to 0xDBFF."," *"," * @ignore"," * @param {number} codePoint The code point number to be verified"," * @return {boolean} Returns a boolean whether `codePoint` is a high-surrogate number."," */","function isHighSurrogate(codePoint) {","  return codePoint >= HIGH_SURROGATE_START && codePoint <= HIGH_SURROGATE_END;","}","","/**"," * Checks if `codePoint` is a low-surrogate number from range 0xDC00 to 0xDFFF."," *"," * @ignore"," * @param {number} codePoint The code point number to be verified"," * @return {boolean} Returns a boolean whether `codePoint` is a low-surrogate number."," */","function isLowSurrogate(codePoint) {","  return codePoint >= LOW_SURROGATE_START && codePoint <= LOW_SURROGATE_END;","}","","/**"," * Get the astral code point number based on surrogate pair numbers."," *"," * @ignore"," * @param {number} highSurrogate The high-surrogate code point number."," * @param {number} lowSurrogate The low-surrogate code point number."," * @return {number} Returns the astral symbol number."," */","function getAstralNumberFromSurrogatePair(highSurrogate, lowSurrogate) {","  return (highSurrogate - HIGH_SURROGATE_START) * 0x400 + lowSurrogate - LOW_SURROGATE_START + 0x10000;","}"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"21":1,"22":0,"32":1,"33":0,"44":1,"45":0}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/coerce_to_number.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/coerce_to_number.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"coerceToNumber","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":26,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":91}},"9":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"11":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"14":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":74},"end":{"line":27,"column":86}},{"start":{"line":27,"column":89},"end":{"line":27,"column":90}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":41}},{"start":{"line":27,"column":45},"end":{"line":27,"column":71}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = coerceToNumber;","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get the number representation of the `value`."," * Converts the `value` to number."," * If `value` is `null` or `undefined`, return `defaultValue`."," *"," * @ignore"," * @function toString"," * @param {*} value             The value to convert."," * @param {*} [defaultValue=''] The default value to return."," * @return {number|null}        Returns the number representation of `value`. Returns `defaultValue` if `value` is"," *                              `null` or `undefined`."," */","function coerceToNumber(value) {","  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;","","  if ((0, _is_nil2.default)(value)) {","    return defaultValue;","  }","  if (typeof value === 'number') {","    return value;","  }","  return Number(value);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"26":1,"27":0,"29":0,"30":0,"32":0,"33":0,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/nan_default.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/nan_default.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"nanDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":48}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":27},"end":{"line":17,"column":39}},{"start":{"line":17,"column":42},"end":{"line":17,"column":47}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = nanDefault;","/**"," * If `value` is `NaN`, return `defaultValue`. In other case returns `value`."," *"," * @ignore"," * @function nanDefault"," * @param {*} value The value to verify."," * @param {*} defaultValue The default value."," * @return {*} Returns `defaultValue` if `value` is `NaN`, otherwise `defaultValue`."," */","function nanDefault(value, defaultValue) {","  return value !== value ? defaultValue : value;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"16":1,"17":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/code_points.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/code_points.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"codePoints","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":36,"column":0},"end":{"line":48,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":63}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":49}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":16}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":31}},"15":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":73}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":41}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":46}},"19":{"start":{"line":47,"column":2},"end":{"line":47,"column":24}},"20":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":40},"end":{"line":45,"column":41}},{"start":{"line":45,"column":44},"end":{"line":45,"column":45}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = codePoints;","","var _code_point_at = require('./code_point_at');","","var _code_point_at2 = _interopRequireDefault(_code_point_at);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns an array of Unicode code point values from characters of `subject`."," *"," * @function codePoints"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param  {string} [subject=''] The string to extract from."," * @return {Array} Returns an array of non-negative numbers less than or equal to `0x10FFFF`."," * @example"," * v.codePoints('rain');"," * // => [114, 97, 105, 110], or"," * //    [0x72, 0x61, 0x69, 0x6E]"," *"," * v.codePoints('\\uD83D\\uDE00 smile'); // or '😀 smile'"," * // => [128512, 32, 115, 109, 105, 108, 101], or"," * //    [0x1F600, 0x20, 0x73, 0x6D, 0x69, 0x6C, 0x65]"," */","function codePoints(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var subjectStringLength = subjectString.length;","  var codePointArray = [];","  var index = 0;","  var codePointNumber = void 0;","  while (index < subjectStringLength) {","    codePointNumber = (0, _code_point_at2.default)(subjectString, index);","    codePointArray.push(codePointNumber);","    index += codePointNumber > 0xFFFF ? 2 : 1;","  }","  return codePointArray;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_graphemes.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_graphemes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"countGrapheme","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":145}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = countGrapheme;","","var _const = require('./helper/reg_exp/const');","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Counts the graphemes in `subject` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function  countGraphemes"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string to count graphemes."," * @return {number}              Returns the number of graphemes in `subject`."," * @example"," * v.countGraphemes('cafe\\u0301'); // or 'café'"," * // => 4"," *"," * v.countGraphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'"," * // => 2"," *"," * v.countGraphemes('rain');"," * // => 4"," */","function countGrapheme(subject) {","  return (0, _coerce_to_string2.default)(subject).replace(_const.REGEXP_COMBINING_MARKS, '*').replace(_const.REGEXP_SURROGATE_PAIRS, '*').length;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"37":1,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"count","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":57}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = count;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Counts the characters in `subject`.<br/>"," *"," * @function count"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string to count characters."," * @return {number}              Returns the number of characters in `subject`."," * @example"," * v.count('rain');"," * // => 4"," */","function count(subject) {","  return (0, _coerce_to_string2.default)(subject).length;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"27":1,"28":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_substrings.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_substrings.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"countSubstrings","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":31,"column":0},"end":{"line":48,"column":1}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":63}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":67}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":47}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":16}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"13":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":17}},"15":{"start":{"line":40,"column":2},"end":{"line":46,"column":30}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":68}},"17":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"18":{"start":{"line":43,"column":6},"end":{"line":43,"column":14}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":36}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":15}},"21":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":26}},{"start":{"line":37,"column":30},"end":{"line":37,"column":52}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = countSubstrings;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Counts the number of `substring` appearances in `subject`."," *"," * @function countSubstrings"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string} [subject=''] The string where to count."," * @param  {string} substring    The substring to be counted."," * @return {number}              Returns the number of `substring` appearances."," * @example"," * v.countSubstrings('bad boys, bad boys whatcha gonna do?', 'boys');"," * // => 2"," *"," * v.countSubstrings('every dog has its day', 'cat');"," * // => 0"," */","function countSubstrings(subject, substring) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var substringString = (0, _coerce_to_string2.default)(substring);","  var substringLength = substringString.length;","  var count = 0;","  var matchIndex = 0;","  if (subjectString === '' || substringString === '') {","    return count;","  }","  do {","    matchIndex = subjectString.indexOf(substringString, matchIndex);","    if (matchIndex !== -1) {","      count++;","      matchIndex += substringLength;","    }","  } while (matchIndex !== -1);","  return count;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_where.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_where.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"countWhere","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":49}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":36},"end":{"line":42,"column":77}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"8":{"start":{"line":36,"column":0},"end":{"line":45,"column":1}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":63}},"10":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":13}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":53}},"13":{"start":{"line":42,"column":2},"end":{"line":44,"column":8}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":97}},"15":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":26}},{"start":{"line":38,"column":30},"end":{"line":38,"column":61}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":67},"end":{"line":43,"column":82}},{"start":{"line":43,"column":85},"end":{"line":43,"column":96}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = countWhere;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var reduce = Array.prototype.reduce;","","/**"," * Counts the characters in `subject` for which `predicate` returns truthy."," *"," * @function  countWhere"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param  {string}   [subject=''] The string to count characters."," * @param  {Function} predicate    The predicate function invoked on each character with parameters `(character, index, string)`."," * @param  {Object}   [context]    The context to invoke the `predicate`."," * @return {number}                Returns the number of characters for which `predicate` returns truthy."," * @example"," * v.countWhere('hola!', v.isAlpha);"," * // => 4"," *"," * v.countWhere('2022', function(character, index, str) {"," *   return character === '2';"," * });"," * // => 3"," */","function countWhere(subject, predicate, context) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '' || typeof predicate !== 'function') {","    return 0;","  }","  var predicateWithContext = predicate.bind(context);","  return reduce.call(subjectString, function (countTruthy, character, index) {","    return predicateWithContext(character, index, subjectString) ? countTruthy + 1 : countTruthy;","  }, 0);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"36":1,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_words.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/count_words.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"countWords","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":62}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = countWords;","","var _words = require('./words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Counts the number of words in `subject`."," *"," * @function countWords"," * @static"," * @since 1.0.0"," * @memberOf Count"," * @param {string} [subject=''] The string to split into words."," * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {number} Returns the number of words."," * @example"," * v.countWords('gravity can cross dimensions');"," * // => 4"," *"," * v.countWords('GravityCanCrossDimensions');"," * // => 4"," *"," * v.countWords('Gravity - can cross dimensions!');"," * // => 4"," *"," * v.words('Earth gravity', /[^\\s]+/g);"," * // => 2"," */","function countWords(subject, pattern, flags) {","  return (0, _words2.default)(subject, pattern, flags).length;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"38":1,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/decapitalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/decapitalize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"decapitalize","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":30,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":63}},"9":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":14}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":76}},"12":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = decapitalize;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the first character of `subject` to lower case."," *"," * @function decapitalize"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to decapitalize."," * @return {string}              Returns the decapitalized string."," * @example"," * v.decapitalize('Sun');"," * // => 'sun'"," *"," * v.decapitalize('moon');"," * // => 'moon'"," */","function decapitalize(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  return subjectString.substr(0, 1).toLowerCase() + subjectString.substr(1);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"30":1,"31":0,"32":0,"33":0,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/ends_with.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/ends_with.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"endsWith","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":47,"column":0},"end":{"line":60,"column":1}},"14":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":63}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":55}},"18":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":159}},"21":{"start":{"line":57,"column":2},"end":{"line":57,"column":31}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":61}},"23":{"start":{"line":59,"column":2},"end":{"line":59,"column":52}},"24":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":47},"end":{"line":56,"column":67}},{"start":{"line":56,"column":70},"end":{"line":56,"column":158}}]},"6":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":9},"end":{"line":59,"column":25}},{"start":{"line":59,"column":29},"end":{"line":59,"column":51}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = endsWith;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` ends with `end`."," *"," * @function endsWith"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {string} end The ending string."," * @param {number} [position=subject.length] Search within `subject` as if the string were only `position` long."," * @return {boolean} Returns `true` if `subject` ends with `end` or `false` otherwise."," * @example"," * v.endsWith('red alert', 'alert');"," * // => true"," *"," * v.endsWith('metro south', 'metro');"," * // => false"," *"," * v.endsWith('Murphy', 'ph', 5);"," * // => true"," */","function endsWith(subject, end, position) {","  if ((0, _is_nil2.default)(end)) {","    return false;","  }","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var endString = (0, _coerce_to_string2.default)(end);","  if (endString === '') {","    return true;","  }","  position = (0, _is_nil2.default)(position) ? subjectString.length : (0, _clip_number2.default)((0, _to_integer2.default)(position), 0, subjectString.length);","  position -= endString.length;","  var lastIndex = subjectString.indexOf(endString, position);","  return lastIndex !== -1 && lastIndex === position;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"47":1,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/clip_number.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/clip_number.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clipNumber","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":21}},"6":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":19}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = clipNumber;","/**"," * Clip the number to interval `downLimit` to `upLimit`."," *"," * @ignore"," * @function clipNumber"," * @param {number} value The number to clip"," * @param {number} downLimit The down limit"," * @param {number} upLimit The upper limit"," * @return {number} The clipped number"," */","function clipNumber(value, downLimit, upLimit) {","  if (value <= downLimit) {","    return downLimit;","  }","  if (value >= upLimit) {","    return upLimit;","  }","  return value;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/to_integer.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/to_integer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"toInteger","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"5":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":35}},"7":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":36}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = toInteger;","","var _const = require('./const');","","/**"," * Transforms `value` to an integer."," *"," * @ignore"," * @function toInteger"," * @param {number} value The number to transform."," * @returns {number} Returns the transformed integer."," */","function toInteger(value) {","  if (value === Infinity) {","    return _const.MAX_SAFE_INTEGER;","  }","  if (value === -Infinity) {","    return -_const.MAX_SAFE_INTEGER;","  }","  return ~~value;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"18":1,"19":0,"20":0,"22":0,"23":0,"25":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/const.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/const.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","/**"," * Max save integer value"," *"," * @ignore"," * @type {number}"," */","var MAX_SAFE_INTEGER = exports.MAX_SAFE_INTEGER = 0x1fffffffffffff;"],"l":{"3":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/escape_html.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/escape_html.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"replaceSpecialCharacter","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":44}}},"3":{"name":"escapeHtml","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":16,"column":0},"end":{"line":23,"column":2}},"9":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"11":{"start":{"line":49,"column":0},"end":{"line":51,"column":1}},"12":{"start":{"line":50,"column":2},"end":{"line":50,"column":122}},"13":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = escapeHtml;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var escapeCharactersMap = {","  '<': '&lt;',","  '>': '&gt;',","  '&': '&amp;',","  '\"': '&quot;',","  \"'\": '&#x27;',","  '`': '&#x60;'","};","","/**"," * Return the escaped version of `character`."," *"," * @ignore"," * @param  {string} character The character to be escape."," * @return {string}           The escaped version of character."," */","function replaceSpecialCharacter(character) {","  return escapeCharactersMap[character];","}","","/**"," * Escapes HTML special characters  <code>< > & ' \" `</code> in <code>subject</code>."," *"," * @function escapeHtml"," * @static"," * @since 1.0.0         "," * @memberOf Escape"," * @param {string} [subject=''] The string to escape."," * @return {string} Returns the escaped string."," * @example"," * v.escapeHtml('<p>wonderful world</p>');"," * // => '&lt;p&gt;wonderful world&lt;/p&gt;'"," */","function escapeHtml(subject) {","  return (0, _coerce_to_string2.default)(subject).replace(_const.REGEXP_HTML_SPECIAL_CHARACTERS, replaceSpecialCharacter);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"32":1,"33":0,"49":1,"50":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/escape_reg_exp.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/escape_reg_exp.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"escapeRegExp","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":29,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":100}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = escapeRegExp;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Escapes the regular expression special characters `- [ ] / { } ( ) * + ? . \\ ^ $ |` in `subject`."," *"," * @function escapeRegExp"," * @static"," * @since 1.0.0"," * @memberOf Escape"," * @param {string} [subject=''] The string to escape."," * @return {string} Returns the escaped string."," * @example"," * v.escapeRegExp('(hours)[minutes]{seconds}');"," * // => '\\(hours\\)\\[minutes\\]\\{seconds\\}'"," */","function escapeRegExp(subject) {","  return (0, _coerce_to_string2.default)(subject).replace(_const.REGEXP_SPECIAL_CHARACTERS, '\\\\$&');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"29":1,"30":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/first.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/first.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"first","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":63}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":144}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":25}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"20":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":50},"end":{"line":50,"column":51}},{"start":{"line":50,"column":54},"end":{"line":50,"column":143}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = first;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Extracts the first `length` characters from `subject`."," *"," * @function first"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {int}    [length=1]   The number of characters to extract."," * @return {string}              Returns the first characters string."," * @example"," * v.first('helicopter');"," * // => 'h'"," *"," * v.first('vehicle', 2);"," * // => 've'"," *"," * v.first('car', 5);"," * // => 'car'"," */","function first(subject, length) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? 1 : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  if (subjectString.length <= lengthInt) {","    return subjectString;","  }","  return subjectString.substr(0, lengthInt);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"48":1,"49":0,"50":0,"51":0,"52":0,"54":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/grapheme_at.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/grapheme_at.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"graphemeAt","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":58}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":43,"column":0},"end":{"line":57,"column":1}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":63}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":65}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":29}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":65}},"18":{"start":{"line":49,"column":2},"end":{"line":55,"column":3}},"19":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":52}},"21":{"start":{"line":52,"column":6},"end":{"line":52,"column":30}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":25}},"23":{"start":{"line":56,"column":2},"end":{"line":56,"column":12}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = graphemeAt;","","var _coerce_to_number = require('./helper/number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _nan_default = require('./helper/number/nan_default');","","var _nan_default2 = _interopRequireDefault(_nan_default);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get a grapheme from `subject` at specified `position` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function graphemeAt"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {number} position The position to get the grapheme."," * @return {string} Returns the grapheme at specified position."," * @example"," * v.graphemeAt('\\uD835\\uDC00\\uD835\\uDC01', 0); // or '𝐀𝐁'"," * // => 'A'"," *"," * v.graphemeAt('cafe\\u0301', 3); // or 'café'"," * // => 'é'"," */","function graphemeAt(subject, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var positionNumber = (0, _coerce_to_number2.default)(position);","  var graphemeMatch = void 0;","  var graphemeMatchIndex = 0;","  positionNumber = (0, _nan_default2.default)(positionNumber, 0);","  while ((graphemeMatch = _const.REGEXP_UNICODE_CHARACTER.exec(subjectString)) !== null) {","    if (graphemeMatchIndex === positionNumber) {","      _const.REGEXP_UNICODE_CHARACTER.lastIndex = 0;","      return graphemeMatch[0];","    }","    graphemeMatchIndex++;","  }","  return '';","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":3,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/graphemes.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/graphemes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":0,"13":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"graphemes","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":61}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"10":{"start":{"line":40,"column":0},"end":{"line":43,"column":1}},"11":{"start":{"line":41,"column":2},"end":{"line":41,"column":63}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":94}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = graphemes;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _nil_default = require('./helper/undefined/nil_default');","","var _nil_default2 = _interopRequireDefault(_nil_default);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Splits `subject` into an array of graphemes taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function graphemes"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @return {Array} Returns the array of graphemes."," * @example"," * v.graphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'"," * // => ['\\uD835\\uDC00', '\\uD835\\uDC01'], or"," * //    ['𝐀', '𝐁']"," *"," * v.graphemes('cafe\\u0301'); // or 'café'"," * // => ['c', 'a', 'f', 'e\\u0301'], or"," * //    ['c', 'a', 'f', 'é']"," */","function graphemes(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return (0, _nil_default2.default)(subjectString.match(_const.REGEXP_UNICODE_CHARACTER), []);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":2,"40":1,"41":0,"42":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/includes.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/includes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"includes","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":54}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":48,"column":0},"end":{"line":59,"column":1}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":63}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":54}},"18":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"20":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":16}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":140}},"23":{"start":{"line":58,"column":2},"end":{"line":58,"column":62}},"24":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":47},"end":{"line":57,"column":48}},{"start":{"line":57,"column":51},"end":{"line":57,"column":139}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = includes;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` includes `search` starting from `position`."," *"," * @function includes"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string where to search."," * @param {string} search The string to search."," * @param {number} [position=0] The position to start searching."," * @return {boolean} Returns `true` if `subject` includes `search` or `false` otherwise."," * @example"," * v.includes('starship', 'star');"," * // => true"," *"," * v.includes('galaxy', 'g', 1);"," * // => false"," */","function includes(subject, search, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var searchString = (0, _to_string2.default)(search);","  if (searchString === null) {","    return false;","  }","  if (searchString === '') {","    return true;","  }","  position = (0, _is_nil2.default)(position) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(position), 0, subjectString.length);","  return subjectString.indexOf(searchString, position) !== -1;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"48":1,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/insert.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/insert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"insert","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":36,"column":0},"end":{"line":44,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":63}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":65}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":65}},"13":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":25}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":103}},"16":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":65}},{"start":{"line":40,"column":69},"end":{"line":40,"column":90}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = insert;","","var _coerce_to_number = require('./helper/number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Inserts into `subject` a string `toInsert` at specified `position`."," *"," * @function insert"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string where to insert."," * @param {string} [toInsert=''] The string to be inserted."," * @param {number} [position=0] The position to insert."," * @return {string} Returns the string after insertion."," * @example"," * v.insert('ct', 'a', 1);"," * // => 'cat'"," *"," * v.insert('sunny', ' day', 5);"," * // => 'sunny day'"," */","function insert(subject, toInsert, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var toInsertString = (0, _coerce_to_string2.default)(toInsert);","  var positionNumber = (0, _coerce_to_number2.default)(position);","  if (positionNumber < 0 || positionNumber > subjectString.length || toInsertString === '') {","    return subjectString;","  }","  return subjectString.slice(0, positionNumber) + toInsertString + subjectString.slice(positionNumber);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_alpha_digit.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_alpha_digit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"isAlphaDigit","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":38,"column":1}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":63}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":64}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isAlphaDigit;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const_extended = require('./helper/reg_exp/const_extended');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` contains only alpha and digit characters."," *"," * @function isAlphaDigit"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only alpha and digit characters or `false` otherwise."," * @example"," * v.isAlphaDigit('year2020');"," * // => true"," *"," * v.isAlphaDigit('1448');"," * // => true"," *"," * v.isAlphaDigit('40-20');"," * // => false"," */","function isAlphaDigit(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return _const_extended.REGEXP_ALPHA_DIGIT.test(subjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"35":1,"36":0,"37":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_alpha.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_alpha.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"isAlpha","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":38,"column":1}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":63}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":58}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isAlpha;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const_extended = require('./helper/reg_exp/const_extended');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` contains only alpha characters."," *"," * @function isAlpha"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only alpha characters or `false` otherwise."," * @example"," * v.isAlpha('bart');"," * // => true"," *"," * v.isAlpha('lisa!');"," * // => false"," *"," * v.isAlpha('lisa and bart');"," * // => false"," */","function isAlpha(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return _const_extended.REGEXP_ALPHA.test(subjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"35":1,"36":0,"37":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_blank.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_blank.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"isBlank","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":33,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":63}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":43}},"10":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isBlank;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` is empty or contains only whitespaces."," *"," * @function isBlank"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is empty or contains only whitespaces or `false` otherwise."," * @example"," * v.isBlank('');"," * // => true"," *"," * v.isBlank('  ');"," * // => true"," *"," * v.isBlank('World');"," * // => false"," */","function isBlank(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.trim().length === 0;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"33":1,"34":0,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_digit.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_digit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"isDigit","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":38,"column":1}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":63}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":49}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isDigit;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` contains only digit characters."," *"," * @function isDigit"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` contains only digit characters or `false` otherwise."," * @example"," * v.isDigit('35');"," * // => true"," *"," * v.isDigit('1.5');"," * // => false"," *"," * v.isDigit('ten');"," * // => false"," */","function isDigit(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return _const.REGEXP_DIGIT.test(subjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"35":1,"36":0,"37":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_empty.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_empty.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"isEmpty","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":33,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":63}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":36}},"10":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isEmpty;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` is empty."," *"," * @function isEmpty"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is empty or `false` otherwise"," * @example"," * v.isEmpty('');"," * // => true"," *"," * v.isEmpty('  ');"," * // => false"," *"," * v.isEmpty('sun');"," * // => false"," */","function isEmpty(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.length === 0;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"33":1,"34":0,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_lower_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_lower_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"isLowerCase","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":37,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":61}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":91}},"12":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":45}},{"start":{"line":39,"column":49},"end":{"line":39,"column":90}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isLowerCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_alpha = require('./is_alpha');","","var _is_alpha2 = _interopRequireDefault(_is_alpha);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` has only lower case characters."," *"," * @function isLowerCase"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is lower case or `false` otherwise."," * @example"," * v.isLowerCase('motorcycle');"," * // => true"," *"," * v.isLowerCase('John');"," * // => false"," *"," * v.isLowerCase('T1000');"," * // => false"," */","function isLowerCase(subject) {","  var valueString = (0, _coerce_to_string2.default)(subject);","  return (0, _is_alpha2.default)(valueString) && valueString.toLowerCase() === valueString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"37":1,"38":0,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_numeric.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_numeric.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"isNumeric","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":112}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":131}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":86},"end":{"line":37,"column":101}},{"start":{"line":37,"column":104},"end":{"line":37,"column":111}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":21},"end":{"line":37,"column":48}},{"start":{"line":37,"column":52},"end":{"line":37,"column":83}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":42}},{"start":{"line":38,"column":46},"end":{"line":38,"column":78}},{"start":{"line":38,"column":83},"end":{"line":38,"column":130}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isNumeric;","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` is numeric."," *"," * @function isNumeric"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is numeric or `false` otherwise."," * @example"," * v.isNumeric('350');"," * // => true"," *"," * v.isNumeric('-20.5');"," * // => true"," *"," * v.isNumeric('1.5E+2');"," * // => true"," *"," * v.isNumeric('five');"," * // => false"," */","function isNumeric(subject) {","  var valueNumeric = typeof subject === 'object' && !(0, _is_nil2.default)(subject) ? Number(subject) : subject;","  return (typeof valueNumeric === 'number' || typeof valueNumeric === 'string') && !isNaN(valueNumeric - parseFloat(valueNumeric));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"36":1,"37":0,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_upper_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/is_upper_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"isUpperCase","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":34,"column":0},"end":{"line":37,"column":1}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":63}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":97}},"12":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":9},"end":{"line":36,"column":47}},{"start":{"line":36,"column":51},"end":{"line":36,"column":96}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = isUpperCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_alpha = require('./is_alpha');","","var _is_alpha2 = _interopRequireDefault(_is_alpha);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` contains only upper case characters."," *"," * @function isUpperCase"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @return {boolean} Returns `true` if `subject` is upper case or `false` otherwise."," * @example"," * v.isUpperCase('ACDC');"," * // => true"," *"," * v.isUpperCase('Morning');"," * // => false"," */","function isUpperCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return (0, _is_alpha2.default)(subjectString) && subjectString.toUpperCase() === subjectString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"34":1,"35":0,"36":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/kebab_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/kebab_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"kebabCase","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":42,"column":0},"end":{"line":48,"column":1}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":63}},"13":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":14}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":81}},"16":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = kebabCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _lower_case = require('./lower_case');","","var _lower_case2 = _interopRequireDefault(_lower_case);","","var _words = require('./words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Letter_case#cite_ref-13\">kebab case</a>,"," * also called <i>spinal case</i> or <i>lisp case</i>."," *"," * @function kebabCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to kebab case."," * @return {string}              Returns the kebab case string."," * @example"," * v.kebabCase('goodbye blue sky');"," * // => 'goodbye-blue-sky'"," *"," * v.kebabCase('GoodbyeBlueSky');"," * // => 'goodbye-blue-sky'"," *"," * v.kebabCase('-Goodbye-Blue-Sky-');"," * // => 'goodbye-blue-sky'"," */","function kebabCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  return (0, _words2.default)(subjectString).map(_lower_case2.default).join('-');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"42":1,"43":0,"44":0,"45":0,"47":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/last.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/last.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"last","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":63}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":144}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":25}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":75}},"20":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":50},"end":{"line":50,"column":51}},{"start":{"line":50,"column":54},"end":{"line":50,"column":143}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = last;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Extracts the last `length` characters from `subject`."," *"," * @function last"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to extract from."," * @param  {int}    [length=1]   The number of characters to extract."," * @return {string}              Returns the last characters string."," * @example"," * v.last('helicopter');"," * // => 'r'"," *"," * v.last('vehicle', 2);"," * // => 'le'"," *"," * v.last('car', 5);"," * // => 'car'"," */","function last(subject, length) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? 1 : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  if (subjectString.length <= lengthInt) {","    return subjectString;","  }","  return subjectString.substr(subjectString.length - lengthInt, lengthInt);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"48":1,"49":0,"50":0,"51":0,"52":0,"54":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/latinise.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/latinise.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"removeCombiningMarks","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}}},"3":{"name":"latinise","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":26,"column":0},"end":{"line":28,"column":1}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"11":{"start":{"line":49,"column":0},"end":{"line":55,"column":1}},"12":{"start":{"line":50,"column":2},"end":{"line":50,"column":63}},"13":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"14":{"start":{"line":52,"column":4},"end":{"line":52,"column":14}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":152}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = latinise;","","var _const = require('./helper/reg_exp/const');","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _diacritics_map = require('./helper/string/diacritics_map');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the `cleanCharacter` from combining marks regular expression match."," *"," * @ignore"," * @param {string} character The character with combining marks"," * @param {string} cleanCharacter The character without combining marks."," * @return {string} The character without combining marks."," */","function removeCombiningMarks(character, cleanCharacter) {","  return cleanCharacter;","}","","/**"," * Latinises the `subject` by removing diacritic characters."," *"," * @function latinise"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to latinise."," * @return {string} Returns the latinised string."," * @example"," * v.latinise('cafe\\u0301'); // or 'café'"," * // => 'cafe'"," *"," * v.latinise('août décembre');"," * // => 'aout decembre'"," *"," * v.latinise('как прекрасен этот мир');"," * // => 'kak prekrasen etot mir'"," */","function latinise(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  return subjectString.replace(_const.REGEXP_NON_LATIN, _diacritics_map.getLatinCharacter).replace(_const.REGEXP_COMBINING_MARKS, removeCombiningMarks);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"26":1,"27":0,"49":1,"50":0,"51":0,"52":0,"54":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/diacritics_map.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/diacritics_map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getDiacriticsMap","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":28}}},"2":{"name":"(anonymous_2)","line":139,"loc":{"start":{"line":139,"column":34},"end":{"line":139,"column":49}}},"3":{"name":"getLatinCharacter","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"3":{"start":{"line":14,"column":0},"end":{"line":124,"column":2}},"4":{"start":{"line":126,"column":0},"end":{"line":126,"column":25}},"5":{"start":{"line":134,"column":0},"end":{"line":147,"column":1}},"6":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"7":{"start":{"line":136,"column":4},"end":{"line":136,"column":25}},"8":{"start":{"line":138,"column":2},"end":{"line":138,"column":21}},"9":{"start":{"line":139,"column":2},"end":{"line":145,"column":5}},"10":{"start":{"line":140,"column":4},"end":{"line":140,"column":37}},"11":{"start":{"line":141,"column":4},"end":{"line":144,"column":5}},"12":{"start":{"line":142,"column":6},"end":{"line":142,"column":40}},"13":{"start":{"line":143,"column":6},"end":{"line":143,"column":37}},"14":{"start":{"line":146,"column":2},"end":{"line":146,"column":23}},"15":{"start":{"line":156,"column":0},"end":{"line":159,"column":1}},"16":{"start":{"line":157,"column":2},"end":{"line":157,"column":64}},"17":{"start":{"line":158,"column":2},"end":{"line":158,"column":75}}},"branchMap":{"1":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"2":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":37},"end":{"line":158,"column":62}},{"start":{"line":158,"column":65},"end":{"line":158,"column":74}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.getLatinCharacter = getLatinCharacter;","/**"," * Generated diacritics map. See bellow the base code."," * @ignore"," * @see http://stackoverflow.com/a/18391901/1894471"," * @type Object"," */","","var diacritics = {","  \"3\": \"\\u039e\\u03be\",","  \"8\": \"\\u0398\\u03b8\",","  \"A\": \"\\x41\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\u0100\\u0102\\u0104\\u01cd\\u01de\\u01e0\\u01fa\\u0200\\u0202\\u0226\\u023a\\u1e00\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u24b6\\u2c6f\\uff21\\u0386\\u0391\\u0410\",","  \"B\": \"\\x42\\u0181\\u0182\\u0243\\u1e02\\u1e04\\u1e06\\u24b7\\uff22\\u0392\\u0411\",","  \"C\": \"\\x43\\xc7\\u0106\\u0108\\u010a\\u010c\\u0187\\u023b\\u1e08\\u24b8\\ua73e\\uff23\\u0426\",","  \"D\": \"\\x44\\u010e\\u0110\\u0189\\u018a\\u018b\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u24b9\\ua779\\uff24\\xd0\\u0394\\u0414\",","  \"E\": \"\\x45\\xc8\\xc9\\xca\\xcb\\u0112\\u0114\\u0116\\u0118\\u011a\\u018e\\u0190\\u0204\\u0206\\u0228\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u24ba\\uff25\\u0388\\u0395\\u0415\\u042d\",","  \"F\": \"\\x46\\u0191\\u1e1e\\u24bb\\ua77b\\uff26\\u03a6\\u0424\",","  \"G\": \"\\x47\\u011c\\u011e\\u0120\\u0122\\u0193\\u01e4\\u01e6\\u01f4\\u1e20\\u24bc\\ua77d\\ua77e\\ua7a0\\uff27\\u0393\\u0413\\u0490\",","  \"H\": \"\\x48\\u0124\\u0126\\u021e\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u24bd\\u2c67\\u2c75\\ua78d\\uff28\\u0389\\u0397\\u0425\",","  \"I\": \"\\x49\\xcc\\xcd\\xce\\xcf\\u0128\\u012a\\u012c\\u012e\\u0130\\u0197\\u01cf\\u0208\\u020a\\u1e2c\\u1e2e\\u1ec8\\u1eca\\u24be\\uff29\\u038a\\u0399\\u03aa\\u0406\\u0418\",","  \"J\": \"\\x4a\\u0134\\u0248\\u24bf\\uff2a\\u0419\",","  \"K\": \"\\x4b\\u0136\\u0198\\u01e8\\u1e30\\u1e32\\u1e34\\u24c0\\u2c69\\ua740\\ua742\\ua744\\ua7a2\\uff2b\\u039a\\u041a\",","  \"L\": \"\\x4c\\u0139\\u013b\\u013d\\u013f\\u0141\\u023d\\u1e36\\u1e38\\u1e3a\\u1e3c\\u24c1\\u2c60\\u2c62\\ua746\\ua748\\ua780\\uff2c\\u039b\\u041b\",","  \"M\": \"\\x4d\\u019c\\u1e3e\\u1e40\\u1e42\\u24c2\\u2c6e\\uff2d\\u039c\\u041c\",","  \"N\": \"\\x4e\\xd1\\u0143\\u0145\\u0147\\u019d\\u01f8\\u0220\\u1e44\\u1e46\\u1e48\\u1e4a\\u24c3\\ua790\\ua7a4\\uff2e\\u039d\\u041d\",","  \"O\": \"\\x4f\\xd2\\xd3\\xd4\\xd5\\xd6\\xd8\\u014c\\u014e\\u0150\\u0186\\u019f\\u01a0\\u01d1\\u01ea\\u01ec\\u01fe\\u020c\\u020e\\u022a\\u022c\\u022e\\u0230\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u24c4\\ua74a\\ua74c\\uff2f\\u038c\\u039f\\u041e\",","  \"P\": \"\\x50\\u01a4\\u1e54\\u1e56\\u24c5\\u2c63\\ua750\\ua752\\ua754\\uff30\\u03a0\\u041f\",","  \"Q\": \"\\x51\\u024a\\u24c6\\ua756\\ua758\\uff31\",","  \"R\": \"\\x52\\u0154\\u0156\\u0158\\u0210\\u0212\\u024c\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u24c7\\u2c64\\ua75a\\ua782\\ua7a6\\uff32\\u03a1\\u0420\",","  \"S\": \"\\x53\\u015a\\u015c\\u015e\\u0160\\u0218\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e9e\\u24c8\\u2c7e\\ua784\\ua7a8\\uff33\\u03a3\\u0421\",","  \"T\": \"\\x54\\u0162\\u0164\\u0166\\u01ac\\u01ae\\u021a\\u023e\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u24c9\\ua786\\uff34\\u03a4\\u0422\",","  \"U\": \"\\x55\\xd9\\xda\\xdb\\xdc\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u01af\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u0214\\u0216\\u0244\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u24ca\\uff35\\u0423\\u042a\",","  \"V\": \"\\x56\\u01b2\\u0245\\u1e7c\\u1e7e\\u24cb\\ua75e\\uff36\\u0412\",","  \"W\": \"\\x57\\u0174\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u24cc\\u2c72\\uff37\\u038f\\u03a9\",","  \"X\": \"\\x58\\u1e8a\\u1e8c\\u24cd\\uff38\\u03a7\",","  \"Y\": \"\\x59\\xdd\\u0176\\u0178\\u01b3\\u0232\\u024e\\u1e8e\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efe\\u24ce\\uff39\\u038e\\u03a5\\u03ab\\u042b\",","  \"Z\": \"\\x5a\\u0179\\u017b\\u017d\\u01b5\\u0224\\u1e90\\u1e92\\u1e94\\u24cf\\u2c6b\\u2c7f\\ua762\\uff3a\\u0396\\u0417\",","  \"a\": \"\\x61\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\u0101\\u0103\\u0105\\u01ce\\u01df\\u01e1\\u01fb\\u0201\\u0203\\u0227\\u0250\\u1e01\\u1e9a\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u24d0\\u2c65\\uff41\\u03ac\\u03b1\\u0430\",","  \"b\": \"\\x62\\u0180\\u0183\\u0253\\u1e03\\u1e05\\u1e07\\u24d1\\uff42\\u03b2\\u0431\",","  \"c\": \"\\x63\\xe7\\u0107\\u0109\\u010b\\u010d\\u0188\\u023c\\u1e09\\u2184\\u24d2\\ua73f\\uff43\\u0446\",","  \"d\": \"\\x64\\u010f\\u0111\\u018c\\u0256\\u0257\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u24d3\\ua77a\\uff44\\xf0\\u03b4\\u0434\",","  \"e\": \"\\x65\\xe8\\xe9\\xea\\xeb\\u0113\\u0115\\u0117\\u0119\\u011b\\u01dd\\u0205\\u0207\\u0229\\u0247\\u025b\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u24d4\\uff45\\u03ad\\u03b5\\u0435\\u044d\",","  \"f\": \"\\x66\\u0192\\u1e1f\\u24d5\\ua77c\\uff46\\u03c6\\u0444\",","  \"g\": \"\\x67\\u011d\\u011f\\u0121\\u0123\\u01e5\\u01e7\\u01f5\\u0260\\u1d79\\u1e21\\u24d6\\ua77f\\ua7a1\\uff47\\u03b3\\u0433\\u0491\",","  \"h\": \"\\x68\\u0125\\u0127\\u021f\\u0265\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e96\\u24d7\\u2c68\\u2c76\\uff48\\u03ae\\u03b7\\u0445\",","  \"i\": \"\\x69\\xec\\xed\\xee\\xef\\u0129\\u012b\\u012d\\u012f\\u0131\\u01d0\\u0209\\u020b\\u0268\\u1e2d\\u1e2f\\u1ec9\\u1ecb\\u24d8\\uff49\\u0390\\u03af\\u03b9\\u03ca\\u0438\\u0456\",","  \"j\": \"\\x6a\\u0135\\u01f0\\u0249\\u24d9\\uff4a\\u0439\",","  \"k\": \"\\x6b\\u0137\\u0199\\u01e9\\u1e31\\u1e33\\u1e35\\u24da\\u2c6a\\ua741\\ua743\\ua745\\ua7a3\\uff4b\\u03ba\\u043a\",","  \"l\": \"\\x6c\\u013a\\u013c\\u013e\\u0140\\u0142\\u017f\\u019a\\u026b\\u1e37\\u1e39\\u1e3b\\u1e3d\\u24db\\u2c61\\ua747\\ua749\\ua781\\uff4c\\u03bb\\u043b\",","  \"m\": \"\\x6d\\u026f\\u0271\\u1e3f\\u1e41\\u1e43\\u24dc\\uff4d\\u03bc\\u043c\",","  \"n\": \"\\x6e\\xf1\\u0144\\u0146\\u0148\\u0149\\u019e\\u01f9\\u0272\\u1e45\\u1e47\\u1e49\\u1e4b\\u24dd\\ua791\\ua7a5\\uff4e\\u03bd\\u043d\",","  \"o\": \"\\x6f\\xf2\\xf3\\xf4\\xf5\\xf6\\xf8\\u014d\\u014f\\u0151\\u01a1\\u01d2\\u01eb\\u01ed\\u01ff\\u020d\\u020f\\u022b\\u022d\\u022f\\u0231\\u0254\\u0275\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u24de\\ua74b\\ua74d\\uff4f\\u03bf\\u03cc\\u043e\",","  \"p\": \"\\x70\\u01a5\\u1d7d\\u1e55\\u1e57\\u24df\\ua751\\ua753\\ua755\\uff50\\u03c0\\u043f\",","  \"q\": \"\\x71\\u024b\\u24e0\\ua757\\ua759\\uff51\",","  \"r\": \"\\x72\\u0155\\u0157\\u0159\\u0211\\u0213\\u024d\\u027d\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u24e1\\ua75b\\ua783\\ua7a7\\uff52\\u03c1\\u0440\",","  \"s\": \"\\x73\\xdf\\u015b\\u015d\\u015f\\u0161\\u0219\\u023f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e9b\\u24e2\\ua785\\ua7a9\\uff53\\u03c2\\u03c3\\u0441\",","  \"t\": \"\\x74\\u0163\\u0165\\u0167\\u01ad\\u021b\\u0288\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e97\\u24e3\\u2c66\\ua787\\uff54\\u03c4\\u0442\",","  \"u\": \"\\x75\\xf9\\xfa\\xfb\\xfc\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u01b0\\u01d4\\u01d6\\u01d8\\u01da\\u01dc\\u0215\\u0217\\u0289\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u24e4\\uff55\\u0443\\u044a\",","  \"v\": \"\\x76\\u028b\\u028c\\u1e7d\\u1e7f\\u24e5\\ua75f\\uff56\\u0432\",","  \"w\": \"\\x77\\u0175\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e98\\u24e6\\u2c73\\uff57\\u03c9\\u03ce\",","  \"x\": \"\\x78\\u1e8b\\u1e8d\\u24e7\\uff58\\u03c7\",","  \"y\": \"\\x79\\xfd\\xff\\u0177\\u01b4\\u0233\\u024f\\u1e8f\\u1e99\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1eff\\u24e8\\uff59\\u03b0\\u03c5\\u03cb\\u03cd\\u044b\",","  \"z\": \"\\x7a\\u017a\\u017c\\u017e\\u01b6\\u0225\\u0240\\u1e91\\u1e93\\u1e95\\u24e9\\u2c6c\\ua763\\uff5a\\u03b6\\u0437\",","  \"OE\": \"\\x8c\\u0152\",","  \"oe\": \"\\x9c\\u0153\",","  \"AE\": \"\\xc6\\u01e2\\u01fc\",","  \"ae\": \"\\xe6\\u01e3\\u01fd\",","  \"hv\": \"\\u0195\",","  \"OI\": \"\\u01a2\",","  \"oi\": \"\\u01a3\",","  \"DZ\": \"\\u01c4\\u01f1\",","  \"Dz\": \"\\u01c5\\u01f2\",","  \"dz\": \"\\u01c6\\u01f3\",","  \"LJ\": \"\\u01c7\",","  \"Lj\": \"\\u01c8\",","  \"lj\": \"\\u01c9\",","  \"NJ\": \"\\u01ca\",","  \"Nj\": \"\\u01cb\",","  \"nj\": \"\\u01cc\",","  \"OU\": \"\\u0222\",","  \"ou\": \"\\u0223\",","  \"TZ\": \"\\ua728\",","  \"tz\": \"\\ua729\",","  \"AA\": \"\\ua732\",","  \"aa\": \"\\ua733\",","  \"AO\": \"\\ua734\",","  \"ao\": \"\\ua735\",","  \"AU\": \"\\ua736\",","  \"au\": \"\\ua737\",","  \"AV\": \"\\ua738\\ua73a\",","  \"av\": \"\\ua739\\ua73b\",","  \"AY\": \"\\ua73c\",","  \"ay\": \"\\ua73d\",","  \"OO\": \"\\ua74e\",","  \"oo\": \"\\ua74f\",","  \"VY\": \"\\ua760\",","  \"vy\": \"\\ua761\",","  \"TH\": \"\\xde\",","  \"th\": \"\\xfe\",","  \"PS\": \"\\u03a8\",","  \"ps\": \"\\u03c8\",","  \"Yo\": \"\\u0401\",","  \"Ye\": \"\\u0404\",","  \"Yi\": \"\\u0407\",","  \"Zh\": \"\\u0416\",","  \"Ch\": \"\\u0427\",","  \"Sh\": \"\\u0428\\u0429\",","  \"\": \"\\u042c\\u044c\",","  \"Yu\": \"\\u042e\",","  \"Ya\": \"\\u042f\",","  \"zh\": \"\\u0436\",","  \"ch\": \"\\u0447\",","  \"sh\": \"\\u0448\\u0449\",","  \"yu\": \"\\u044e\",","  \"ya\": \"\\u044f\",","  \"yo\": \"\\u0451\",","  \"ye\": \"\\u0454\",","  \"yi\": \"\\u0457\"","};","","var diacriticsMap = null;","","/**"," * Creates a map of the diacritics."," *"," * @ignore"," * @returns {Object} Returns the diacritics map."," */","function getDiacriticsMap() {","  if (diacriticsMap !== null) {","    return diacriticsMap;","  }","  diacriticsMap = {};","  Object.keys(diacritics).forEach(function (key) {","    var characters = diacritics[key];","    for (var index = 0; index < characters.length; index++) {","      var character = characters[index];","      diacriticsMap[character] = key;","    }","  });","  return diacriticsMap;","}","","/**"," * Get the latin character from character with diacritics."," *"," * @ignore"," * @param   {string} character The character with diacritics."," * @returns {string}           Returns the character without diacritics."," */","function getLatinCharacter(character) {","  var characterWithoutDiacritic = getDiacriticsMap()[character];","  return characterWithoutDiacritic ? characterWithoutDiacritic : character;","}"],"l":{"3":1,"6":1,"14":1,"126":1,"134":1,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"146":0,"156":1,"157":0,"158":0}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/matches.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/matches.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"matches","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":54}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":39,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":63}},"11":{"start":{"line":41,"column":2},"end":{"line":41,"column":59}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":29}},"13":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":54}},"15":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"16":{"start":{"line":46,"column":6},"end":{"line":46,"column":19}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":53}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"19":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = matches;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` matches the regular expression `pattern`."," *"," * @function matches"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {RegExp|string} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`."," * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type."," * @return {boolean} Returns `true` if `subject` matches `pattern` or `false` otherwise."," * @example"," * v.matches('pluto', /plu.{2}/);"," * // => true"," *"," * v.matches('sun', 'S', 'i');"," * // => true"," *"," * v.matches('apollo 11', '\\\\d{3}');"," * // => false"," */","function matches(subject, pattern, flags) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var flagsString = (0, _coerce_to_string2.default)(flags);","  var patternString = void 0;","  if (!(pattern instanceof RegExp)) {","    patternString = (0, _to_string2.default)(pattern);","    if (patternString === null) {","      return false;","    }","    pattern = new RegExp(patternString, flagsString);","  }","  return pattern.test(subjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":5,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}}},"2":{"name":"pad","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":68}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":56}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":55}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":95}},"15":{"start":{"line":30,"column":39},"end":{"line":30,"column":93}},"16":{"start":{"line":53,"column":0},"end":{"line":64,"column":1}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":63}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":144}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":60}},"20":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":55}},"23":{"start":{"line":61,"column":2},"end":{"line":61,"column":71}},"24":{"start":{"line":62,"column":2},"end":{"line":62,"column":53}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":174}},"26":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":70},"end":{"line":30,"column":73}},{"start":{"line":30,"column":76},"end":{"line":30,"column":92}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":49}},{"start":{"line":30,"column":53},"end":{"line":30,"column":67}}]},"3":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":50},"end":{"line":55,"column":51}},{"start":{"line":55,"column":54},"end":{"line":55,"column":143}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = pad;","","var _build_padding = require('./helper/string/build_padding');","","var _build_padding2 = _interopRequireDefault(_build_padding);","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Pads `subject` to a new `length`."," *"," * @function pad"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the padded string."," * @example"," * v.pad('dog', 5);"," * // => ' dog '"," *"," * v.pad('bird', 6, '-');"," * // => '-bird-'"," *"," * v.pad('cat', 6, '-=');"," * // => '-cat-='"," */","function pad(subject, length, pad) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  var padString = (0, _coerce_to_string2.default)(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  var paddingLength = lengthInt - subjectString.length;","  var paddingSideLength = (0, _to_integer2.default)(paddingLength / 2);","  var paddingSideRemainingLength = paddingLength % 2;","  return (0, _build_padding2.default)(padString, paddingSideLength) + subjectString + (0, _build_padding2.default)(padString, paddingSideLength + paddingSideRemainingLength);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":5,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/build_padding.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/build_padding.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"buildPadding","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":26,"column":0},"end":{"line":30,"column":1}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":81}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":52}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":97}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = buildPadding;","","var _repeat = require('../../repeat');","","var _repeat2 = _interopRequireDefault(_repeat);","","var _to_integer = require('../number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Creates the padding string."," *"," * @ignore"," * @param {string} padCharacters The characters to create padding string."," * @param {number} length The padding string length."," * @return {string} The padding string."," */","function buildPadding(padCharacters, length) {","  var padStringRepeat = (0, _to_integer2.default)(length / padCharacters.length);","  var padStringRest = length % padCharacters.length;","  return (0, _repeat2.default)(padCharacters, padStringRepeat + padStringRest).substr(0, length);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"26":1,"27":0,"28":0,"29":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/repeat.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/repeat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"repeat","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":45,"column":0},"end":{"line":59,"column":1}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":63}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":141}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":24}},"18":{"start":{"line":49,"column":2},"end":{"line":57,"column":3}},"19":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":36}},"21":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"22":{"start":{"line":54,"column":6},"end":{"line":54,"column":37}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"24":{"start":{"line":58,"column":2},"end":{"line":58,"column":22}},"25":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":48},"end":{"line":47,"column":49}},{"start":{"line":47,"column":52},"end":{"line":47,"column":140}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = repeat;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Repeats the `subject` number of `times`."," *"," * @function repeat"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to repeat."," * @param {number} [times=1] The number of times to repeat."," * @return {string} Returns the repeated string."," * @example"," * v.repeat('w', 3);"," * // => 'www'"," *"," * v.repeat('world', 0);"," * // => ''"," */","function repeat(subject, times) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var timesInt = (0, _is_nil2.default)(times) ? 1 : (0, _clip_number2.default)((0, _to_integer2.default)(times), 0, _const.MAX_SAFE_INTEGER);","  var repeatString = '';","  while (timesInt) {","    if (timesInt & 1) {","      repeatString += subjectString;","    }","    if (timesInt > 1) {","      subjectString += subjectString;","    }","    timesInt >>= 1;","  }","  return repeatString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"58":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad_left.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad_left.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":5,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}}},"2":{"name":"padLeft","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":68}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":56}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":55}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":95}},"15":{"start":{"line":30,"column":39},"end":{"line":30,"column":93}},"16":{"start":{"line":53,"column":0},"end":{"line":61,"column":1}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":63}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":144}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":60}},"20":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":99}},"23":{"start":{"line":62,"column":0},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":70},"end":{"line":30,"column":73}},{"start":{"line":30,"column":76},"end":{"line":30,"column":92}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":49}},{"start":{"line":30,"column":53},"end":{"line":30,"column":67}}]},"3":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":50},"end":{"line":55,"column":51}},{"start":{"line":55,"column":54},"end":{"line":55,"column":143}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = padLeft;","","var _build_padding = require('./helper/string/build_padding');","","var _build_padding2 = _interopRequireDefault(_build_padding);","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Pads `subject` from left to a new `length`."," *"," * @function padLeft"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to left pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the left padded string."," * @example"," * v.padLeft('dog', 5);"," * // => '  dog'"," *"," * v.padLeft('bird', 6, '-');"," * // => '--bird'"," *"," * v.padLeft('cat', 6, '-=');"," * // => '-=-cat'"," */","function padLeft(subject, length, pad) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  var padString = (0, _coerce_to_string2.default)(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  return (0, _build_padding2.default)(padString, lengthInt - subjectString.length) + subjectString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":5,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad_right.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/pad_right.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":5,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}}},"2":{"name":"padRight","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":68}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":56}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":55}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":95}},"15":{"start":{"line":30,"column":39},"end":{"line":30,"column":93}},"16":{"start":{"line":53,"column":0},"end":{"line":61,"column":1}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":63}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":144}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":60}},"20":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":99}},"23":{"start":{"line":62,"column":0},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":70},"end":{"line":30,"column":73}},{"start":{"line":30,"column":76},"end":{"line":30,"column":92}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":49}},{"start":{"line":30,"column":53},"end":{"line":30,"column":67}}]},"3":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":50},"end":{"line":55,"column":51}},{"start":{"line":55,"column":54},"end":{"line":55,"column":143}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = padRight;","","var _build_padding = require('./helper/string/build_padding');","","var _build_padding2 = _interopRequireDefault(_build_padding);","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Pads `subject` from right to a new `length`."," *"," * @function padRight"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to pad."," * @param {int} [length=0] The length to right pad the string. No changes are made if `length` is less than `subject.length`."," * @param {string} [pad=' '] The string to be used for padding."," * @return {string} Returns the right padded string."," * @example"," * v.padRight('dog', 5);"," * // => 'dog  '"," *"," * v.padRight('bird', 6, '-');"," * // => 'bird--'"," *"," * v.padRight('cat', 6, '-=');"," * // => 'cat-=-'"," */","function padRight(subject, length, pad) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  var padString = (0, _coerce_to_string2.default)(pad, ' ');","  if (lengthInt <= subjectString.length) {","    return subjectString;","  }","  return subjectString + (0, _build_padding2.default)(padString, lengthInt - subjectString.length);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":5,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/prune.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/prune.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":4,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"prune","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":37}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":33},"end":{"line":61,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":68}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":67}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":56}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":52,"column":0},"end":{"line":68,"column":1}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":63}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":163}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":62}},"19":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":140}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":26}},"23":{"start":{"line":61,"column":2},"end":{"line":66,"column":5}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":48}},"25":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"26":{"start":{"line":64,"column":6},"end":{"line":64,"column":41}},"27":{"start":{"line":67,"column":2},"end":{"line":67,"column":62}},"28":{"start":{"line":69,"column":0},"end":{"line":69,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":50},"end":{"line":54,"column":70}},{"start":{"line":54,"column":73},"end":{"line":54,"column":162}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"5":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":76},"end":{"line":59,"column":109}},{"start":{"line":59,"column":112},"end":{"line":59,"column":139}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = prune;","","var _const_extended = require('./helper/reg_exp/const_extended');","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Truncates `subject` to a new `length` and does not break the words. Guarantees that the truncated string is no longer"," * than `length`."," *"," * @static"," * @function prune"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to prune."," * @param  {int}    length       The length to prune the string."," * @param  {string} [end='...']  The string to be added at the end."," * @return {string}              Returns the pruned string."," * @example"," * v.prune('Once upon a time', 7);"," * // => 'Once...'"," *"," * v.prune('Good day, Little Red Riding Hood', 16, ' (more)');"," * // => 'Good day (more)'"," *"," * v.prune('Once upon', 10);"," * // => 'Once upon'"," */","function prune(subject, length, end) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? subjectString.length : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  var endString = (0, _coerce_to_string2.default)(end, '...');","  if (lengthInt >= subjectString.length) {","    return subjectString;","  }","  var pattern = _const_extended.REGEXP_EXTENDED_ASCII.test(subjectString) ? _const_extended.REGEXP_LATIN_WORD : _const_extended.REGEXP_WORD;","  var truncatedLength = 0;","  subjectString.replace(pattern, function (word, offset) {","    var wordInsertLength = offset + word.length;","    if (wordInsertLength <= lengthInt - endString.length) {","      truncatedLength = wordInsertLength;","    }","  });","  return subjectString.substr(0, truncatedLength) + endString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":4,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"67":0,"69":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/replace_all.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/replace_all.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"replaceAll","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":81}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":79}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":63}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":41,"column":0},"end":{"line":50,"column":1}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":63}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":23}},"14":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":69}},"16":{"start":{"line":46,"column":9},"end":{"line":48,"column":3}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":65}},"18":{"start":{"line":49,"column":2},"end":{"line":49,"column":52}},"19":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":9},"end":{"line":46,"column":9}},{"start":{"line":46,"column":9},"end":{"line":46,"column":9}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = replaceAll;","","var _append_flag_to_reg_exp = require('./helper/reg_exp/append_flag_to_reg_exp');","","var _append_flag_to_reg_exp2 = _interopRequireDefault(_append_flag_to_reg_exp);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _escape_reg_exp = require('./escape_reg_exp');","","var _escape_reg_exp2 = _interopRequireDefault(_escape_reg_exp);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Replaces all matches of `pattern` with `replacement`. <br/>"," *"," * @function replaceAll"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to verify."," * @param {string|RegExp} pattern The pattern which match is replaced. If `pattern` is a string, a simple string match is evaluated."," * All matches are replaced."," * @param {string|Function} replacement The string or function which invocation result replaces `pattern` match."," * @return {string} Returns the replacement result."," * @example"," * v.replaceAll('good morning', 'o', '*');"," * // => 'g**d m*rning'"," * v.replaceAll('evening', /n/, 's');"," * // => 'evesisg'"," *"," */","function replaceAll(subject, pattern, replacement) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var regExp = pattern;","  if (!(pattern instanceof RegExp)) {","    regExp = new RegExp((0, _escape_reg_exp2.default)(pattern), 'g');","  } else if (!pattern.global) {","    regExp = (0, _append_flag_to_reg_exp2.default)(pattern, 'g');","  }","  return subjectString.replace(regExp, replacement);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/append_flag_to_reg_exp.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/append_flag_to_reg_exp.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"appendFlagToRegExp","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":69}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":26,"column":0},"end":{"line":32,"column":1}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":73}},"11":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":75}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":17}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = appendFlagToRegExp;","","var _get_reg_exp_flags = require('./get_reg_exp_flags');","","var _get_reg_exp_flags2 = _interopRequireDefault(_get_reg_exp_flags);","","var _includes = require('../../includes');","","var _includes2 = _interopRequireDefault(_includes);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Append flag to a regular expression."," *"," * @ignore"," * @param {RegExp} pattern The pattern to coerce."," * @param {string} appendFlag The flag to append to regular expression."," * @return {RegExp} The regular expression with added flag."," */","function appendFlagToRegExp(pattern, appendFlag) {","  var regularExpressionFlags = (0, _get_reg_exp_flags2.default)(pattern);","  if (!(0, _includes2.default)(regularExpressionFlags, appendFlag)) {","    return new RegExp(pattern.source, regularExpressionFlags + appendFlag);","  }","  return pattern;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"26":1,"27":0,"28":0,"29":0,"31":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/get_reg_exp_flags.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/reg_exp/get_reg_exp_flags.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getRegExpFlags","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":17,"column":0},"end":{"line":19,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":57}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = getRegExpFlags;","","var _const = require('./const');","","/**"," * Get the flags string from a regular expression object."," *"," * @ignore"," * @param {RegExp} regExp The regular expression object."," * @return {string} Returns the string with flags chars."," */","function getRegExpFlags(regExp) {","  return regExp.toString().match(_const.REGEXP_FLAGS)[0];","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"17":1,"18":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/replace.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/replace.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"replace","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":38,"column":0},"end":{"line":41,"column":1}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":63}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":53}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = replace;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Replaces the matches of `pattern` with `replacement`. <br/>"," *"," * @function replace"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to verify."," * @param {string|RegExp} pattern The pattern which match is replaced. If `pattern` is a string,"," * a simple string match is evaluated and only the first occurrence replaced."," * @param {string|Function} replacement The string or function which invocation result replaces `pattern` match."," * @return {string} Returns the replacement result."," * @example"," * v.replace('swan', 'wa', 'u');"," * // => 'sun'"," *"," * v.replace('domestic duck', /domestic\\s/, '');"," * // => 'duck'"," *"," * v.replace('nice duck', /(nice)(duck)/, function(match, nice, duck) {"," *   return 'the ' + duck + ' is ' + nice;"," * });"," * // => 'the duck is nice'"," */","function replace(subject, pattern, replacement) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.replace(pattern, replacement);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"38":1,"39":0,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/reverse_grapheme.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/reverse_grapheme.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"reverseGrapheme","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":71},"end":{"line":39,"column":93}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":63}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":52}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":36}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":26}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":35}},"14":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":50}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":24}},"17":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = reverseGrapheme;","","var _const = require('./helper/reg_exp/const');","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reverses the `subject` taking care of"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and"," * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>."," *"," * @function reverseGrapheme"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to reverse."," * @return {string} Returns the reversed string."," * @example"," * v.reverseGrapheme('summer');"," * // => 'remmus'"," *"," * v.reverseGrapheme('𝌆 bar mañana mañana');"," * // => 'anañam anañam rab 𝌆'"," */","function reverseGrapheme(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  /**","   * @see https://github.com/mathiasbynens/esrever","   */","  subjectString = subjectString.replace(_const.REGEXP_COMBINING_MARKS, function ($0, $1, $2) {","    return reverseGrapheme($2) + $1;","  }).replace(_const.REGEXP_SURROGATE_PAIRS, '$2$1');","  var reversedString = '';","  var index = subjectString.length;","  while (index--) {","    reversedString += subjectString.charAt(index);","  }","  return reversedString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"34":1,"35":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"47":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/reverse.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/reverse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"reverse","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":63}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":52}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = reverse;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reverses the `subject`."," *"," * @function reverse"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to reverse."," * @return {string} Returns the reversed string."," * @example"," * v.reverse('winter');"," * // => 'retniw'"," */","function reverse(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.split('').reverse().join('');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"27":1,"28":0,"29":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/search.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/search.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"search","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":44,"column":0},"end":{"line":52,"column":1}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":63}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":153}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":73}},"17":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":34}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":20}},"20":{"start":{"line":53,"column":0},"end":{"line":53,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":59},"end":{"line":46,"column":60}},{"start":{"line":46,"column":63},"end":{"line":46,"column":152}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"5":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":23}},{"start":{"line":48,"column":27},"end":{"line":48,"column":50}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = search;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the first index of a `pattern` match in `subject`."," *"," * @function search"," * @static"," * @since 1.0.0"," * @memberOf Index"," * @param {string} [subject=''] The string where to search."," * @param {string|RegExp} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern)`."," * @param {number} [fromIndex=0] The index to start searching."," * @return {number} Returns the first match index or `-1` if not found."," * @example"," * v.search('morning', /rn/);"," * // => 2"," *"," * v.search('evening', '/\\d/');"," * // => -1"," */","function search(subject, pattern, fromIndex) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var fromIndexNumber = (0, _is_nil2.default)(fromIndex) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(fromIndex), 0, subjectString.length);","  var matchIndex = subjectString.substr(fromIndexNumber).search(pattern);","  if (matchIndex !== -1 && !isNaN(fromIndexNumber)) {","    matchIndex += fromIndexNumber;","  }","  return matchIndex;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/slice.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/slice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"slice","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":68}},"9":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = slice;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not"," * included."," *"," * @function slice"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']         The string to extract from."," * @param  {number} start                The position to start extraction. If negative use `subject.length + start`."," * @param  {number} [end=subject.length] The position to end extraction. If negative use `subject.length + end`."," * @return {string}                      Returns the extracted string."," * @note Uses native `String.prototype.slice()`"," * @example"," * v.slice('miami', 1);"," * // => 'iami'"," *"," * v.slice('florida', -4);"," * // => 'rida'"," *"," * v.slice('florida', 1, 4);"," * // => \"lor\""," */","function slice(subject, start, end) {","  return (0, _coerce_to_string2.default)(subject).slice(start, end);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"37":1,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/slugify.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/slugify.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"slugify","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":43,"column":0},"end":{"line":50,"column":1}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":63}},"14":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":14}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":104}},"17":{"start":{"line":49,"column":2},"end":{"line":49,"column":55}},"18":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = slugify;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _kebab_case = require('./kebab_case');","","var _kebab_case2 = _interopRequireDefault(_kebab_case);","","var _latinise = require('./latinise');","","var _latinise2 = _interopRequireDefault(_latinise);","","var _const = require('./helper/reg_exp/const');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Slugifies the `subject`. Cleans the `subject` by replacing diacritics with corresponding latin characters."," *"," * @function slugify"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to slugify."," * @return {string} Returns the slugified string."," * @example"," * v.slugify('Italian cappuccino drink');"," * // => 'italian-cappuccino-drink'"," *"," * v.slugify('caffé latté');"," * // => 'caffe-latte'"," *"," * v.slugify('хорошая погода');"," * // => 'horoshaya-pogoda'"," */","function slugify(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  var cleanSubjectString = (0, _latinise2.default)(subjectString).replace(_const.REGEXP_NON_LATIN, '-');","  return (0, _kebab_case2.default)(cleanSubjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":3,"43":1,"44":0,"45":0,"46":0,"48":0,"49":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/snake_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/snake_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"snakeCase","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":41,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":63}},"13":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":14}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":81}},"16":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = snakeCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _lower_case = require('./lower_case');","","var _lower_case2 = _interopRequireDefault(_lower_case);","","var _words = require('./words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Snake_case\">snake case</a>."," *"," * @function snakeCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to snake case."," * @return {string}              Returns the snake case string."," * @example"," * v.snakeCase('learning to fly');"," * // => 'learning_to_fly'"," *"," * v.snakeCase('LearningToFly');"," * // => 'learning_to_fly'"," *"," * v.snakeCase('-Learning-To-Fly-');"," * // => 'learning_to_fly'"," */","function snakeCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  return (0, _words2.default)(subjectString).map(_lower_case2.default).join('_');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"41":1,"42":0,"43":0,"44":0,"46":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/splice.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/splice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"splice","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":42,"column":0},"end":{"line":59,"column":1}},"10":{"start":{"line":43,"column":2},"end":{"line":43,"column":63}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":59}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":61}},"13":{"start":{"line":46,"column":2},"end":{"line":53,"column":3}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":57}},"15":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"16":{"start":{"line":49,"column":6},"end":{"line":49,"column":24}},"17":{"start":{"line":51,"column":9},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":41}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":109}},"20":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":118}},"23":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":9}},{"start":{"line":51,"column":9},"end":{"line":51,"column":9}}]},"6":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = splice;","","var _coerce_to_number = require('./helper/number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Changes `subject` by deleting `deleteCount` of characters starting at position `start`. Places a new string"," * `toAdd` instead of deleted characters."," *"," * @function splice"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string where to insert."," * @param {string} start The position to start changing the string. For a negative position will start from the end of"," * the string."," * @param {number} [deleteCount=subject.length-start] The number of characters to delete from string."," * @param {string} [toAdd=''] The string to be added instead of deleted characters."," * @return {string} Returns the modified string."," * @example"," * v.splice('new year', 0, 4);"," * // => 'year'"," *"," * v.splice('new year', 0, 3, 'happy');"," * // => 'happy year'"," *"," * v.splice('new year', -4, 4, 'day');"," * // => 'new day'"," */","function splice(subject, start, deleteCount, toAdd) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var toAddString = (0, _coerce_to_string2.default)(toAdd);","  var startPosition = (0, _coerce_to_number2.default)(start);","  if (startPosition < 0) {","    startPosition = subjectString.length + startPosition;","    if (startPosition < 0) {","      startPosition = 0;","    }","  } else if (startPosition > subjectString.length) {","    startPosition = subjectString.length;","  }","  var deleteCountNumber = (0, _coerce_to_number2.default)(deleteCount, subjectString.length - startPosition);","  if (deleteCountNumber < 0) {","    deleteCountNumber = 0;","  }","  return subjectString.slice(0, startPosition) + toAddString + subjectString.slice(startPosition + deleteCountNumber);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/split.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/split.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"split","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":32,"column":0},"end":{"line":35,"column":1}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":63}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":47}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = split;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Splits `subject` into an array of chunks by `separator`."," *"," * @function split"," * @static"," * @since 1.0.0"," * @memberOf Split"," * @param {string} [subject=''] The string to split into characters."," * @param {string|RegExp} [separator] The pattern to match the separator."," * @param {number} [limit] Limit the number of chunks to be found."," * @return {Array} Returns the array of chunks."," * @example"," * v.split('rage against the dying of the light', ' ');"," * // => ['rage', 'against', 'the', 'dying', 'of', 'the', 'light']"," *"," * v.split('the dying of the light', /\\s/, 3);"," * // => ['the', 'dying', 'of']"," */","function split(subject, separator, limit) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.split(separator, limit);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"32":1,"33":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/sprintf.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/sprintf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"sprintf","line":198,"loc":{"start":{"line":198,"column":0},"end":{"line":198,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":198,"column":0},"end":{"line":210,"column":1}},"13":{"start":{"line":199,"column":2},"end":{"line":199,"column":61}},"14":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"15":{"start":{"line":201,"column":4},"end":{"line":201,"column":24}},"16":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"17":{"start":{"line":205,"column":4},"end":{"line":205,"column":45}},"18":{"start":{"line":208,"column":2},"end":{"line":208,"column":99}},"19":{"start":{"line":209,"column":2},"end":{"line":209,"column":93}},"20":{"start":{"line":211,"column":0},"end":{"line":211,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]},"3":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = sprintf;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _const = require('./helper/reg_exp/const');","","var _index = require('./helper/format/replacement/index.js');","","var _index2 = _interopRequireDefault(_index);","","var _match = require('./helper/format/replacement/match');","","var _match2 = _interopRequireDefault(_match);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Produces a string according to `format`."," *"," * <div id=\"sprintf-format\" class=\"smaller\">"," * `format` string is composed of zero or more directives: ordinary characters (not <code>%</code>), which are  copied  unchanged"," * to  the  output string and <i>conversion specifications</i>, each of which results in fetching zero or more subsequent"," * arguments. <br/> <br/>"," *"," * Each <b>conversion specification</b> is introduced by the character <code>%</code>, and ends with a <b>conversion"," * specifier</b>. In between there may be (in this order) zero or more <b>flags</b>, an optional <b>minimum field width</b>"," * and an optional <b>precision</b>.<br/>"," * The syntax is: <b>ConversionSpecification</b> = <b>\"%\"</b> { <b>Flags</b> }"," * [ <b>MinimumFieldWidth</b> ] [ <b>Precision</b> ] <b>ConversionSpecifier</b>, where curly braces { } denote repetition"," * and square brackets [ ] optionality. <br/><br/>"," *"," * By default, the arguments are used in the given order.<br/>"," * For argument numbering and swapping, `%m$` (where `m` is a number indicating the argument order)"," * is used instead of `%` to specify explicitly which argument is taken. For instance `%1$s` fetches the 1st argument,"," * `%2$s` the 2nd and so on, no matter what position  the conversion specification has in `format`."," * <br/><br/>"," *"," * <b>The flags</b><br/>"," * The character <code>%</code> is followed by zero or more of the following flags:<br/>"," * <table class=\"light-params\">"," *   <tr>"," *     <td><code>+</code></td>"," *     <td>"," *       A  sign (<code>+</code> or <code>-</code>) should always be placed before a number produced by a"," *       signed conversion. By default a sign is used only for negative numbers."," *     </td>"," *   </tr>"," *   <tr>"," *     <td><code>0</code></td>"," *     <td>The value should be zero padded.</td>"," *   </tr>"," *   <tr>"," *     <td><code>&blank;</code></td>"," *     <td>(a space) The value should be space padded.</td>"," *   </tr>"," *   <tr>"," *    <td><code>'</code></td>"," *    <td>Indicates alternate padding character, specified by prefixing it with a single quote <code>'</code>.</td>"," *   </tr>"," *   <tr>"," *     <td><code>-</code></td>"," *     <td>The converted value is to be left adjusted on the field boundary (the default is right justification).</td>"," *   </tr>"," * </table>"," *"," * <b>The minimum field width</b><br/>"," * An  optional decimal digit string (with nonzero first digit) specifying a minimum field width.  If the converted"," * value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the"," * left-adjustment flag has been given).<br/><br/>"," *"," * <b>The precision</b><br/>"," * An optional precision, in the form of a period `.` followed by an optional decimal digit string.<br/>"," * This gives the number of digits to appear after the radix character for `e`, `E`, `f` and `F` conversions, the"," * maximum number of significant digits for `g` and `G` conversions or the maximum number of characters to be printed"," * from a string for `s` conversion.<br/><br/>"," *"," * <b>The conversion specifier</b><br/>"," * A specifier that mentions what type the argument should be treated as:"," *"," * <table class=\"light-params\">"," *   <tr>"," *     <td>`s`</td>"," *     <td>The string argument is treated as and presented as a string.</td>"," *   </tr>"," *   <tr>"," *     <td>`d` `i`</td>"," *     <td>The integer argument is converted to signed decimal notation.</td>"," *   </tr>"," *   <tr>"," *     <td>`b`</td>"," *     <td>The unsigned integer argument is converted to unsigned binary.</td>"," *   </tr>"," *   <tr>"," *     <td>`c`</td>"," *     <td>The unsigned integer argument is converted to an ASCII character with that number.</td>"," *   </tr>"," *   <tr>"," *     <td>`o`</td>"," *     <td>The unsigned integer argument is converted to unsigned octal.</td>"," *   </tr>"," *   <tr>"," *     <td>`u`</td>"," *     <td>The unsigned integer argument is converted to unsigned decimal.</td>"," *   </tr>"," *   <tr>"," *     <td>`x` `X`</td>"," *     <td>The unsigned integer argument is converted to unsigned hexadecimal. The letters `abcdef` are used for `x`"," *     conversions; the letters `ABCDEF` are used for `X` conversions.</td>"," *   </tr>"," *   <tr>"," *     <td>`f`</td>"," *     <td>"," *      The float argument is rounded and converted to decimal notation in the style `[-]ddd.ddd`, where the number of"," *      digits after the decimal-point character is equal to the precision specification. If the precision is missing,"," *      it is taken as 6; if the precision is explicitly zero, no decimal-point character appears."," *      If a decimal point appears, at least one digit appears before it."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`e` `E`</td>"," *     <td>"," *       The float argument is rounded and converted in the style `[-]d.ddde±dd`, where there is one digit"," *       before the decimal-point character and the number of digits after it is equal to the precision. If"," *       the precision is missing, it is taken as `6`; if the precision is zero, no decimal-point character"," *       appears. An `E` conversion uses the letter `E` (rather than `e`) to introduce the exponent."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`g` `G`</td>"," *     <td>"," *       The float argument is converted in style `f` or `e` (or `F` or `E` for `G` conversions). The precision specifies"," *       the number of significant digits. If the precision is missing, `6` digits are given; if the"," *       precision is zero, it is treated as `1`. Style `e` is used if the exponent from its conversion is less"," *       than `-6` or greater than or equal to the precision. Trailing zeros are removed from the fractional"," *       part of the result; a decimal point appears only if it is followed by at least one digit."," *     </td>"," *   </tr>"," *   <tr>"," *     <td>`%`</td>"," *     <td>A literal `%` is written. No argument is converted. The complete conversion specification is `%%`.</td>"," *   </tr>"," *"," * </table>"," * </div>"," *"," * @function sprintf"," * @static"," * @since 1.0.0"," * @memberOf Format"," * @param  {string} [format=''] The format string."," * @param  {...*}               replacements The replacements to produce the string."," * @return {string}             Returns the produced string."," * @example"," * v.sprintf('%s, %s!', 'Hello', 'World');"," * // => 'Hello World!'"," *"," * v.sprintf('%s costs $%d', 'coffee', 2);"," * // => 'coffee costs $2'"," *"," * v.sprintf('%1$s %2$s %1$s %2$s, watcha gonna %3$s', 'bad', 'boys', 'do')"," * // => 'bad boys bad boys, watcha gonna do'"," *"," * v.sprintf('% 6s', 'bird');"," * // => '  bird'"," *"," * v.sprintf('% -6s', 'crab');"," * // => 'crab  '"," *"," * v.sprintf(\"%'*5s\", 'cat');"," * // => '**cat'"," *"," * v.sprintf(\"%'*-6s\", 'duck');"," * // => 'duck**'"," *"," * v.sprintf('%d %i %+d', 15, -2, 25);"," * // => '15 -2 +25'"," *"," * v.sprintf(\"%06d\", 15);"," * // => '000015'"," *"," * v.sprintf('0b%b 0o%o 0x%X', 12, 9, 155);"," * // => '0b1100 0o11 0x9B'"," *"," * v.sprintf('%.2f', 10.469);"," * // => '10.47'"," *"," * v.sprintf('%.2e %g', 100.5, 0.455);"," * // => '1.01e+2 0.455'"," * "," */","function sprintf(format) {","  var formatString = (0, _coerce_to_string2.default)(format);","  if (formatString === '') {","    return formatString;","  }","","  for (var _len = arguments.length, replacements = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {","    replacements[_key - 1] = arguments[_key];","  }","","  var boundReplacementMatch = _match2.default.bind(undefined, new _index2.default(), replacements);","  return formatString.replace(_const.REGEXP_CONVERSION_SPECIFICATION, boundReplacementMatch);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":3,"198":1,"199":0,"200":0,"201":0,"204":0,"205":0,"208":0,"209":0,"211":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"ReplacementIndex","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":39},"end":{"line":31,"column":51}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":54},"end":{"line":42,"column":74}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":48},"end":{"line":55,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":17}},"8":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":15}},"10":{"start":{"line":42,"column":0},"end":{"line":46,"column":2}},"11":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":21}},"13":{"start":{"line":55,"column":0},"end":{"line":57,"column":2}},"14":{"start":{"line":56,"column":2},"end":{"line":56,"column":69}},"15":{"start":{"line":59,"column":0},"end":{"line":59,"column":35}},"16":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"4":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":43},"end":{"line":56,"column":53}},{"start":{"line":56,"column":56},"end":{"line":56,"column":68}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _is_nil = require('../../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The current index."," *"," * @ignore"," * @name ReplacementIndex#index"," * @type {number}"," * @return {ReplacementIndex} ReplacementIndex instance."," */","function ReplacementIndex() {","  this.index = 0;","}","","/**"," * Increment the current index."," *"," * @ignore"," * @return {undefined}"," */","ReplacementIndex.prototype.increment = function () {","  this.index++;","};","","/**"," * Increment the current index by position."," *"," * @ignore"," * @param {number} [position] The replacement position."," * @return {undefined}"," */","ReplacementIndex.prototype.incrementOnEmptyPosition = function (position) {","  if ((0, _is_nil2.default)(position)) {","    this.increment();","  }","};","","/**"," * Get the replacement index by position."," *"," * @ignore"," * @param {number} [position] The replacement position."," * @return {number} The replacement index."," */","ReplacementIndex.prototype.getIndexByPosition = function (position) {","  return (0, _is_nil2.default)(position) ? this.index : position - 1;","};","","exports.default = ReplacementIndex;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"21":1,"22":0,"31":1,"32":0,"42":1,"43":0,"44":0,"55":1,"56":0,"59":1,"60":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/match.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/match.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"match","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":195}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":71}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":83}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":44,"column":0},"end":{"line":61,"column":1}},"14":{"start":{"line":45,"column":2},"end":{"line":53,"column":5}},"15":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},"17":{"start":{"line":57,"column":2},"end":{"line":57,"column":77}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":54}},"19":{"start":{"line":59,"column":2},"end":{"line":59,"column":83}},"20":{"start":{"line":60,"column":2},"end":{"line":60,"column":82}},"21":{"start":{"line":62,"column":0},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = match;","","var _coerce_to_number = require('../../number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _compute = require('./compute');","","var _compute2 = _interopRequireDefault(_compute);","","var _conversion_specification = require('../conversion_specification');","","var _conversion_specification2 = _interopRequireDefault(_conversion_specification);","","var _validate = require('./validate');","","var _validate2 = _interopRequireDefault(_validate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Return the replacement for regular expression match of the conversion specification."," *"," * @ignore"," * @name matchReplacement"," * @param {ReplacementIndex} replacementIndex The replacement index object."," * @param {string[]} replacements The array of replacements."," * @param {string} conversionSpecification The conversion specification."," * @param {string} percent The percent characters from conversion specification."," * @param {string} position The position to insert the replacement."," * @param {string} signSpecifier The sign specifier to force a sign to be used on a number."," * @param {string} paddingSpecifier The padding specifier that says what padding character will be used."," * @param {string} alignmentSpecifier The alignment specifier that says if the result should be left-justified or right-justified."," * @param {string} widthSpecifier The width specifier how many characters this conversion should result in."," * @param {string} precisionSpecifier The precision specifier says how many decimal digits should be displayed for floating-point numbers."," * @param {string} typeSpecifier The type specifier says what type the argument data should be treated as."," * @return {string} Returns the computed replacement."," */","function match(replacementIndex, replacements, conversionSpecification, percent, position, signSpecifier, paddingSpecifier, alignmentSpecifier, widthSpecifier, precisionSpecifier, typeSpecifier) {","  var conversion = new _conversion_specification2.default({","    percent: percent,","    signSpecifier: signSpecifier,","    paddingSpecifier: paddingSpecifier,","    alignmentSpecifier: alignmentSpecifier,","    width: (0, _coerce_to_number2.default)(widthSpecifier, null),","    precision: (0, _coerce_to_number2.default)(precisionSpecifier, null),","    typeSpecifier: typeSpecifier","  });","  if (conversion.isPercentLiteral()) {","    return conversionSpecification.slice(1);","  }","  var actualReplacementIndex = replacementIndex.getIndexByPosition(position);","  replacementIndex.incrementOnEmptyPosition(position);","  (0, _validate2.default)(actualReplacementIndex, replacements.length, conversion);","  return (0, _compute2.default)(replacements[actualReplacementIndex], conversion);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"44":1,"45":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/compute.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/compute.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":6,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,6],"2":[6,6],"3":[0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"f":{"1":6,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"2":{"name":"compute","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":59}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":59}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":65}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":65}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":47}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":47}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":95}},"16":{"start":{"line":32,"column":39},"end":{"line":32,"column":93}},"17":{"start":{"line":43,"column":0},"end":{"line":71,"column":1}},"18":{"start":{"line":44,"column":2},"end":{"line":44,"column":30}},"19":{"start":{"line":45,"column":2},"end":{"line":68,"column":3}},"20":{"start":{"line":47,"column":6},"end":{"line":47,"column":40}},"21":{"start":{"line":48,"column":6},"end":{"line":48,"column":12}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":49}},"23":{"start":{"line":52,"column":6},"end":{"line":52,"column":12}},"24":{"start":{"line":59,"column":6},"end":{"line":59,"column":46}},"25":{"start":{"line":60,"column":6},"end":{"line":60,"column":12}},"26":{"start":{"line":66,"column":6},"end":{"line":66,"column":39}},"27":{"start":{"line":67,"column":6},"end":{"line":67,"column":12}},"28":{"start":{"line":69,"column":2},"end":{"line":69,"column":64}},"29":{"start":{"line":70,"column":2},"end":{"line":70,"column":67}},"30":{"start":{"line":72,"column":0},"end":{"line":72,"column":36}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":70},"end":{"line":32,"column":73}},{"start":{"line":32,"column":76},"end":{"line":32,"column":92}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":46},"end":{"line":32,"column":49}},{"start":{"line":32,"column":53},"end":{"line":32,"column":67}}]},"3":{"line":45,"type":"switch","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":12}},{"start":{"line":49,"column":4},"end":{"line":49,"column":46}},{"start":{"line":50,"column":4},"end":{"line":52,"column":12}},{"start":{"line":53,"column":4},"end":{"line":53,"column":54}},{"start":{"line":54,"column":4},"end":{"line":54,"column":45}},{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},{"start":{"line":56,"column":4},"end":{"line":56,"column":50}},{"start":{"line":57,"column":4},"end":{"line":57,"column":60}},{"start":{"line":58,"column":4},"end":{"line":60,"column":12}},{"start":{"line":61,"column":4},"end":{"line":61,"column":36}},{"start":{"line":62,"column":4},"end":{"line":62,"column":47}},{"start":{"line":63,"column":4},"end":{"line":63,"column":57}},{"start":{"line":64,"column":4},"end":{"line":64,"column":42}},{"start":{"line":65,"column":4},"end":{"line":67,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = compute;","","var _align_and_pad = require('../align_and_pad');","","var _align_and_pad2 = _interopRequireDefault(_align_and_pad);","","var _const = require('../const');","","var _const2 = _interopRequireDefault(_const);","","var _float = require('../type_format/float');","","var _float2 = _interopRequireDefault(_float);","","var _integer_base = require('../type_format/integer_base');","","var _integer_base2 = _interopRequireDefault(_integer_base);","","var _integer_decimal = require('../type_format/integer_decimal');","","var _integer_decimal2 = _interopRequireDefault(_integer_decimal);","","var _string = require('../type_format/string');","","var _string2 = _interopRequireDefault(_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the computed string based on format specifiers."," *"," * @ignore"," * @name computeReplacement"," * @param {string} replacement The replacement value."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the computed string."," */","function compute(replacement, conversion) {","  var formatFunction = void 0;","  switch (conversion.typeSpecifier) {","    case _const2.default.TYPE_STRING:","      formatFunction = _string2.default;","      break;","    case _const2.default.TYPE_INTEGER_DECIMAL:","    case _const2.default.TYPE_INTEGER:","      formatFunction = _integer_decimal2.default;","      break;","    case _const2.default.TYPE_INTEGER_ASCII_CHARACTER:","    case _const2.default.TYPE_INTEGER_BINARY:","    case _const2.default.TYPE_INTEGER_OCTAL:","    case _const2.default.TYPE_INTEGER_HEXADECIMAL:","    case _const2.default.TYPE_INTEGER_HEXADECIMAL_UPPERCASE:","    case _const2.default.TYPE_INTEGER_UNSIGNED_DECIMAL:","      formatFunction = _integer_base2.default;","      break;","    case _const2.default.TYPE_FLOAT:","    case _const2.default.TYPE_FLOAT_SCIENTIFIC:","    case _const2.default.TYPE_FLOAT_SCIENTIFIC_UPPERCASE:","    case _const2.default.TYPE_FLOAT_SHORT:","    case _const2.default.TYPE_FLOAT_SHORT_UPPERCASE:","      formatFunction = _float2.default;","      break;","  }","  var formattedString = formatFunction(replacement, conversion);","  return (0, _align_and_pad2.default)(formattedString, conversion);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":6,"43":1,"44":0,"45":0,"47":0,"48":0,"51":0,"52":0,"59":0,"60":0,"66":0,"67":0,"69":0,"70":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/align_and_pad.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/align_and_pad.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"alignAndPad","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":34,"column":0},"end":{"line":41,"column":1}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":31}},"15":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"17":{"start":{"line":39,"column":2},"end":{"line":39,"column":123}},"18":{"start":{"line":40,"column":2},"end":{"line":40,"column":67}},"19":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":34}},{"start":{"line":36,"column":38},"end":{"line":36,"column":61}}]},"5":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":82},"end":{"line":39,"column":101}},{"start":{"line":39,"column":104},"end":{"line":39,"column":122}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = alignAndPad;","","var _const = require('./const');","","var _const2 = _interopRequireDefault(_const);","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _pad_left = require('../../pad_left');","","var _pad_left2 = _interopRequireDefault(_pad_left);","","var _pad_right = require('../../pad_right');","","var _pad_right2 = _interopRequireDefault(_pad_right);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Aligns and pads `subject` string."," *"," * @ignore"," * @param {string} subject The subject string."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the aligned and padded string."," */","function alignAndPad(subject, conversion) {","  var width = conversion.width;","  if ((0, _is_nil2.default)(width) || subject.length >= width) {","    return subject;","  }","  var padType = conversion.alignmentSpecifier === _const2.default.LITERAL_MINUS ? _pad_right2.default : _pad_left2.default;","  return padType(subject, width, conversion.getPaddingCharacter());","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"34":1,"35":0,"36":0,"37":0,"39":0,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/const.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/const.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":35,"column":3}},"3":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = Object.freeze({","  // Type specifiers","  TYPE_INTEGER: 'i',","  TYPE_INTEGER_BINARY: 'b',","  TYPE_INTEGER_ASCII_CHARACTER: 'c',","  TYPE_INTEGER_DECIMAL: 'd',","  TYPE_INTEGER_OCTAL: 'o',","  TYPE_INTEGER_UNSIGNED_DECIMAL: 'u',","  TYPE_INTEGER_HEXADECIMAL: 'x',","  TYPE_INTEGER_HEXADECIMAL_UPPERCASE: 'X',","  TYPE_FLOAT_SCIENTIFIC: 'e',","  TYPE_FLOAT_SCIENTIFIC_UPPERCASE: 'E',","  TYPE_FLOAT: 'f',","  TYPE_FLOAT_SHORT: 'g',","  TYPE_FLOAT_SHORT_UPPERCASE: 'G',","  TYPE_STRING: 's',","","  // Simple literals","  LITERAL_PERCENT: '%',","  LITERAL_SINGLE_QUOTE: \"'\",","  LITERAL_PLUS: '+',","  LITERAL_MINUS: '-',","  LITERAL_PERCENT_SPECIFIER: '%%',","","  // Radix constants to format numbers","  RADIX_BINARY: 2,","  RADIX_OCTAL: 8,","  RADIX_DECIMAL: 10,","  RADIX_HEXADECIMAL: 16","});","module.exports = exports['default'];"],"l":{"3":1,"6":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/float.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/float.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"float","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":40}}},"3":{"name":"formatFloatAsShort","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":78}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":91}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":65}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":67}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":37,"column":0},"end":{"line":61,"column":1}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":50}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":36}},"17":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":26}},"19":{"start":{"line":43,"column":2},"end":{"line":43,"column":75}},"20":{"start":{"line":44,"column":2},"end":{"line":58,"column":3}},"21":{"start":{"line":46,"column":6},"end":{"line":46,"column":66}},"22":{"start":{"line":47,"column":6},"end":{"line":47,"column":12}},"23":{"start":{"line":49,"column":6},"end":{"line":49,"column":72}},"24":{"start":{"line":50,"column":6},"end":{"line":50,"column":12}},"25":{"start":{"line":52,"column":6},"end":{"line":52,"column":86}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":12}},"27":{"start":{"line":56,"column":6},"end":{"line":56,"column":90}},"28":{"start":{"line":57,"column":6},"end":{"line":57,"column":12}},"29":{"start":{"line":59,"column":2},"end":{"line":59,"column":122}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":63}},"31":{"start":{"line":72,"column":0},"end":{"line":82,"column":1}},"32":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"33":{"start":{"line":74,"column":4},"end":{"line":74,"column":15}},"34":{"start":{"line":76,"column":2},"end":{"line":76,"column":57}},"35":{"start":{"line":77,"column":2},"end":{"line":77,"column":120}},"36":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"37":{"start":{"line":79,"column":4},"end":{"line":79,"column":62}},"38":{"start":{"line":81,"column":2},"end":{"line":81,"column":30}},"39":{"start":{"line":83,"column":0},"end":{"line":83,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":44,"type":"switch","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":12}},{"start":{"line":48,"column":4},"end":{"line":50,"column":12}},{"start":{"line":51,"column":4},"end":{"line":53,"column":12}},{"start":{"line":54,"column":4},"end":{"line":54,"column":42}},{"start":{"line":55,"column":4},"end":{"line":57,"column":12}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"6":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":43},"end":{"line":76,"column":44}},{"start":{"line":76,"column":47},"end":{"line":76,"column":56}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = float;","","var _add_sign_to_formatted_number = require('./add_sign_to_formatted_number');","","var _add_sign_to_formatted_number2 = _interopRequireDefault(_add_sign_to_formatted_number);","","var _coerce_to_number = require('../../number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _const = require('../const');","","var _const2 = _interopRequireDefault(_const);","","var _const3 = require('../../reg_exp/const');","","var _coerce_to_string = require('../../string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Formats a float type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function float(replacement, conversion) {","  var replacementNumber = parseFloat(replacement);","  var formattedReplacement = void 0;","  if (isNaN(replacementNumber)) {","    replacementNumber = 0;","  }","  var precision = (0, _coerce_to_number2.default)(conversion.precision, 6);","  switch (conversion.typeSpecifier) {","    case _const2.default.TYPE_FLOAT:","      formattedReplacement = replacementNumber.toFixed(precision);","      break;","    case _const2.default.TYPE_FLOAT_SCIENTIFIC:","      formattedReplacement = replacementNumber.toExponential(precision);","      break;","    case _const2.default.TYPE_FLOAT_SCIENTIFIC_UPPERCASE:","      formattedReplacement = replacementNumber.toExponential(precision).toUpperCase();","      break;","    case _const2.default.TYPE_FLOAT_SHORT:","    case _const2.default.TYPE_FLOAT_SHORT_UPPERCASE:","      formattedReplacement = formatFloatAsShort(replacementNumber, precision, conversion);","      break;","  }","  formattedReplacement = (0, _add_sign_to_formatted_number2.default)(replacementNumber, formattedReplacement, conversion);","  return (0, _coerce_to_string2.default)(formattedReplacement);","}","","/**"," * Formats the short float."," *"," * @ignore"," * @param  {number} replacementNumber The number to format."," * @param  {number} precision The precision to format the float."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string}  Returns the formatted short float."," */","function formatFloatAsShort(replacementNumber, precision, conversion) {","  if (replacementNumber === 0) {","    return '0';","  }","  var nonZeroPrecision = precision === 0 ? 1 : precision;","  var formattedReplacement = replacementNumber.toPrecision(nonZeroPrecision).replace(_const3.REGEXP_TRAILING_ZEROS, '');","  if (conversion.typeSpecifier === _const2.default.TYPE_FLOAT_SHORT_UPPERCASE) {","    formattedReplacement = formattedReplacement.toUpperCase();","  }","  return formattedReplacement;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"37":1,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"56":0,"57":0,"59":0,"60":0,"72":1,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"81":0,"83":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/add_sign_to_formatted_number.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/add_sign_to_formatted_number.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"addSignToFormattedNumber","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":87}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"8":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":79}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":63}},{"start":{"line":25,"column":67},"end":{"line":25,"column":89}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = addSignToFormattedNumber;","","var _const = require('../const');","","var _const2 = _interopRequireDefault(_const);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Add sign to the formatted number."," *"," * @ignore"," * @name addSignToFormattedNumber"," * @param  {number} replacementNumber The number to be replaced."," * @param  {string} formattedReplacement The formatted version of number."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted number string with a sign."," */","function addSignToFormattedNumber(replacementNumber, formattedReplacement, conversion) {","  if (conversion.signSpecifier === _const2.default.LITERAL_PLUS && replacementNumber >= 0) {","    formattedReplacement = _const2.default.LITERAL_PLUS + formattedReplacement;","  }","  return formattedReplacement;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"24":1,"25":0,"26":0,"28":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/integer_base.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/integer_base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0,0,0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"integerBase","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":27,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":38}},"11":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":16}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"14":{"start":{"line":33,"column":2},"end":{"line":49,"column":3}},"15":{"start":{"line":35,"column":6},"end":{"line":35,"column":45}},"16":{"start":{"line":36,"column":6},"end":{"line":36,"column":12}},"17":{"start":{"line":38,"column":6},"end":{"line":38,"column":63}},"18":{"start":{"line":39,"column":6},"end":{"line":39,"column":12}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":62}},"20":{"start":{"line":42,"column":6},"end":{"line":42,"column":12}},"21":{"start":{"line":44,"column":6},"end":{"line":44,"column":68}},"22":{"start":{"line":45,"column":6},"end":{"line":45,"column":12}},"23":{"start":{"line":47,"column":6},"end":{"line":47,"column":82}},"24":{"start":{"line":48,"column":6},"end":{"line":48,"column":12}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":50}},"26":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":33,"type":"switch","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":12}},{"start":{"line":37,"column":4},"end":{"line":39,"column":12}},{"start":{"line":40,"column":4},"end":{"line":42,"column":12}},{"start":{"line":43,"column":4},"end":{"line":45,"column":12}},{"start":{"line":46,"column":4},"end":{"line":48,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = integerBase;","","var _const = require('../const');","","var _const2 = _interopRequireDefault(_const);","","var _coerce_to_string = require('../../string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Formats an integer type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function integerBase(replacement, conversion) {","  var integer = parseInt(replacement);","  if (isNaN(integer)) {","    integer = 0;","  }","  integer = integer >>> 0;","  switch (conversion.typeSpecifier) {","    case _const2.default.TYPE_INTEGER_ASCII_CHARACTER:","      integer = String.fromCharCode(integer);","      break;","    case _const2.default.TYPE_INTEGER_BINARY:","      integer = integer.toString(_const2.default.RADIX_BINARY);","      break;","    case _const2.default.TYPE_INTEGER_OCTAL:","      integer = integer.toString(_const2.default.RADIX_OCTAL);","      break;","    case _const2.default.TYPE_INTEGER_HEXADECIMAL:","      integer = integer.toString(_const2.default.RADIX_HEXADECIMAL);","      break;","    case _const2.default.TYPE_INTEGER_HEXADECIMAL_UPPERCASE:","      integer = integer.toString(_const2.default.RADIX_HEXADECIMAL).toUpperCase();","      break;","  }","  return (0, _coerce_to_string2.default)(integer);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"27":1,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"47":0,"48":0,"50":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/integer_decimal.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/integer_decimal.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"integerDecimal","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":78}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":91}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":27,"column":0},"end":{"line":33,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":38}},"11":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":16}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":109}},"14":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = integerDecimal;","","var _add_sign_to_formatted_number = require('./add_sign_to_formatted_number');","","var _add_sign_to_formatted_number2 = _interopRequireDefault(_add_sign_to_formatted_number);","","var _to_string = require('../../string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Formats a decimal integer type according to specifiers."," *"," * @ignore"," * @param  {string} replacement The string to be formatted."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","","function integerDecimal(replacement, conversion) {","  var integer = parseInt(replacement);","  if (isNaN(integer)) {","    integer = 0;","  }","  return (0, _add_sign_to_formatted_number2.default)(integer, (0, _to_string2.default)(integer), conversion);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"27":1,"28":0,"29":0,"30":0,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/string.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/type_format/string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"stringFormat","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":26,"column":0},"end":{"line":33,"column":1}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":41}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":39}},"12":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":88}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"15":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":39}},{"start":{"line":29,"column":43},"end":{"line":29,"column":82}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = stringFormat;","","var _is_nil = require('../../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _truncate = require('../../../truncate');","","var _truncate2 = _interopRequireDefault(_truncate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Formats a string type according to specifiers."," *"," * @ignore"," * @param {string} replacement The string to be formatted."," * @param {ConversionSpecification} conversion The conversion specification object."," * @return {string} Returns the formatted string."," */","function stringFormat(replacement, conversion) {","  var formattedReplacement = replacement;","  var precision = conversion.precision;","  if (!(0, _is_nil2.default)(precision) && formattedReplacement.length > precision) {","    formattedReplacement = (0, _truncate2.default)(formattedReplacement, precision, '');","  }","  return formattedReplacement;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"26":1,"27":0,"28":0,"29":0,"30":0,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/truncate.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/truncate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"truncate","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":49,"column":0},"end":{"line":57,"column":1}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":63}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":163}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":62}},"18":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":25}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":72}},"21":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":50},"end":{"line":51,"column":70}},{"start":{"line":51,"column":73},"end":{"line":51,"column":162}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = truncate;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/number/const');","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Truncates `subject` to a new `length`."," *"," * @function truncate"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject=''] The string to truncate."," * @param  {int}    length       The length to truncate the string."," * @param  {string} [end='...']  The string to be added at the end."," * @return {string}              Returns the truncated string."," * @example"," * v.truncate('Once upon a time', 7);"," * // => 'Once...'"," *"," * v.truncate('Good day, Little Red Riding Hood', 14, ' (...)');"," * // => 'Good day (...)'"," *"," * v.truncate('Once upon', 10);"," * // => 'Once upon'"," */","function truncate(subject, length, end) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var lengthInt = (0, _is_nil2.default)(length) ? subjectString.length : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);","  var endString = (0, _coerce_to_string2.default)(end, '...');","  if (lengthInt >= subjectString.length) {","    return subjectString;","  }","  return subjectString.substr(0, length - endString.length) + endString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/conversion_specification.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/conversion_specification.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"ConversionSpecification","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":53},"end":{"line":96,"column":65}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":56},"end":{"line":106,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":24,"column":0},"end":{"line":88,"column":1}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":36}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":48}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":54}},"12":{"start":{"line":60,"column":2},"end":{"line":60,"column":58}},"13":{"start":{"line":69,"column":2},"end":{"line":69,"column":32}},"14":{"start":{"line":78,"column":2},"end":{"line":78,"column":40}},"15":{"start":{"line":87,"column":2},"end":{"line":87,"column":48}},"16":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"17":{"start":{"line":97,"column":2},"end":{"line":97,"column":68}},"18":{"start":{"line":106,"column":0},"end":{"line":112,"column":2}},"19":{"start":{"line":107,"column":2},"end":{"line":107,"column":80}},"20":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"21":{"start":{"line":109,"column":4},"end":{"line":109,"column":43}},"22":{"start":{"line":111,"column":2},"end":{"line":111,"column":26}},"23":{"start":{"line":114,"column":0},"end":{"line":114,"column":42}},"24":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"4":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":35}},{"start":{"line":108,"column":39},"end":{"line":108,"column":99}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _const = require('./const');","","var _const2 = _interopRequireDefault(_const);","","var _nil_default = require('../undefined/nil_default');","","var _nil_default2 = _interopRequireDefault(_nil_default);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Construct the new conversion specification object."," *"," * @ignore"," * @param {Object} properties An object with properties to initialize."," * @return {ConversionSpecification} ConversionSpecification instance."," */","function ConversionSpecification(properties) {","","  /**","   * The percent characters from conversion specification.","   *","   * @ignore","   * @name ConversionSpecification#percent","   * @type {string}","   */","  this.percent = properties.percent;","","  /**","   *  The sign specifier to force a sign to be used on a number.","   *","   * @ignore","   * @name ConversionSpecification#signSpecifier","   * @type {string}","   */","  this.signSpecifier = properties.signSpecifier;","","  /**","   * The padding specifier that says what padding character will be used.","   *","   * @ignore","   * @name ConversionSpecification#paddingSpecifier","   * @type {string}","   */","  this.paddingSpecifier = properties.paddingSpecifier;","","  /**","   * The alignment specifier that says if the result should be left-justified or right-justified.","   *","   * @ignore","   * @name ConversionSpecification#alignmentSpecifier","   * @type {string}","   */","  this.alignmentSpecifier = properties.alignmentSpecifier;","","  /**","   * The width specifier how many characters this conversion should result in.","   *","   * @ignore","   * @name ConversionSpecification#width","   * @type {number}","   */","  this.width = properties.width;","","  /**","   * The precision specifier says how many decimal digits should be displayed for floating-point numbers.","   *","   * @ignore","   * @name ConversionSpecification#precision","   * @type {number}","   */","  this.precision = properties.precision;","","  /**","   * The type specifier says what type the argument data should be treated as.","   *","   * @ignore","   * @name ConversionSpecification#typeSpecifier","   * @type {string}","   */","  this.typeSpecifier = properties.typeSpecifier;","}","","/**"," * Check if the conversion specification is a percent literal \"%%\"."," *"," * @ignore"," * @return {boolean} Returns true if the conversion is a percent literal, false otherwise."," */","ConversionSpecification.prototype.isPercentLiteral = function () {","  return _const2.default.LITERAL_PERCENT_SPECIFIER === this.percent;","};","","/**"," * Get the padding character from padding specifier."," *"," * @ignore"," * @returns {string} Returns the padding character."," */","ConversionSpecification.prototype.getPaddingCharacter = function () {","  var paddingCharacter = (0, _nil_default2.default)(this.paddingSpecifier, ' ');","  if (paddingCharacter.length === 2 && paddingCharacter[0] === _const2.default.LITERAL_SINGLE_QUOTE) {","    paddingCharacter = paddingCharacter[1];","  }","  return paddingCharacter;","};","","exports.default = ConversionSpecification;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"24":1,"33":0,"42":0,"51":0,"60":0,"69":0,"78":0,"87":0,"96":1,"97":0,"106":1,"107":0,"108":0,"109":0,"111":0,"114":1,"115":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/validate.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/format/replacement/validate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"validate","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":24,"column":0},"end":{"line":34,"column":1}},"8":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":57}},"10":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":52}},"12":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":76}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = validate;","","var _is_nil = require('../../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Validates the specifier type and replacement position."," *"," * @ignore"," * @throws {Error} Throws an exception on insufficient arguments or unknown specifier."," * @param  {number} index The index of the matched specifier."," * @param  {number} replacementsLength The number of replacements."," * @param  {ConversionSpecification} conversion The conversion specification object."," * @return {undefined}"," */","function validate(index, replacementsLength, conversion) {","  if ((0, _is_nil2.default)(conversion.typeSpecifier)) {","    throw new Error('sprintf(): Unknown type specifier');","  }","  if (index > replacementsLength - 1) {","    throw new Error('sprintf(): Too few arguments');","  }","  if (index < 0) {","    throw new Error('sprintf(): Argument number must be greater than zero');","  }","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"24":1,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/starts_with.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/starts_with.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"startsWith","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":54}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":51,"column":0},"end":{"line":62,"column":1}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":63}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":52}},"18":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"19":{"start":{"line":55,"column":4},"end":{"line":55,"column":17}},"20":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":16}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":140}},"23":{"start":{"line":61,"column":2},"end":{"line":61,"column":76}},"24":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"5":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":47},"end":{"line":60,"column":48}},{"start":{"line":60,"column":51},"end":{"line":60,"column":139}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = startsWith;","","var _clip_number = require('./helper/number/clip_number');","","var _clip_number2 = _interopRequireDefault(_clip_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _to_integer = require('./helper/number/to_integer');","","var _to_integer2 = _interopRequireDefault(_to_integer);","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Checks whether `subject` starts with `start`."," *"," * @function startsWith"," * @static"," * @since 1.0.0"," * @memberOf Query"," * @param {string} [subject=''] The string to verify."," * @param {string} start The starting string."," * @param {number} [position=0] The position to start searching."," * @return {boolean} Returns `true` if `subject` starts with `start` or `false` otherwise."," * @example"," * v.startsWith('say hello to my little friend', 'say hello');"," * // => true"," *"," * v.startsWith('tony', 'on', 1);"," * // => true"," *"," * v.startsWith('the world is yours', 'world');"," * // => false"," */","function startsWith(subject, start, position) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var startString = (0, _to_string2.default)(start);","  if (startString === null) {","    return false;","  }","  if (startString === '') {","    return true;","  }","  position = (0, _is_nil2.default)(position) ? 0 : (0, _clip_number2.default)((0, _to_integer2.default)(position), 0, subjectString.length);","  return subjectString.substr(position, startString.length) === startString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"51":1,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/strip_bom.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/strip_bom.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"trim","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"8":{"start":{"line":34,"column":0},"end":{"line":43,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":63}},"10":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":14}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":38}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":23}},"15":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = trim;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var BYRE_ORDER_MARK = '\\uFEFF';","","/**"," * Strips the byte order mark (BOM) from the beginning of `subject`."," *"," * @function stripBom"," * @static"," * @since 1.2.0"," * @memberOf Strip"," * @param {string} [subject=''] The string to strip from."," * @return {string} Returns the stripped string."," * @example"," *"," * v.stripBom('\\uFEFFsummertime sadness');"," * // => 'summertime sadness'"," *"," * v.stripBom('summertime happiness');"," * // => 'summertime happiness'"," *"," */","function trim(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (subjectString === '') {","    return '';","  }","  if (subjectString[0] === BYRE_ORDER_MARK) {","    return subjectString.substring(1);","  }","  return subjectString;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"34":1,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/strip_tags.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/strip_tags.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"trim","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":80}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":79}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":63}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":63}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":63}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":63}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":19}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"16":{"start":{"line":29,"column":0},"end":{"line":29,"column":22}},"17":{"start":{"line":53,"column":0},"end":{"line":177,"column":1}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":53}},"19":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":14}},"21":{"start":{"line":58,"column":2},"end":{"line":61,"column":3}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":77}},"23":{"start":{"line":60,"column":4},"end":{"line":60,"column":105}},"24":{"start":{"line":62,"column":2},"end":{"line":62,"column":71}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"26":{"start":{"line":64,"column":2},"end":{"line":64,"column":50}},"27":{"start":{"line":65,"column":2},"end":{"line":65,"column":74}},"28":{"start":{"line":66,"column":2},"end":{"line":66,"column":27}},"29":{"start":{"line":67,"column":2},"end":{"line":67,"column":16}},"30":{"start":{"line":68,"column":2},"end":{"line":68,"column":18}},"31":{"start":{"line":69,"column":2},"end":{"line":69,"column":22}},"32":{"start":{"line":70,"column":2},"end":{"line":70,"column":19}},"33":{"start":{"line":71,"column":2},"end":{"line":175,"column":3}},"34":{"start":{"line":72,"column":4},"end":{"line":72,"column":30}},"35":{"start":{"line":73,"column":4},"end":{"line":73,"column":24}},"36":{"start":{"line":74,"column":4},"end":{"line":162,"column":5}},"37":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"38":{"start":{"line":77,"column":10},"end":{"line":77,"column":16}},"39":{"start":{"line":79,"column":8},"end":{"line":82,"column":9}},"40":{"start":{"line":80,"column":10},"end":{"line":80,"column":25}},"41":{"start":{"line":81,"column":10},"end":{"line":81,"column":16}},"42":{"start":{"line":83,"column":8},"end":{"line":87,"column":9}},"43":{"start":{"line":84,"column":10},"end":{"line":84,"column":25}},"44":{"start":{"line":85,"column":10},"end":{"line":85,"column":29}},"45":{"start":{"line":86,"column":10},"end":{"line":86,"column":16}},"46":{"start":{"line":88,"column":8},"end":{"line":91,"column":9}},"47":{"start":{"line":89,"column":10},"end":{"line":89,"column":18}},"48":{"start":{"line":90,"column":10},"end":{"line":90,"column":16}},"49":{"start":{"line":92,"column":8},"end":{"line":92,"column":23}},"50":{"start":{"line":93,"column":8},"end":{"line":93,"column":14}},"51":{"start":{"line":95,"column":8},"end":{"line":98,"column":9}},"52":{"start":{"line":96,"column":10},"end":{"line":96,"column":36}},"53":{"start":{"line":97,"column":10},"end":{"line":97,"column":16}},"54":{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},"55":{"start":{"line":100,"column":8},"end":{"line":100,"column":14}},"56":{"start":{"line":102,"column":8},"end":{"line":105,"column":9}},"57":{"start":{"line":103,"column":10},"end":{"line":103,"column":32}},"58":{"start":{"line":104,"column":10},"end":{"line":104,"column":16}},"59":{"start":{"line":106,"column":8},"end":{"line":106,"column":23}},"60":{"start":{"line":107,"column":8},"end":{"line":107,"column":14}},"61":{"start":{"line":110,"column":8},"end":{"line":116,"column":9}},"62":{"start":{"line":111,"column":10},"end":{"line":115,"column":11}},"63":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"64":{"start":{"line":113,"column":17},"end":{"line":115,"column":11}},"65":{"start":{"line":114,"column":12},"end":{"line":114,"column":25}},"66":{"start":{"line":117,"column":8},"end":{"line":117,"column":23}},"67":{"start":{"line":118,"column":8},"end":{"line":118,"column":14}},"68":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"69":{"start":{"line":122,"column":10},"end":{"line":122,"column":29}},"70":{"start":{"line":123,"column":10},"end":{"line":123,"column":16}},"71":{"start":{"line":125,"column":8},"end":{"line":125,"column":23}},"72":{"start":{"line":126,"column":8},"end":{"line":126,"column":14}},"73":{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},"74":{"start":{"line":129,"column":10},"end":{"line":129,"column":18}},"75":{"start":{"line":130,"column":10},"end":{"line":130,"column":16}},"76":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"77":{"start":{"line":133,"column":10},"end":{"line":133,"column":16}},"78":{"start":{"line":135,"column":8},"end":{"line":151,"column":9}},"79":{"start":{"line":136,"column":10},"end":{"line":136,"column":23}},"80":{"start":{"line":137,"column":10},"end":{"line":137,"column":31}},"81":{"start":{"line":138,"column":10},"end":{"line":149,"column":11}},"82":{"start":{"line":139,"column":12},"end":{"line":139,"column":30}},"83":{"start":{"line":140,"column":12},"end":{"line":140,"column":68}},"84":{"start":{"line":141,"column":12},"end":{"line":145,"column":13}},"85":{"start":{"line":142,"column":14},"end":{"line":142,"column":35}},"86":{"start":{"line":144,"column":14},"end":{"line":144,"column":42}},"87":{"start":{"line":146,"column":12},"end":{"line":146,"column":28}},"88":{"start":{"line":148,"column":12},"end":{"line":148,"column":40}},"89":{"start":{"line":150,"column":10},"end":{"line":150,"column":16}},"90":{"start":{"line":152,"column":8},"end":{"line":157,"column":9}},"91":{"start":{"line":153,"column":10},"end":{"line":153,"column":23}},"92":{"start":{"line":154,"column":10},"end":{"line":154,"column":31}},"93":{"start":{"line":155,"column":10},"end":{"line":155,"column":26}},"94":{"start":{"line":156,"column":10},"end":{"line":156,"column":16}},"95":{"start":{"line":158,"column":8},"end":{"line":158,"column":23}},"96":{"start":{"line":159,"column":8},"end":{"line":159,"column":14}},"97":{"start":{"line":161,"column":8},"end":{"line":161,"column":23}},"98":{"start":{"line":163,"column":4},"end":{"line":174,"column":5}},"99":{"start":{"line":164,"column":6},"end":{"line":173,"column":7}},"100":{"start":{"line":166,"column":10},"end":{"line":166,"column":25}},"101":{"start":{"line":167,"column":10},"end":{"line":167,"column":16}},"102":{"start":{"line":169,"column":10},"end":{"line":171,"column":11}},"103":{"start":{"line":170,"column":12},"end":{"line":170,"column":31}},"104":{"start":{"line":172,"column":10},"end":{"line":172,"column":16}},"105":{"start":{"line":176,"column":2},"end":{"line":176,"column":16}},"106":{"start":{"line":178,"column":0},"end":{"line":178,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"5":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":49},"end":{"line":60,"column":51}},{"start":{"line":60,"column":54},"end":{"line":60,"column":104}}]},"6":{"line":74,"type":"switch","locations":[{"start":{"line":75,"column":6},"end":{"line":93,"column":14}},{"start":{"line":94,"column":6},"end":{"line":100,"column":14}},{"start":{"line":101,"column":6},"end":{"line":107,"column":14}},{"start":{"line":108,"column":6},"end":{"line":108,"column":15}},{"start":{"line":109,"column":6},"end":{"line":118,"column":14}},{"start":{"line":119,"column":6},"end":{"line":119,"column":15}},{"start":{"line":120,"column":6},"end":{"line":126,"column":14}},{"start":{"line":127,"column":6},"end":{"line":159,"column":14}},{"start":{"line":160,"column":6},"end":{"line":161,"column":23}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"10":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":32}},{"start":{"line":95,"column":36},"end":{"line":95,"column":61}}]},"13":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"14":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":39}},{"start":{"line":102,"column":43},"end":{"line":102,"column":69}}]},"15":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"16":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":10}},{"start":{"line":111,"column":10},"end":{"line":111,"column":10}}]},"17":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":113,"column":17}},{"start":{"line":113,"column":17},"end":{"line":113,"column":17}}]},"18":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"19":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":39}},{"start":{"line":121,"column":43},"end":{"line":121,"column":73}}]},"20":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"21":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"22":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"23":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":10}},{"start":{"line":138,"column":10},"end":{"line":138,"column":10}}]},"24":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"25":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"26":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":39}},{"start":{"line":152,"column":43},"end":{"line":152,"column":66}},{"start":{"line":152,"column":70},"end":{"line":152,"column":96}}]},"27":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"28":{"line":164,"type":"switch","locations":[{"start":{"line":165,"column":8},"end":{"line":167,"column":16}},{"start":{"line":168,"column":8},"end":{"line":172,"column":16}}]},"29":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":10}},{"start":{"line":169,"column":10},"end":{"line":169,"column":10}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = trim;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _has_substring_at_index = require('./helper/string/has_substring_at_index');","","var _has_substring_at_index2 = _interopRequireDefault(_has_substring_at_index);","","var _parse_tag_list = require('./helper/strip/parse_tag_list');","","var _parse_tag_list2 = _interopRequireDefault(_parse_tag_list);","","var _parse_tag_name = require('./helper/strip/parse_tag_name');","","var _parse_tag_name2 = _interopRequireDefault(_parse_tag_name);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var STATE_OUTPUT = 0;","var STATE_HTML = 1;","var STATE_EXCLAMATION = 2;","var STATE_COMMENT = 3;","","/**"," * Strips HTML tags from `subject`."," *"," * @function stripTags"," * @static"," * @since 1.1.0"," * @memberOf Strip"," * @param {string} [subject=''] The string to strip from."," * @param {string|Array} [allowableTags] The string `'<tag1><tag2>'` or array `['tag1', 'tag2']` of tags that should not be stripped."," * @param {string} [replacement=''] The string to replace the stripped tag."," * @return {string} Returns the stripped string."," * @example"," *"," * v.stripTags('<span><a href=\"#\">Summer</a> is nice</span>');"," * // => 'Summer is nice'"," *"," * v.stripTags('<span><i>Winter</i> is <b>cold</b></span>', ['b', 'i']);"," * // => '<i>Winter</i> is <b>cold</b>'"," *"," * v.stripTags('Sun<br/>set', '', '-');"," * // => 'Sun-set'"," */","function trim(subject, allowableTags, replacement) {","  subject = (0, _coerce_to_string2.default)(subject);","  if (subject === '') {","    return '';","  }","  if (!Array.isArray(allowableTags)) {","    var allowableTagsString = (0, _coerce_to_string2.default)(allowableTags);","    allowableTags = allowableTagsString === '' ? [] : (0, _parse_tag_list2.default)(allowableTagsString);","  }","  var replacementString = (0, _coerce_to_string2.default)(replacement);","  var length = subject.length;","  var hasAllowableTags = allowableTags.length > 0;","  var hasSubstring = _has_substring_at_index2.default.bind(null, subject);","  var state = STATE_OUTPUT;","  var depth = 0;","  var output = '';","  var tagContent = '';","  var quote = null;","  for (var index = 0; index < length; index++) {","    var char = subject[index];","    var advance = false;","    switch (char) {","      case '<':","        if (quote) {","          break;","        }","        if (hasSubstring('< ', index, false)) {","          advance = true;","          break;","        }","        if (state === STATE_OUTPUT) {","          advance = true;","          state = STATE_HTML;","          break;","        }","        if (state === STATE_HTML) {","          depth++;","          break;","        }","        advance = true;","        break;","      case '!':","        if (state === STATE_HTML && hasSubstring('<!', index)) {","          state = STATE_EXCLAMATION;","          break;","        }","        advance = true;","        break;","      case '-':","        if (state === STATE_EXCLAMATION && hasSubstring('!--', index)) {","          state = STATE_COMMENT;","          break;","        }","        advance = true;","        break;","      case '\"':","      case \"'\":","        if (state === STATE_HTML) {","          if (quote === char) {","            quote = null;","          } else if (!quote) {","            quote = char;","          }","        }","        advance = true;","        break;","      case 'E':","      case 'e':","        if (state === STATE_EXCLAMATION && hasSubstring('doctype', index)) {","          state = STATE_HTML;","          break;","        }","        advance = true;","        break;","      case '>':","        if (depth > 0) {","          depth--;","          break;","        }","        if (quote) {","          break;","        }","        if (state === STATE_HTML) {","          quote = null;","          state = STATE_OUTPUT;","          if (hasAllowableTags) {","            tagContent += '>';","            var tagName = (0, _parse_tag_name2.default)(tagContent);","            if (allowableTags.indexOf(tagName.toLowerCase()) !== -1) {","              output += tagContent;","            } else {","              output += replacementString;","            }","            tagContent = '';","          } else {","            output += replacementString;","          }","          break;","        }","        if (state === STATE_EXCLAMATION || state === STATE_COMMENT && hasSubstring('-->', index)) {","          quote = null;","          state = STATE_OUTPUT;","          tagContent = '';","          break;","        }","        advance = true;","        break;","      default:","        advance = true;","    }","    if (advance) {","      switch (state) {","        case STATE_OUTPUT:","          output += char;","          break;","        case STATE_HTML:","          if (hasAllowableTags) {","            tagContent += char;","          }","          break;","      }","    }","  }","  return output;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"26":1,"27":1,"28":1,"29":1,"53":1,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"92":0,"93":0,"95":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"104":0,"106":0,"107":0,"110":0,"111":0,"112":0,"113":0,"114":0,"117":0,"118":0,"121":0,"122":0,"123":0,"125":0,"126":0,"128":0,"129":0,"130":0,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"146":0,"148":0,"150":0,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"159":0,"161":0,"163":0,"164":0,"166":0,"167":0,"169":0,"170":0,"172":0,"176":0,"178":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/has_substring_at_index.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/string/has_substring_at_index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"hasSubstringAtIndex","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":17,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":92}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"6":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":40}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":81}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":56}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":72},"end":{"line":18,"column":84}},{"start":{"line":18,"column":87},"end":{"line":18,"column":91}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":19},"end":{"line":18,"column":39}},{"start":{"line":18,"column":43},"end":{"line":18,"column":69}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = hasSubstringAtIndex;","/**"," * Checks whether `subject` contains substring at specific `index`."," *"," * @ignore"," * @param {string} subject The subject to search in."," * @param {string} substring The substring to search/"," * @param {number} index The index to search substring."," * @param {boolean} lookBehind Whether to look behind (true) or ahead (false)."," * @return {boolean} Returns a boolean whether the substring exists."," */","function hasSubstringAtIndex(subject, substring, index) {","  var lookBehind = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;","","  var indexOffset = 0;","  if (lookBehind) {","    indexOffset = -substring.length + 1;","  }","  var extractedSubstring = subject.substr(index + indexOffset, substring.length);","  return extractedSubstring.toLowerCase() === substring;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"17":1,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/strip/parse_tag_list.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/strip/parse_tag_list.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"parseTagList","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":17,"column":0},"end":{"line":24,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":20}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}},"7":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":28}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = parseTagList;","","var _const = require('../reg_exp/const');","","/**"," * Parses the tags from the string '<tag1><tag2>...<tagN>'."," *"," * @ignore"," * @param {string} tags The string that contains the tags."," * @return {string[]} Returns the array of tag names."," */","function parseTagList(tags) {","  var tagsList = [];","  var match = void 0;","  while ((match = _const.REGEXP_TAG_LIST.exec(tags)) !== null) {","    tagsList.push(match[1]);","  }","  return tagsList;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"17":1,"18":0,"19":0,"20":0,"21":0,"23":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/strip/parse_tag_name.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/strip/parse_tag_name.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"parseTagName","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":19}},"7":{"start":{"line":21,"column":0},"end":{"line":50,"column":1}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":30}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}},"11":{"start":{"line":25,"column":2},"end":{"line":48,"column":3}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":49}},"13":{"start":{"line":27,"column":4},"end":{"line":47,"column":5}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":14}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":27}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":14}},"17":{"start":{"line":34,"column":8},"end":{"line":45,"column":9}},"18":{"start":{"line":35,"column":10},"end":{"line":37,"column":11}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":31}},"20":{"start":{"line":39,"column":10},"end":{"line":41,"column":11}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":41}},"22":{"start":{"line":42,"column":10},"end":{"line":44,"column":11}},"23":{"start":{"line":43,"column":12},"end":{"line":43,"column":28}},"24":{"start":{"line":46,"column":8},"end":{"line":46,"column":14}},"25":{"start":{"line":49,"column":2},"end":{"line":49,"column":17}},"26":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":27,"type":"switch","locations":[{"start":{"line":28,"column":6},"end":{"line":29,"column":14}},{"start":{"line":30,"column":6},"end":{"line":32,"column":14}},{"start":{"line":33,"column":6},"end":{"line":46,"column":14}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":10}},{"start":{"line":35,"column":10},"end":{"line":35,"column":10}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":10}},{"start":{"line":39,"column":10},"end":{"line":39,"column":10}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":10},"end":{"line":42,"column":10}},{"start":{"line":42,"column":10},"end":{"line":42,"column":10}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = parseTagName;","","var _const = require('../reg_exp/const');","","var STATE_START_TAG = 0;","var STATE_NON_WHITESPACE = 1;","var STATE_DONE = 2;","","/**"," * Parses the tag name from html content."," *"," * @ignore"," * @param {string} tagContent The tag content."," * @return {string} Returns the tag name."," */","function parseTagName(tagContent) {","  var state = STATE_START_TAG;","  var tagName = '';","  var index = 0;","  while (state !== STATE_DONE) {","    var char = tagContent[index++].toLowerCase();","    switch (char) {","      case '<':","        break;","      case '>':","        state = STATE_DONE;","        break;","      default:","        if (_const.REGEXP_WHITESPACE.test(char)) {","          if (state === STATE_NON_WHITESPACE) {","            state = STATE_DONE;","          }","        } else {","          if (state === STATE_START_TAG) {","            state = STATE_NON_WHITESPACE;","          }","          if (char !== '/') {","            tagName += char;","          }","        }","        break;","    }","  }","  return tagName;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"11":1,"12":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"46":0,"49":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/substring.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/substring.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"substring","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":34,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":72}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = substring;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not"," * included."," *"," * @function substring"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']         The string to extract from."," * @param  {number} start                The position to start extraction."," * @param  {number} [end=subject.length] The position to end extraction."," * @return {string}                      Returns the extracted string."," * @note Uses native `String.prototype.substring()`"," * @example"," * v.substring('beach', 1);"," * // => 'each'"," *"," * v.substring('ocean', 1, 3);"," * // => 'ea'"," */","function substring(subject, start, end) {","  return (0, _coerce_to_string2.default)(subject).substring(start, end);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"34":1,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/substr.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/substr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"substr","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":72}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = substr;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Extracts from `subject` a string from `start` position a number of `length` characters."," *"," * @function substr"," * @static"," * @since 1.0.0"," * @memberOf Chop"," * @param  {string} [subject='']                 The string to extract from."," * @param  {number} start                        The position to start extraction."," * @param  {number} [length=subject.endOfString] The number of characters to extract. If omitted, extract to the end of `subject`."," * @return {string}                              Returns the extracted string."," * @note Uses native `String.prototype.substr()`"," * @example"," * v.substr('infinite loop', 9);"," * // => 'loop'"," *"," * v.substr('dreams', 2, 2);"," * // => 'ea'"," */","function substr(subject, start, length) {","  return (0, _coerce_to_string2.default)(subject).substr(start, length);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"33":1,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/swap_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/swap_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"swapCase","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"3":{"name":"swapAndConcat","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":31,"column":0},"end":{"line":34,"column":1}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":63}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":59}},"10":{"start":{"line":36,"column":0},"end":{"line":40,"column":1}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":42}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":69}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":46},"end":{"line":39,"column":55}},{"start":{"line":39,"column":58},"end":{"line":39,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = swapCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the uppercase alpha caracters of `subject` to lowercase and lowercase "," * characters to uppercase."," *"," * @function swapCase"," * @static"," * @since 1.3.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to swap the case."," * @return {string}              Returns the converted string."," * @example"," * v.swapCase('League of Shadows');"," * // => 'lEAGE OF sHADOWS'"," *"," * v.swapCase('2 Bees');"," * // => '2 bEES'"," */","function swapCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.split('').reduce(swapAndConcat, '');","}","","function swapAndConcat(swapped, character) {","  var lowerCase = character.toLowerCase();","  var upperCase = character.toUpperCase();","  return swapped + (character === lowerCase ? upperCase : lowerCase);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"31":1,"32":0,"33":0,"36":1,"37":0,"38":0,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/title_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/title_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"titleCase","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":41}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":44},"end":{"line":41,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":68}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":67}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"10":{"start":{"line":37,"column":0},"end":{"line":45,"column":1}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":63}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":71}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":144}},"14":{"start":{"line":41,"column":2},"end":{"line":44,"column":5}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":43}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":123}},"17":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":54},"end":{"line":39,"column":65}},{"start":{"line":39,"column":68},"end":{"line":39,"column":70}}]},"4":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":80},"end":{"line":40,"column":113}},{"start":{"line":40,"column":116},"end":{"line":40,"column":143}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":60},"end":{"line":43,"column":73}},{"start":{"line":43,"column":76},"end":{"line":43,"column":122}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = titleCase;","","var _const_extended = require('./helper/reg_exp/const_extended');","","var _capitalize = require('./capitalize');","","var _capitalize2 = _interopRequireDefault(_capitalize);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the subject to title case."," *"," * @function titleCase"," * @static"," * @since 1.2.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to title case."," * @param  {Array} [ignoreWords] The words that should not be capitalized."," * @return {string}              Returns the title case string."," * @example"," * v.titleCase('learning to fly');"," * // => 'Learning To Fly'"," *"," * v.titleCase('another brick in the wall', ['in', 'the']);"," * // => 'Another Brick in the Wall'"," */","function titleCase(subject, ignoreWords) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var ignoreWordsArray = Array.isArray(ignoreWords) ? ignoreWords : [];","  var wordsRegExp = _const_extended.REGEXP_EXTENDED_ASCII.test(subjectString) ? _const_extended.REGEXP_LATIN_WORD : _const_extended.REGEXP_WORD;","  return subjectString.replace(wordsRegExp, function (word) {","    var lowerCaseWord = word.toLowerCase();","    return ignoreWordsArray.indexOf(lowerCaseWord) !== -1 ? lowerCaseWord : (0, _capitalize2.default)(lowerCaseWord, true);","  });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":2,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"trim","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":47,"column":0},"end":{"line":57,"column":1}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":63}},"17":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":62}},"20":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":32}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":112}},"23":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":23}},{"start":{"line":49,"column":27},"end":{"line":49,"column":47}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = trim;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","var _trim_left = require('./trim_left');","","var _trim_left2 = _interopRequireDefault(_trim_left);","","var _trim_right = require('./trim_right');","","var _trim_right2 = _interopRequireDefault(_trim_right);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Removes whitespaces from left and right sides of the `subject`."," *"," * @function trim"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trim(' Mother nature ');"," * // => 'Mother nature'"," *"," * v.trim('--Earth--', '-');"," * // => 'Earth'"," */","function trim(subject, whitespace) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (whitespace === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = (0, _to_string2.default)(whitespace);","  if ((0, _is_nil2.default)(whitespaceString)) {","    return subjectString.trim();","  }","  return (0, _trim_right2.default)((0, _trim_left2.default)(subjectString, whitespaceString), whitespaceString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim_left.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim_left.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"trimLeft","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":39}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":36},"end":{"line":57,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}},"15":{"start":{"line":47,"column":0},"end":{"line":64,"column":1}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":63}},"17":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":62}},"20":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":62}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":29}},"23":{"start":{"line":57,"column":2},"end":{"line":63,"column":9}},"24":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":21}},"26":{"start":{"line":61,"column":4},"end":{"line":61,"column":28}},"27":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"28":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":23}},{"start":{"line":49,"column":27},"end":{"line":49,"column":47}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":79}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = trimLeft;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _includes = require('./includes');","","var _includes2 = _interopRequireDefault(_includes);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/reg_exp/const');","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var reduce = Array.prototype.reduce;","","/**"," * Removes whitespaces from the left side of the `subject`."," *"," * @function trimLeft"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trimLeft('  Starship Troopers');"," * // => 'Starship Troopers'"," *"," * v.trimLeft('***Mobile Infantry', '*');"," * // => 'Mobile Infantry'"," */","function trimLeft(subject, whitespace) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (whitespace === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = (0, _to_string2.default)(whitespace);","  if ((0, _is_nil2.default)(whitespaceString)) {","    return subjectString.replace(_const.REGEXP_TRIM_LEFT, '');","  }","  var matchWhitespace = true;","  return reduce.call(subjectString, function (trimmed, character) {","    if (matchWhitespace && (0, _includes2.default)(whitespaceString, character)) {","      return trimmed;","    }","    matchWhitespace = false;","    return trimmed + character;","  }, '');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"28":1,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim_right.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/trim_right.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":4,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"trimRight","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":40}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":41},"end":{"line":57,"column":71}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"13":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":46}},"15":{"start":{"line":47,"column":0},"end":{"line":64,"column":1}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":63}},"17":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":62}},"20":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":63}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":29}},"23":{"start":{"line":57,"column":2},"end":{"line":63,"column":9}},"24":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":21}},"26":{"start":{"line":61,"column":4},"end":{"line":61,"column":28}},"27":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"28":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":23}},{"start":{"line":49,"column":27},"end":{"line":49,"column":47}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":79}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = trimRight;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _includes = require('./includes');","","var _includes2 = _interopRequireDefault(_includes);","","var _is_nil = require('./helper/object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","var _const = require('./helper/reg_exp/const');","","var _to_string = require('./helper/string/to_string');","","var _to_string2 = _interopRequireDefault(_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var reduceRight = Array.prototype.reduceRight;","","/**"," * Removes whitespaces from the right side of the `subject`."," *"," * @function trimRight"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param {string} [subject=''] The string to trim."," * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped."," * @return {string} Returns the trimmed string."," * @example"," * v.trimRight('the fire rises   ');"," * // => 'the fire rises'"," *"," * v.trimRight('do you feel in charge?!!!', '!');"," * // => 'do you feel in charge?'"," */","function trimRight(subject, whitespace) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  if (whitespace === '' || subjectString === '') {","    return subjectString;","  }","  var whitespaceString = (0, _to_string2.default)(whitespace);","  if ((0, _is_nil2.default)(whitespaceString)) {","    return subjectString.replace(_const.REGEXP_TRIM_RIGHT, '');","  }","  var matchWhitespace = true;","  return reduceRight.call(subjectString, function (trimmed, character) {","    if (matchWhitespace && (0, _includes2.default)(whitespaceString, character)) {","      return trimmed;","    }","    matchWhitespace = false;","    return character + trimmed;","  }, '');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"28":1,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/tr.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/tr.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":3,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,3],"9":[3,3],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":0,"3":0,"4":3,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":33}}},"2":{"name":"sliceIterator","line":7,"loc":{"start":{"line":7,"column":35},"end":{"line":7,"column":66}}},"3":{"name":"(anonymous_3)","line":7,"loc":{"start":{"line":7,"column":436},"end":{"line":7,"column":454}}},"4":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"5":{"name":"tr","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":31}}},"6":{"name":"extractKeysAndValues","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":38}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":49},"end":{"line":96,"column":64}}},"8":{"name":"sortStringByLength","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":664}},"3":{"start":{"line":7,"column":35},"end":{"line":7,"column":428}},"4":{"start":{"line":7,"column":68},"end":{"line":7,"column":82}},"5":{"start":{"line":7,"column":83},"end":{"line":7,"column":97}},"6":{"start":{"line":7,"column":98},"end":{"line":7,"column":113}},"7":{"start":{"line":7,"column":114},"end":{"line":7,"column":133}},"8":{"start":{"line":7,"column":134},"end":{"line":7,"column":413}},"9":{"start":{"line":7,"column":140},"end":{"line":7,"column":283}},"10":{"start":{"line":7,"column":226},"end":{"line":7,"column":246}},"11":{"start":{"line":7,"column":247},"end":{"line":7,"column":281}},"12":{"start":{"line":7,"column":275},"end":{"line":7,"column":281}},"13":{"start":{"line":7,"column":300},"end":{"line":7,"column":310}},"14":{"start":{"line":7,"column":311},"end":{"line":7,"column":320}},"15":{"start":{"line":7,"column":333},"end":{"line":7,"column":411}},"16":{"start":{"line":7,"column":339},"end":{"line":7,"column":379}},"17":{"start":{"line":7,"column":364},"end":{"line":7,"column":379}},"18":{"start":{"line":7,"column":392},"end":{"line":7,"column":409}},"19":{"start":{"line":7,"column":400},"end":{"line":7,"column":409}},"20":{"start":{"line":7,"column":414},"end":{"line":7,"column":426}},"21":{"start":{"line":7,"column":429},"end":{"line":7,"column":659}},"22":{"start":{"line":7,"column":456},"end":{"line":7,"column":656}},"23":{"start":{"line":7,"column":482},"end":{"line":7,"column":493}},"24":{"start":{"line":7,"column":501},"end":{"line":7,"column":656}},"25":{"start":{"line":7,"column":539},"end":{"line":7,"column":568}},"26":{"start":{"line":7,"column":578},"end":{"line":7,"column":654}},"27":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}},"28":{"start":{"line":11,"column":0},"end":{"line":11,"column":68}},"29":{"start":{"line":13,"column":0},"end":{"line":13,"column":67}},"30":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}},"31":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"32":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"33":{"start":{"line":21,"column":0},"end":{"line":21,"column":57}},"34":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"35":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"36":{"start":{"line":56,"column":0},"end":{"line":92,"column":1}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":63}},"38":{"start":{"line":58,"column":2},"end":{"line":58,"column":20}},"39":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"40":{"start":{"line":60,"column":2},"end":{"line":70,"column":3}},"41":{"start":{"line":61,"column":4},"end":{"line":61,"column":26}},"42":{"start":{"line":62,"column":4},"end":{"line":62,"column":26}},"43":{"start":{"line":64,"column":4},"end":{"line":64,"column":91}},"44":{"start":{"line":66,"column":4},"end":{"line":66,"column":74}},"45":{"start":{"line":68,"column":4},"end":{"line":68,"column":37}},"46":{"start":{"line":69,"column":4},"end":{"line":69,"column":39}},"47":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"48":{"start":{"line":72,"column":4},"end":{"line":72,"column":25}},"49":{"start":{"line":74,"column":2},"end":{"line":74,"column":18}},"50":{"start":{"line":75,"column":2},"end":{"line":75,"column":35}},"51":{"start":{"line":76,"column":2},"end":{"line":76,"column":31}},"52":{"start":{"line":77,"column":2},"end":{"line":90,"column":3}},"53":{"start":{"line":78,"column":4},"end":{"line":78,"column":24}},"54":{"start":{"line":79,"column":4},"end":{"line":79,"column":28}},"55":{"start":{"line":80,"column":4},"end":{"line":88,"column":5}},"56":{"start":{"line":81,"column":6},"end":{"line":81,"column":31}},"57":{"start":{"line":82,"column":6},"end":{"line":87,"column":7}},"58":{"start":{"line":83,"column":8},"end":{"line":83,"column":23}},"59":{"start":{"line":84,"column":8},"end":{"line":84,"column":38}},"60":{"start":{"line":85,"column":8},"end":{"line":85,"column":39}},"61":{"start":{"line":86,"column":8},"end":{"line":86,"column":14}},"62":{"start":{"line":89,"column":4},"end":{"line":89,"column":58}},"63":{"start":{"line":91,"column":2},"end":{"line":91,"column":16}},"64":{"start":{"line":94,"column":0},"end":{"line":100,"column":1}},"65":{"start":{"line":95,"column":2},"end":{"line":95,"column":33}},"66":{"start":{"line":96,"column":2},"end":{"line":98,"column":5}},"67":{"start":{"line":97,"column":4},"end":{"line":97,"column":23}},"68":{"start":{"line":99,"column":2},"end":{"line":99,"column":24}},"69":{"start":{"line":102,"column":0},"end":{"line":107,"column":1}},"70":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"71":{"start":{"line":104,"column":4},"end":{"line":104,"column":13}},"72":{"start":{"line":106,"column":2},"end":{"line":106,"column":44}},"73":{"start":{"line":108,"column":0},"end":{"line":108,"column":36}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":247},"end":{"line":7,"column":247}},{"start":{"line":7,"column":247},"end":{"line":7,"column":247}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":251},"end":{"line":7,"column":252}},{"start":{"line":7,"column":256},"end":{"line":7,"column":273}}]},"3":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":339},"end":{"line":7,"column":339}},{"start":{"line":7,"column":339},"end":{"line":7,"column":339}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":343},"end":{"line":7,"column":346}},{"start":{"line":7,"column":350},"end":{"line":7,"column":362}}]},"5":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":392},"end":{"line":7,"column":392}},{"start":{"line":7,"column":392},"end":{"line":7,"column":392}}]},"6":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":456},"end":{"line":7,"column":456}},{"start":{"line":7,"column":456},"end":{"line":7,"column":456}}]},"7":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":501},"end":{"line":7,"column":501}},{"start":{"line":7,"column":501},"end":{"line":7,"column":501}}]},"8":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"9":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"11":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":36}},{"start":{"line":60,"column":40},"end":{"line":60,"column":68}}]},"12":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"13":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":27},"end":{"line":80,"column":48}},{"start":{"line":80,"column":52},"end":{"line":80,"column":75}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"15":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":24},"end":{"line":89,"column":34}},{"start":{"line":89,"column":37},"end":{"line":89,"column":57}}]},"16":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"17":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":37},"end":{"line":106,"column":38}},{"start":{"line":106,"column":41},"end":{"line":106,"column":43}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();","","exports.default = tr;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","var _is_string = require('./is_string');","","var _is_string2 = _interopRequireDefault(_is_string);","","var _nil_default = require('./helper/undefined/nil_default');","","var _nil_default2 = _interopRequireDefault(_nil_default);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Translates characters or replaces substrings in `subject`."," *"," * @function tr"," * @static"," * @since 1.3.0"," * @memberOf Manipulate"," * @param  {string} [subject=''] The string to translate."," * @param  {string|Object} from The string of characters to translate from. Or an object, then the object keys are replaced with corresponding values (longest keys are tried first)."," * @param  {string} to The string of characters to translate to. Ignored when `from` is an object."," * @return {string} Returns the translated string."," * @example"," * v.tr('hello', 'el', 'ip');"," * // => 'hippo'"," * "," * v.tr('légèreté', 'éè', 'ee');"," * // => 'legerete'"," * "," * v.tr('Yes. The fire rises.', {"," *   'Yes': 'Awesome',"," *   'fire': 'flame'"," * })"," * // => 'Awesome. The flame rises.'"," * "," * v.tr(':where is the birthplace of :what', {"," *   ':where': 'Africa',"," *   ':what': 'Humanity'"," * });"," * // => 'Africa is the birthplace of Humanity'"," * "," */","function tr(subject, from, to) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  var keys = void 0;","  var values = void 0;","  if ((0, _is_string2.default)(from) && (0, _is_string2.default)(to)) {","    keys = from.split('');","    values = to.split('');","  } else {","    var _extractKeysAndValues = extractKeysAndValues((0, _nil_default2.default)(from, {}));","","    var _extractKeysAndValues2 = _slicedToArray(_extractKeysAndValues, 2);","","    keys = _extractKeysAndValues2[0];","    values = _extractKeysAndValues2[1];","  }","  if (keys.length === 0) {","    return subjectString;","  }","  var result = '';","  var valuesLength = values.length;","  var keysLength = keys.length;","  for (var index = 0; index < subjectString.length; index++) {","    var isMatch = false;","    var matchValue = void 0;","    for (var keyIndex = 0; keyIndex < keysLength && keyIndex < valuesLength; keyIndex++) {","      var key = keys[keyIndex];","      if (subjectString.substr(index, key.length) === key) {","        isMatch = true;","        matchValue = values[keyIndex];","        index = index + key.length - 1;","        break;","      }","    }","    result += isMatch ? matchValue : subjectString[index];","  }","  return result;","}","","function extractKeysAndValues(object) {","  var keys = Object.keys(object);","  var values = keys.sort(sortStringByLength).map(function (key) {","    return object[key];","  });","  return [keys, values];","}","","function sortStringByLength(str1, str2) {","  if (str1.length === str2.length) {","    return 0;","  }","  return str1.length < str2.length ? 1 : -1;","}","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":3,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"64":0,"66":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"89":0,"91":0,"94":1,"95":0,"96":0,"97":0,"99":0,"102":1,"103":0,"104":0,"106":0,"108":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/unescape_html.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/unescape_html.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"reduceUnescapedString","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":44}}},"3":{"name":"unescapeHtml","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":21,"column":2}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":52}},"9":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":57}},"11":{"start":{"line":50,"column":0},"end":{"line":53,"column":1}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":63}},"13":{"start":{"line":52,"column":2},"end":{"line":52,"column":65}},"14":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = unescapeHtml;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var unescapeCharactersMap = {","  '<': /(&lt;)|(&#x0*3c;)|(&#0*60;)/gi,","  '>': /(&gt;)|(&#x0*3e;)|(&#0*62;)/gi,","  '&': /(&amp;)|(&#x0*26;)|(&#0*38;)/gi,","  '\"': /(&quot;)|(&#x0*22;)|(&#0*34;)/gi,","  \"'\": /(&#x0*27;)|(&#0*39;)/gi,","  '`': /(&#x0*60;)|(&#0*96;)/gi","};","var characters = Object.keys(unescapeCharactersMap);","","/**"," * Replaces the HTML entities with corresponding characters."," *"," * @ignore"," * @param  {string} string The accumulator string."," * @param  {string} key    The character."," * @return {string}        The string with replaced HTML entity"," */","function reduceUnescapedString(string, key) {","  return string.replace(unescapeCharactersMap[key], key);","}","","/**"," * Unescapes HTML special characters from <code>&amp;lt; &amp;gt; &amp;amp; &amp;quot; &amp;#x27; &amp;#x60;</code>"," * to corresponding <code>< > & ' \" `</code> in <code>subject</code>."," *"," * @function unescapeHtml"," * @static"," * @since 1.0.0"," * @memberOf Escape"," * @param  {string} [subject=''] The string to unescape."," * @return {string}              Returns the unescaped string."," * @example"," * v.unescapeHtml('&lt;p&gt;wonderful world&lt;/p&gt;');"," * // => '<p>wonderful world</p>'"," */","function unescapeHtml(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return characters.reduce(reduceUnescapedString, subjectString);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"22":1,"32":1,"33":0,"50":1,"51":0,"52":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/upper_case.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/upper_case.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"upperCase","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":63}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":37}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = upperCase;","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Converts the `subject` to upper case."," *"," * @function upperCase"," * @static"," * @since 1.0.0"," * @memberOf Case"," * @param  {string} [subject=''] The string to convert to upper case."," * @return {string}              Returns the upper case string."," * @example"," * v.upperCase('school');"," * // => 'SCHOOL'"," */","function upperCase(subject) {","  var subjectString = (0, _coerce_to_string2.default)(subject);","  return subjectString.toUpperCase();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"27":1,"28":0,"29":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/version.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","/**"," * A property that contains the library <a href=\"http://semver.org/\">semantic version number</a>."," * @name version"," * @static"," * @since 1.0.0"," * @memberOf Util"," * @type string"," * @example"," * v.version"," * // => '1.3.0'"," */","var version = '1.3.0';","","exports.default = version;","module.exports = exports['default'];"],"l":{"3":1,"17":1,"19":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/vprintf.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/vprintf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"_toConsumableArray","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}}},"3":{"name":"vprintf","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":61}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":195}},"10":{"start":{"line":18,"column":35},"end":{"line":18,"column":193}},"11":{"start":{"line":18,"column":61},"end":{"line":18,"column":145}},"12":{"start":{"line":18,"column":126},"end":{"line":18,"column":143}},"13":{"start":{"line":18,"column":146},"end":{"line":18,"column":158}},"14":{"start":{"line":18,"column":168},"end":{"line":18,"column":191}},"15":{"start":{"line":39,"column":0},"end":{"line":41,"column":1}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":127}},"17":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":35},"end":{"line":18,"column":35}},{"start":{"line":18,"column":35},"end":{"line":18,"column":35}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = vprintf;","","var _nil_default = require('./helper/undefined/nil_default');","","var _nil_default2 = _interopRequireDefault(_nil_default);","","var _sprintf = require('./sprintf');","","var _sprintf2 = _interopRequireDefault(_sprintf);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","/**"," * Produces a string according to `format`. Works exactly like <a href=\"#sprintf\"><code>sprintf()</code></a>,"," * with the only difference that accepts the formatting arguments in an array `values`.<br/>"," * See <a href=\"#sprintf-format\">here</a> `format` string specifications."," *"," * @function vprintf"," * @static"," * @since 1.0.0"," * @memberOf Format"," * @param  {string} format='']  The format string."," * @param  {Array} replacements The array of replacements to produce the string."," * @return {string}             Returns the produced string."," * @example"," * v.vprintf('%s', ['Welcome'])"," * // => 'Welcome'"," *"," * v.vprintf('%s has %d apples', ['Alexandra', 3]);"," * // => 'Alexandra has 3 apples'"," */","function vprintf(format, replacements) {","  return _sprintf2.default.apply(undefined, [format].concat(_toConsumableArray((0, _nil_default2.default)(replacements, []))));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"39":1,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/word_wrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/word_wrap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":3,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"wordWrap","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":27}}},"3":{"name":"determineOptions","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":69}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":68}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":23}},"15":{"start":{"line":63,"column":0},"end":{"line":110,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":64,"column":87}},"17":{"start":{"line":66,"column":2},"end":{"line":66,"column":63}},"18":{"start":{"line":68,"column":2},"end":{"line":72,"column":34}},"19":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":18}},"21":{"start":{"line":77,"column":2},"end":{"line":77,"column":43}},"22":{"start":{"line":78,"column":2},"end":{"line":78,"column":62}},"23":{"start":{"line":79,"column":2},"end":{"line":79,"column":17}},"24":{"start":{"line":80,"column":2},"end":{"line":80,"column":23}},"25":{"start":{"line":81,"column":2},"end":{"line":105,"column":3}},"26":{"start":{"line":82,"column":4},"end":{"line":85,"column":5}},"27":{"start":{"line":83,"column":6},"end":{"line":83,"column":15}},"28":{"start":{"line":84,"column":6},"end":{"line":84,"column":15}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":71}},"30":{"start":{"line":87,"column":4},"end":{"line":104,"column":5}},"31":{"start":{"line":88,"column":6},"end":{"line":88,"column":73}},"32":{"start":{"line":89,"column":6},"end":{"line":89,"column":33}},"33":{"start":{"line":91,"column":6},"end":{"line":103,"column":7}},"34":{"start":{"line":92,"column":8},"end":{"line":92,"column":76}},"35":{"start":{"line":93,"column":8},"end":{"line":93,"column":24}},"36":{"start":{"line":95,"column":8},"end":{"line":95,"column":67}},"37":{"start":{"line":96,"column":8},"end":{"line":102,"column":9}},"38":{"start":{"line":97,"column":10},"end":{"line":97,"column":77}},"39":{"start":{"line":98,"column":10},"end":{"line":98,"column":37}},"40":{"start":{"line":100,"column":10},"end":{"line":100,"column":52}},"41":{"start":{"line":101,"column":10},"end":{"line":101,"column":33}},"42":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"43":{"start":{"line":107,"column":4},"end":{"line":107,"column":46}},"44":{"start":{"line":109,"column":2},"end":{"line":109,"column":21}},"45":{"start":{"line":119,"column":0},"end":{"line":126,"column":1}},"46":{"start":{"line":120,"column":2},"end":{"line":125,"column":4}},"47":{"start":{"line":127,"column":0},"end":{"line":127,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":69},"end":{"line":64,"column":81}},{"start":{"line":64,"column":84},"end":{"line":64,"column":86}}]},"4":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":36}},{"start":{"line":64,"column":40},"end":{"line":64,"column":66}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":26}},{"start":{"line":74,"column":30},"end":{"line":74,"column":40}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"9":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"11":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = wordWrap;","","var _coerce_to_boolean = require('./helper/boolean/coerce_to_boolean');","","var _coerce_to_boolean2 = _interopRequireDefault(_coerce_to_boolean);","","var _coerce_to_number = require('./helper/number/coerce_to_number');","","var _coerce_to_number2 = _interopRequireDefault(_coerce_to_number);","","var _coerce_to_string = require('./helper/string/coerce_to_string');","","var _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var OPTION_WIDTH = 'width';","var OPTION_NEW_LINE = 'newLine';","var OPTION_INDENT = 'indent';","var OPTION_CUT = 'cut';","","/**"," * Wraps `subject` to a given number of characters using a string break character."," *"," * @function wordWrap"," * @static"," * @since 1.0.0"," * @memberOf Manipulate"," * @param  {string} [subject=''] The string to wrap."," * @param  {Object} [options={}] The wrap options."," * @param  {number} [options.width=75] The number of characters at which to wrap."," * @param  {string} [options.newLine='\\n'] The string to add at the end of line."," * @param  {string} [options.indent='']  The string to intend the line."," * @param  {boolean} [options.cut=false] When `false` (default) does not split the word even if word length is bigger than `width`. <br/>"," *                                       When `true` breaks the word that has length bigger than `width`."," *"," * @return {string} Returns wrapped string."," * @example"," * v.wordWrap('Hello world', {"," *   width: 5"," * });"," * // => 'Hello\\nworld'"," *"," * v.wordWrap('Hello world', {"," *   width: 5,"," *   newLine: '<br/>',"," *   indent: '__'"," * });"," * // => '__Hello<br/>__world'"," *"," * v.wordWrap('Wonderful world', {"," *   width: 5,"," *   cut: true"," * });"," * // => 'Wonde\\nrful\\nworld'"," *"," */","function wordWrap(subject) {","  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","  var subjectString = (0, _coerce_to_string2.default)(subject);","","  var _determineOptions = determineOptions(options),","      width = _determineOptions.width,","      newLine = _determineOptions.newLine,","      indent = _determineOptions.indent,","      cut = _determineOptions.cut;","","  if (subjectString === '' || width <= 0) {","    return indent;","  }","  var subjectLength = subjectString.length;","  var substring = subjectString.substring.bind(subjectString);","  var offset = 0;","  var wrappedLine = '';","  while (subjectLength - offset > width) {","    if (subjectString[offset] === ' ') {","      offset++;","      continue;","    }","    var spaceToWrapAt = subjectString.lastIndexOf(' ', width + offset);","    if (spaceToWrapAt >= offset) {","      wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;","      offset = spaceToWrapAt + 1;","    } else {","      if (cut) {","        wrappedLine += indent + substring(offset, width + offset) + newLine;","        offset += width;","      } else {","        spaceToWrapAt = subjectString.indexOf(' ', width + offset);","        if (spaceToWrapAt >= 0) {","          wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;","          offset = spaceToWrapAt + 1;","        } else {","          wrappedLine += indent + substring(offset);","          offset = subjectLength;","        }","      }","    }","  }","  if (offset < subjectLength) {","    wrappedLine += indent + substring(offset);","  }","  return wrappedLine;","}","","/**"," * Determine the word wrap options. The missing values are filled with defaults."," *"," * @param  {Object} options  The options object."," * @return {Object}          The word wrap options, with default settings if necessary."," * @ignore"," */","function determineOptions(options) {","  return {","    width: (0, _coerce_to_number2.default)(options[OPTION_WIDTH], 75),","    newLine: (0, _coerce_to_string2.default)(options[OPTION_NEW_LINE], '\\n'),","    indent: (0, _coerce_to_string2.default)(options[OPTION_INDENT], ''),","    cut: (0, _coerce_to_boolean2.default)(options[OPTION_CUT], false)","  };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":1,"24":1,"25":1,"63":1,"64":0,"66":0,"68":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"106":0,"107":0,"109":0,"119":1,"120":0,"127":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/to_number.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/number/to_number.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"toNumber","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"8":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = toNumber;","","var _is_nil = require('../object/is_nil');","","var _is_nil2 = _interopRequireDefault(_is_nil);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Get the number representation of the `value`."," * Converts the `value` to a number."," * If `value` is `null` or `undefined`, return `null`."," *"," * @ignore"," * @function toNumber"," * @param  {*} value            The value to convert."," * @return {number|null}        Returns the number representation of `value` or `null` if `value` is `null` or `undefined`."," */","function toNumber(value) {","  if ((0, _is_nil2.default)(value)) {","    return null;","  }","  return Number(value);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"24":1,"25":0,"26":0,"28":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/object/get_global.js":{"path":"/home/travis/build/npmtest/node-npmtest-voca/node_modules/voca/helper/object/get_global.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getGlobalObject","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":24}},"6":{"start":{"line":14,"column":2},"end":{"line":23,"column":3},"skip":true},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":26},"skip":true},"8":{"start":{"line":17,"column":9},"end":{"line":23,"column":3},"skip":true},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":24},"skip":true},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":49},"skip":true},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":22}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2},"skip":true},{"start":{"line":14,"column":2},"end":{"line":14,"column":2},"skip":true}]},"3":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":32},"skip":true},{"start":{"line":14,"column":36},"end":{"line":14,"column":60},"skip":true}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":9},"skip":true},{"start":{"line":17,"column":9},"end":{"line":17,"column":9},"skip":true}]},"5":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":13},"end":{"line":17,"column":37},"skip":true},{"start":{"line":17,"column":41},"end":{"line":17,"column":63},"skip":true}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","var globalObject = null;","","function getGlobalObject() {","  if (globalObject !== null) {","    return globalObject;","  }","  /* istanbul ignore next */","  // It's hard to mock the global variables. This code surely works fine. I hope :)","  if (typeof global === 'object' && global.Object === Object) {","    // NodeJS global object","    globalObject = global;","  } else if (typeof self === 'object' && self.Object === Object) {","    // self property from Window object","    globalObject = self;","  } else {","    // Other cases. Function constructor always has the context as global object","    globalObject = new Function('return this')();","  }","  return globalObject;","}","","exports.default = getGlobalObject;","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"9":0,"10":0,"14":1,"16":1,"17":1,"19":1,"22":1,"24":0,"27":1,"28":1}}}